package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Medicinalproduct.
 * @see .Medicinalproduct
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class MedicinalproductConversion 
{
	public Patient Medicinalproducts(main.templateoutput.Model.Medicinalproduct medicinalproduct) 
	{
			Patient  Medicinalproductobj = new Patient(); 

						Medicinalproductobj.addIdentifier(HapiFHIRHelpers.createIdentifier(medicinalproduct.getMpIdentifierIdentifierUse() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setUse"} **/
						, medicinalproduct.getMpDntfrDntfrTpCcCSstm() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, medicinalproduct.getMpDntfrDntfrTpCcCVrsn() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, medicinalproduct.getMpDntfrDntfrTpCcCCde() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, medicinalproduct.getMpDntfrDntfrTpCcCDsplay() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, medicinalproduct.getMpDntfrDntfrTpCcCSrSlctd() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpDntfrDntfrTpCcTxt() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, setText"} **/
						, medicinalproduct.getMpDntfrDntfrPrdPrdStrt() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, medicinalproduct.getMpDntfrDntfrPrdPrdNd() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, medicinalproduct.getMpIdentifierIdentifierAssigner() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setAssigner"} **/
						, medicinalproduct.getMpIdentifierIdentifierValue() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setValue"} **/
						, medicinalproduct.getMpIdentifierIdentifierSystem() /** { "tree" :"MedicinalProduct.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setSystem"} **/
						));
Medicinalproductobj.setType(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpTypeCcCodingCSystem() /** { "tree" :"MedicinalProduct.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, addCoding, setSystem"} **/
						, medicinalproduct.getMpTypeCcCodingCVersion() /** { "tree" :"MedicinalProduct.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, addCoding, setVersion"} **/
						, medicinalproduct.getMpTypeCcCodingCCode() /** { "tree" :"MedicinalProduct.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, addCoding, setCode"} **/
						, medicinalproduct.getMpTypeCcCodingCDisplay() /** { "tree" :"MedicinalProduct.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, addCoding, setDisplay"} **/
						, medicinalproduct.getMpTypeCcCodingCUserSelected() /** { "tree" :"MedicinalProduct.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpTypeCcText() /** { "tree" :"MedicinalProduct.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, setText"} **/
						));
Medicinalproductobj.setDomain(HapiFHIRHelpers.createCoding(medicinalproduct.getMpDomainCUserSelected() /** { "tree" :"MedicinalProduct.domain", "datatype" : "Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDomain, setUserSelected"} **/
						, medicinalproduct.getMpDomainCCode() /** { "tree" :"MedicinalProduct.domain", "datatype" : "Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDomain, setCode"} **/
						, medicinalproduct.getMpDomainCVersion() /** { "tree" :"MedicinalProduct.domain", "datatype" : "Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDomain, setVersion"} **/
						, medicinalproduct.getMpDomainCDisplay() /** { "tree" :"MedicinalProduct.domain", "datatype" : "Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDomain, setDisplay"} **/
						, medicinalproduct.getMpDomainCSystem() /** { "tree" :"MedicinalProduct.domain", "datatype" : "Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDomain, setSystem"} **/
						));
Medicinalproductobj.setCombinedPharmaceuticalDoseForm(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpCmbndPhrmctclDsFrmCcCdngCSstm() /** { "tree" :"MedicinalProduct.combinedPharmaceuticalDoseForm", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setCombinedPharmaceuticalDoseForm, addCoding, setSystem"} **/
						, medicinalproduct.getMpCmbndPhrmctclDsFrmCcCdngCVrsn() /** { "tree" :"MedicinalProduct.combinedPharmaceuticalDoseForm", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setCombinedPharmaceuticalDoseForm, addCoding, setVersion"} **/
						, medicinalproduct.getMpCmbndPhrmctclDsFrmCcCdngCCde() /** { "tree" :"MedicinalProduct.combinedPharmaceuticalDoseForm", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setCombinedPharmaceuticalDoseForm, addCoding, setCode"} **/
						, medicinalproduct.getMpCmbndPhrmctclDsFrmCcCdngCDsplay() /** { "tree" :"MedicinalProduct.combinedPharmaceuticalDoseForm", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setCombinedPharmaceuticalDoseForm, addCoding, setDisplay"} **/
						, medicinalproduct.getMpCmbndPhrmctclDsFrmCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.combinedPharmaceuticalDoseForm", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setCombinedPharmaceuticalDoseForm, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpCmbndPhrmctclDsFrmCcTxt() /** { "tree" :"MedicinalProduct.combinedPharmaceuticalDoseForm", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setCombinedPharmaceuticalDoseForm, setText"} **/
						));
Medicinalproductobj.setLegalStatusOfSupply(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpLglSttsfSpplCcCdngCSstm() /** { "tree" :"MedicinalProduct.legalStatusOfSupply", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalStatusOfSupply, addCoding, setSystem"} **/
						, medicinalproduct.getMpLglSttsfSpplCcCdngCVrsn() /** { "tree" :"MedicinalProduct.legalStatusOfSupply", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalStatusOfSupply, addCoding, setVersion"} **/
						, medicinalproduct.getMpLglSttsfSpplCcCdngCCde() /** { "tree" :"MedicinalProduct.legalStatusOfSupply", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalStatusOfSupply, addCoding, setCode"} **/
						, medicinalproduct.getMpLglSttsfSpplCcCdngCDsplay() /** { "tree" :"MedicinalProduct.legalStatusOfSupply", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalStatusOfSupply, addCoding, setDisplay"} **/
						, medicinalproduct.getMpLglSttsfSpplCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.legalStatusOfSupply", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalStatusOfSupply, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpLegalStatusOfSupplyCcText() /** { "tree" :"MedicinalProduct.legalStatusOfSupply", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalStatusOfSupply, setText"} **/
						));
Medicinalproductobj.setAdditionalMonitoringIndicator(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpDdtnlMntrngndctrCcCdngCSstm() /** { "tree" :"MedicinalProduct.additionalMonitoringIndicator", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setAdditionalMonitoringIndicator, addCoding, setSystem"} **/
						, medicinalproduct.getMpDdtnlMntrngndctrCcCdngCVrsn() /** { "tree" :"MedicinalProduct.additionalMonitoringIndicator", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setAdditionalMonitoringIndicator, addCoding, setVersion"} **/
						, medicinalproduct.getMpDdtnlMntrngndctrCcCdngCCde() /** { "tree" :"MedicinalProduct.additionalMonitoringIndicator", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setAdditionalMonitoringIndicator, addCoding, setCode"} **/
						, medicinalproduct.getMpDdtnlMntrngndctrCcCdngCDsplay() /** { "tree" :"MedicinalProduct.additionalMonitoringIndicator", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setAdditionalMonitoringIndicator, addCoding, setDisplay"} **/
						, medicinalproduct.getMpDdtnlMntrngndctrCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.additionalMonitoringIndicator", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setAdditionalMonitoringIndicator, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpDdtnlMntrngndctrCcTxt() /** { "tree" :"MedicinalProduct.additionalMonitoringIndicator", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setAdditionalMonitoringIndicator, setText"} **/
						));
Medicinalproductobj.addSpecialMeasures(HapiFHIRHelpers.createstring(medicinalproduct.getMpSpecialMeasuresString() /** { "tree" :"MedicinalProduct.specialMeasures", "datatype" : "string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addSpecialMeasures"} **/
						));
Medicinalproductobj.setPaediatricUseIndicator(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpPdtrcsndctrCcCdngCSstm() /** { "tree" :"MedicinalProduct.paediatricUseIndicator", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPaediatricUseIndicator, addCoding, setSystem"} **/
						, medicinalproduct.getMpPdtrcsndctrCcCdngCVrsn() /** { "tree" :"MedicinalProduct.paediatricUseIndicator", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPaediatricUseIndicator, addCoding, setVersion"} **/
						, medicinalproduct.getMpPdtrcsndctrCcCdngCCde() /** { "tree" :"MedicinalProduct.paediatricUseIndicator", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPaediatricUseIndicator, addCoding, setCode"} **/
						, medicinalproduct.getMpPdtrcsndctrCcCdngCDsplay() /** { "tree" :"MedicinalProduct.paediatricUseIndicator", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPaediatricUseIndicator, addCoding, setDisplay"} **/
						, medicinalproduct.getMpPdtrcsndctrCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.paediatricUseIndicator", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPaediatricUseIndicator, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpPaediatricUseIndicatorCcText() /** { "tree" :"MedicinalProduct.paediatricUseIndicator", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPaediatricUseIndicator, setText"} **/
						));
Medicinalproductobj.addProductClassification(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpPrdctClssfctnCcCdngCSstm() /** { "tree" :"MedicinalProduct.productClassification", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addProductClassification, addCoding, setSystem"} **/
						, medicinalproduct.getMpPrdctClssfctnCcCdngCVrsn() /** { "tree" :"MedicinalProduct.productClassification", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addProductClassification, addCoding, setVersion"} **/
						, medicinalproduct.getMpPrdctClssfctnCcCdngCCde() /** { "tree" :"MedicinalProduct.productClassification", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addProductClassification, addCoding, setCode"} **/
						, medicinalproduct.getMpPrdctClssfctnCcCdngCDsplay() /** { "tree" :"MedicinalProduct.productClassification", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addProductClassification, addCoding, setDisplay"} **/
						, medicinalproduct.getMpPrdctClssfctnCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.productClassification", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addProductClassification, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpProductClassificationCcText() /** { "tree" :"MedicinalProduct.productClassification", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addProductClassification, setText"} **/
						));
Medicinalproductobj.addMarketingStatus(HapiFHIRHelpers.createMarketingStatus(medicinalproduct.getMpMarketingStatusMarketingStatus() /** { "tree" :"MedicinalProduct.marketingStatus", "datatype" : "MarketingStatus", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addMarketingStatus"} **/
						));
Medicinalproductobj.addPharmaceuticalProduct(HapiFHIRHelpers.createReference(medicinalproduct.getMpPharmaceuticalProductReference() /** { "tree" :"MedicinalProduct.pharmaceuticalProduct", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addPharmaceuticalProduct"} **/
						));
Medicinalproductobj.addPackagedMedicinalProduct(HapiFHIRHelpers.createReference(medicinalproduct.getMpPackagedMpReference() /** { "tree" :"MedicinalProduct.packagedMedicinalProduct", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addPackagedMedicinalProduct"} **/
						));
Medicinalproductobj.addAttachedDocument(HapiFHIRHelpers.createReference(medicinalproduct.getMpAttachedDocumentReference() /** { "tree" :"MedicinalProduct.attachedDocument", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAttachedDocument"} **/
						));
Medicinalproductobj.addMasterFile(HapiFHIRHelpers.createReference(medicinalproduct.getMpMasterFileReference() /** { "tree" :"MedicinalProduct.masterFile", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addMasterFile"} **/
						));
Medicinalproductobj.addContact(HapiFHIRHelpers.createReference(medicinalproduct.getMpContactReference() /** { "tree" :"MedicinalProduct.contact", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact"} **/
						));
Medicinalproductobj.addClinicalTrial(HapiFHIRHelpers.createReference(medicinalproduct.getMpClinicalTrialReference() /** { "tree" :"MedicinalProduct.clinicalTrial", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addClinicalTrial"} **/
						));
Medicinalproductobj.setProductName(HapiFHIRHelpers.createstring(medicinalproduct.getMpNameProductNameString() /** { "tree" :"MedicinalProduct.name.productName", "datatype" : "string", "cardinality" : "Required", "elementtree" : ["addName"] , "methodName" : "setProductName"} **/
						));
Medicinalproductobj.setPart(HapiFHIRHelpers.createstring(medicinalproduct.getMpNameNamePartPartString() /** { "tree" :"MedicinalProduct.name.namePart.part", "datatype" : "string", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart"] , "methodName" : "setPart"} **/
						));
Medicinalproductobj.setType(HapiFHIRHelpers.createCoding(medicinalproduct.getMpNmNmPrtTpCSrSlctd() /** { "tree" :"MedicinalProduct.name.namePart.type", "datatype" : "Coding, boolean", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart"] , "methodName" : "setType, setUserSelected"} **/
						, medicinalproduct.getMpNameNamePartTypeCCode() /** { "tree" :"MedicinalProduct.name.namePart.type", "datatype" : "Coding, code", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart"] , "methodName" : "setType, setCode"} **/
						, medicinalproduct.getMpNameNamePartTypeCVersion() /** { "tree" :"MedicinalProduct.name.namePart.type", "datatype" : "Coding, string", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart"] , "methodName" : "setType, setVersion"} **/
						, medicinalproduct.getMpNameNamePartTypeCDisplay() /** { "tree" :"MedicinalProduct.name.namePart.type", "datatype" : "Coding, string", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart"] , "methodName" : "setType, setDisplay"} **/
						, medicinalproduct.getMpNameNamePartTypeCSystem() /** { "tree" :"MedicinalProduct.name.namePart.type", "datatype" : "Coding, uri", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart"] , "methodName" : "setType, setSystem"} **/
						));
Medicinalproductobj.setCountry(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpNmCntrLnggCntrCcCdngCSstm() /** { "tree" :"MedicinalProduct.name.countryLanguage.country", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setCountry, addCoding, setSystem"} **/
						, medicinalproduct.getMpNmCntrLnggCntrCcCdngCVrsn() /** { "tree" :"MedicinalProduct.name.countryLanguage.country", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setCountry, addCoding, setVersion"} **/
						, medicinalproduct.getMpNmCntrLnggCntrCcCdngCCde() /** { "tree" :"MedicinalProduct.name.countryLanguage.country", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setCountry, addCoding, setCode"} **/
						, medicinalproduct.getMpNmCntrLnggCntrCcCdngCDsplay() /** { "tree" :"MedicinalProduct.name.countryLanguage.country", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setCountry, addCoding, setDisplay"} **/
						, medicinalproduct.getMpNmCntrLnggCntrCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.name.countryLanguage.country", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setCountry, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpNmCntrLnggCntrCcTxt() /** { "tree" :"MedicinalProduct.name.countryLanguage.country", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setCountry, setText"} **/
						));
Medicinalproductobj.setJurisdiction(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpNmCntrLnggJrsdctnCcCdngCSstm() /** { "tree" :"MedicinalProduct.name.countryLanguage.jurisdiction", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setJurisdiction, addCoding, setSystem"} **/
						, medicinalproduct.getMpNmCntrLnggJrsdctnCcCdngCVrsn() /** { "tree" :"MedicinalProduct.name.countryLanguage.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setJurisdiction, addCoding, setVersion"} **/
						, medicinalproduct.getMpNmCntrLnggJrsdctnCcCdngCCde() /** { "tree" :"MedicinalProduct.name.countryLanguage.jurisdiction", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setJurisdiction, addCoding, setCode"} **/
						, medicinalproduct.getMpNmCntrLnggJrsdctnCcCdngCDsplay() /** { "tree" :"MedicinalProduct.name.countryLanguage.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setJurisdiction, addCoding, setDisplay"} **/
						, medicinalproduct.getMpNmCntrLnggJrsdctnCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.name.countryLanguage.jurisdiction", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setJurisdiction, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpNmCntrLnggJrsdctnCcTxt() /** { "tree" :"MedicinalProduct.name.countryLanguage.jurisdiction", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setJurisdiction, setText"} **/
						));
Medicinalproductobj.setLanguage(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpNmCntrLnggLnggCcCdngCSstm() /** { "tree" :"MedicinalProduct.name.countryLanguage.language", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setLanguage, addCoding, setSystem"} **/
						, medicinalproduct.getMpNmCntrLnggLnggCcCdngCVrsn() /** { "tree" :"MedicinalProduct.name.countryLanguage.language", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setLanguage, addCoding, setVersion"} **/
						, medicinalproduct.getMpNmCntrLnggLnggCcCdngCCde() /** { "tree" :"MedicinalProduct.name.countryLanguage.language", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setLanguage, addCoding, setCode"} **/
						, medicinalproduct.getMpNmCntrLnggLnggCcCdngCDsplay() /** { "tree" :"MedicinalProduct.name.countryLanguage.language", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setLanguage, addCoding, setDisplay"} **/
						, medicinalproduct.getMpNmCntrLnggLnggCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.name.countryLanguage.language", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setLanguage, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpNmCntrLnggLnggCcTxt() /** { "tree" :"MedicinalProduct.name.countryLanguage.language", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addName", "addNamePart", "addCountryLanguage"] , "methodName" : "setLanguage, setText"} **/
						));
Medicinalproductobj.addCrossReference(HapiFHIRHelpers.createIdentifier(medicinalproduct.getMpCrossReferenceIdentifierUse() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setUse"} **/
						, medicinalproduct.getMpCrssRfrncDntfrTpCcCSstm() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setType, addCoding, setSystem"} **/
						, medicinalproduct.getMpCrssRfrncDntfrTpCcCVrsn() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setType, addCoding, setVersion"} **/
						, medicinalproduct.getMpCrssRfrncDntfrTpCcCCde() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setType, addCoding, setCode"} **/
						, medicinalproduct.getMpCrssRfrncDntfrTpCcCDsplay() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setType, addCoding, setDisplay"} **/
						, medicinalproduct.getMpCrssRfrncDntfrTpCcCSrSlctd() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setType, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpCrssRfrncDntfrTpCcTxt() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setType, setText"} **/
						, medicinalproduct.getMpCrssRfrncDntfrPrdPrdStrt() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setPeriod, setStart"} **/
						, medicinalproduct.getMpCrssRfrncDntfrPrdPrdNd() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setPeriod, setEnd"} **/
						, medicinalproduct.getMpCrssRfrncDntfrSsgnr() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setAssigner"} **/
						, medicinalproduct.getMpCrossReferenceIdentifierValue() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setValue"} **/
						, medicinalproduct.getMpCrssRfrncDntfrSstm() /** { "tree" :"MedicinalProduct.crossReference", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCrossReference, setSystem"} **/
						));
Medicinalproductobj.setOperationType(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpMnfcBsprPrtnTpCcCdngCSstm() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.operationType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setOperationType, addCoding, setSystem"} **/
						, medicinalproduct.getMpMnfcBsprPrtnTpCcCdngCVrsn() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.operationType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setOperationType, addCoding, setVersion"} **/
						, medicinalproduct.getMpMnfcBsprPrtnTpCcCdngCCde() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.operationType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setOperationType, addCoding, setCode"} **/
						, medicinalproduct.getMpMnfcBsprPrtnTpCcCdngCDsplay() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.operationType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setOperationType, addCoding, setDisplay"} **/
						, medicinalproduct.getMpMnfcBsprPrtnTpCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.operationType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setOperationType, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpMnfcBsprPrtnTpCcTxt() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.operationType", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setOperationType, setText"} **/
						));
Medicinalproductobj.setAuthorisationReferenceNumber(HapiFHIRHelpers.createIdentifier(medicinalproduct.getMpMnfcBsprThRfNmDntfrSe() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, code", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setUse"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrTpCcCSstm() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setType, addCoding, setSystem"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrTpCcCVrsn() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setType, addCoding, setVersion"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrTpCcCCde() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setType, addCoding, setCode"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrTpCcCDsplay() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setType, addCoding, setDisplay"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrTpCcCSrSlctd() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setType, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrTpCcTxt() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setType, setText"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrPrdPrdStrt() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setPeriod, setStart"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrPrdPrdNd() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setPeriod, setEnd"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrSsgnr() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, Reference", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setAssigner"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrVlue() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, string", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setValue"} **/
						, medicinalproduct.getMpMnfcBsprThRfNmDntfrSstm() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber", "datatype" : "Identifier, uri", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setAuthorisationReferenceNumber, setSystem"} **/
						));
Medicinalproductobj.setEffectiveDate(HapiFHIRHelpers.createdateTime(medicinalproduct.getMpMnfcBsprFfctvDtDtTme() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.effectiveDate", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setEffectiveDate"} **/
						));
Medicinalproductobj.setConfidentialityIndicator(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpMnfcBsprCnfdntltndctrCcCdngCSstm() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.confidentialityIndicator", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setConfidentialityIndicator, addCoding, setSystem"} **/
						, medicinalproduct.getMpMnfcBsprCnfdntltndctrCcCdngCVrsn() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.confidentialityIndicator", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setConfidentialityIndicator, addCoding, setVersion"} **/
						, medicinalproduct.getMpMnfcBsprCnfdntltndctrCcCdngCCde() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.confidentialityIndicator", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setConfidentialityIndicator, addCoding, setCode"} **/
						, medicinalproduct.getMpMnfcBsprCnfdntltndctrCcCdngCDsplay() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.confidentialityIndicator", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setConfidentialityIndicator, addCoding, setDisplay"} **/
						, medicinalproduct.getMpMnfcBsprCnfdntltndctrCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.confidentialityIndicator", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setConfidentialityIndicator, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpMnfcBsprCnfdntltndctrCcTxt() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.confidentialityIndicator", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setConfidentialityIndicator, setText"} **/
						));
Medicinalproductobj.addManufacturer(HapiFHIRHelpers.createReference(medicinalproduct.getMpMnfcBsprMnfctrrRfrnce() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.manufacturer", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "addManufacturer"} **/
						));
Medicinalproductobj.setRegulator(HapiFHIRHelpers.createReference(medicinalproduct.getMpMnfcBsprRgltrRfrnce() /** { "tree" :"MedicinalProduct.manufacturingBusinessOperation.regulator", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["addManufacturingBusinessOperation"] , "methodName" : "setRegulator"} **/
						));
Medicinalproductobj.addIdentifier(HapiFHIRHelpers.createIdentifier(medicinalproduct.getMpSpclDsgntnDntfrDntfrSe() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setUse"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrTpCcCSstm() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrTpCcCVrsn() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrTpCcCCde() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrTpCcCDsplay() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrTpCcCSrSlctd() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrTpCcTxt() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setType, setText"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrPrdPrdStrt() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrPrdPrdNd() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrSsgnr() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setAssigner"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrVlue() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setValue"} **/
						, medicinalproduct.getMpSpclDsgntnDntfrDntfrSstm() /** { "tree" :"MedicinalProduct.specialDesignation.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : ["addSpecialDesignation"] , "methodName" : "addIdentifier, setSystem"} **/
						));
Medicinalproductobj.setType(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpSpclDsgntnTpCcCdngCSstm() /** { "tree" :"MedicinalProduct.specialDesignation.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setType, addCoding, setSystem"} **/
						, medicinalproduct.getMpSpclDsgntnTpCcCdngCVrsn() /** { "tree" :"MedicinalProduct.specialDesignation.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setType, addCoding, setVersion"} **/
						, medicinalproduct.getMpSpclDsgntnTpCcCdngCCde() /** { "tree" :"MedicinalProduct.specialDesignation.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setType, addCoding, setCode"} **/
						, medicinalproduct.getMpSpclDsgntnTpCcCdngCDsplay() /** { "tree" :"MedicinalProduct.specialDesignation.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, medicinalproduct.getMpSpclDsgntnTpCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.specialDesignation.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpSpecialDesignationTypeCcText() /** { "tree" :"MedicinalProduct.specialDesignation.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setType, setText"} **/
						));
Medicinalproductobj.setIntendedUse(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpSpclDsgntnNtnddsCcCdngCSstm() /** { "tree" :"MedicinalProduct.specialDesignation.intendedUse", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIntendedUse, addCoding, setSystem"} **/
						, medicinalproduct.getMpSpclDsgntnNtnddsCcCdngCVrsn() /** { "tree" :"MedicinalProduct.specialDesignation.intendedUse", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIntendedUse, addCoding, setVersion"} **/
						, medicinalproduct.getMpSpclDsgntnNtnddsCcCdngCCde() /** { "tree" :"MedicinalProduct.specialDesignation.intendedUse", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIntendedUse, addCoding, setCode"} **/
						, medicinalproduct.getMpSpclDsgntnNtnddsCcCdngCDsplay() /** { "tree" :"MedicinalProduct.specialDesignation.intendedUse", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIntendedUse, addCoding, setDisplay"} **/
						, medicinalproduct.getMpSpclDsgntnNtnddsCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.specialDesignation.intendedUse", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIntendedUse, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpSpclDsgntnNtnddsCcTxt() /** { "tree" :"MedicinalProduct.specialDesignation.intendedUse", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIntendedUse, setText"} **/
						));
Medicinalproductobj.setIndicationCodeableconcept(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpSpclDsgntnNdctnCdblcncptCcCdngCSstm() /** { "tree" :"MedicinalProduct.specialDesignation.indicationCodeableconcept", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIndicationCodeableconcept, addCoding, setSystem"} **/
						, medicinalproduct.getMpSpclDsgntnNdctnCdblcncptCcCdngCVrsn() /** { "tree" :"MedicinalProduct.specialDesignation.indicationCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIndicationCodeableconcept, addCoding, setVersion"} **/
						, medicinalproduct.getMpSpclDsgntnNdctnCdblcncptCcCdngCCde() /** { "tree" :"MedicinalProduct.specialDesignation.indicationCodeableconcept", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIndicationCodeableconcept, addCoding, setCode"} **/
						, medicinalproduct.getMpSpclDsgntnNdctnCdblcncptCcCdngCDsplay() /** { "tree" :"MedicinalProduct.specialDesignation.indicationCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIndicationCodeableconcept, addCoding, setDisplay"} **/
						, medicinalproduct.getMpSpclDsgntnNdctnCdblcncptCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.specialDesignation.indicationCodeableconcept", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIndicationCodeableconcept, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpSpclDsgntnNdctnCdblcncptCcTxt() /** { "tree" :"MedicinalProduct.specialDesignation.indicationCodeableconcept", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIndicationCodeableconcept, setText"} **/
						));
Medicinalproductobj.setIndicationReference(medicinalproductindication)(HapiFHIRHelpers.createReference(medicinalproduct.getMpSpclDsgntnNdctnRfrncRfrnce() /** { "tree" :"MedicinalProduct.specialDesignation.indicationReference", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setIndicationReference(medicinalproductindication)"} **/
						));
Medicinalproductobj.setStatus(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpSpclDsgntnSttsCcCdngCSstm() /** { "tree" :"MedicinalProduct.specialDesignation.status", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setStatus, addCoding, setSystem"} **/
						, medicinalproduct.getMpSpclDsgntnSttsCcCdngCVrsn() /** { "tree" :"MedicinalProduct.specialDesignation.status", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setStatus, addCoding, setVersion"} **/
						, medicinalproduct.getMpSpclDsgntnSttsCcCdngCCde() /** { "tree" :"MedicinalProduct.specialDesignation.status", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setStatus, addCoding, setCode"} **/
						, medicinalproduct.getMpSpclDsgntnSttsCcCdngCDsplay() /** { "tree" :"MedicinalProduct.specialDesignation.status", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setStatus, addCoding, setDisplay"} **/
						, medicinalproduct.getMpSpclDsgntnSttsCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.specialDesignation.status", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setStatus, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpSpclDsgntnSttsCcTxt() /** { "tree" :"MedicinalProduct.specialDesignation.status", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setStatus, setText"} **/
						));
Medicinalproductobj.setDate(HapiFHIRHelpers.createdateTime(medicinalproduct.getMpSpclDsgntnDtDtTme() /** { "tree" :"MedicinalProduct.specialDesignation.date", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setDate"} **/
						));
Medicinalproductobj.setSpecies(HapiFHIRHelpers.createCodeableConcept(medicinalproduct.getMpSpclDsgntnSpcsCcCdngCSstm() /** { "tree" :"MedicinalProduct.specialDesignation.species", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setSpecies, addCoding, setSystem"} **/
						, medicinalproduct.getMpSpclDsgntnSpcsCcCdngCVrsn() /** { "tree" :"MedicinalProduct.specialDesignation.species", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setSpecies, addCoding, setVersion"} **/
						, medicinalproduct.getMpSpclDsgntnSpcsCcCdngCCde() /** { "tree" :"MedicinalProduct.specialDesignation.species", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setSpecies, addCoding, setCode"} **/
						, medicinalproduct.getMpSpclDsgntnSpcsCcCdngCDsplay() /** { "tree" :"MedicinalProduct.specialDesignation.species", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setSpecies, addCoding, setDisplay"} **/
						, medicinalproduct.getMpSpclDsgntnSpcsCcCdngCSrSlctd() /** { "tree" :"MedicinalProduct.specialDesignation.species", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setSpecies, addCoding, setUserSelected"} **/
						, medicinalproduct.getMpSpclDsgntnSpcsCcTxt() /** { "tree" :"MedicinalProduct.specialDesignation.species", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecialDesignation"] , "methodName" : "setSpecies, setText"} **/
		));
	}
}
