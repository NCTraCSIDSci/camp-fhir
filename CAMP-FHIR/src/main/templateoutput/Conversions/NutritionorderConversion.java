package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Nutritionorder.
 * @see .Nutritionorder
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class NutritionorderConversion 
{
	public Patient Nutritionorders(main.templateoutput.Model.Nutritionorder nutritionorder) 
	{
			Patient  Nutritionorderobj = new Patient(); 

						Nutritionorderobj.addIdentifier(HapiFHIRHelpers.createIdentifier(nutritionorder.getNtrtnrdrDntfrDntfrSe() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setUse"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrTpCcCSstm() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrTpCcCVrsn() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrTpCcCCde() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrTpCcCDsplay() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrTpCcCSrSlctd() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrTpCcTxt() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, setText"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrPrdPrdStrt() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrPrdPrdNd() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrSsgnr() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setAssigner"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrVlue() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setValue"} **/
						, nutritionorder.getNtrtnrdrDntfrDntfrSstm() /** { "tree" :"NutritionOrder.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setSystem"} **/
						));
Nutritionorderobj.addInstantiatesCanonical(HapiFHIRHelpers.createcanonical(nutritionorder.getNtrtnrdrNstnttsCnnclCnncl() /** { "tree" :"NutritionOrder.instantiatesCanonical", "datatype" : "canonical", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addInstantiatesCanonical"} **/
						));
Nutritionorderobj.addInstantiatesUri(HapiFHIRHelpers.createuri(nutritionorder.getNutritionOrderInstantiatesUriUri() /** { "tree" :"NutritionOrder.instantiatesUri", "datatype" : "uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addInstantiatesUri"} **/
						));
Nutritionorderobj.addInstantiates(HapiFHIRHelpers.createuri(nutritionorder.getNutritionOrderInstantiatesUri() /** { "tree" :"NutritionOrder.instantiates", "datatype" : "uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addInstantiates"} **/
						));
Nutritionorderobj.setStatus(HapiFHIRHelpers.createcode(nutritionorder.getNutritionOrderStatusCode() /** { "tree" :"NutritionOrder.status", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setStatus"} **/
						));
Nutritionorderobj.setIntent(HapiFHIRHelpers.createcode(nutritionorder.getNutritionOrderIntentCode() /** { "tree" :"NutritionOrder.intent", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setIntent"} **/
						));
Nutritionorderobj.setPatient(HapiFHIRHelpers.createReference(nutritionorder.getNutritionOrderPntReference() /** { "tree" :"NutritionOrder.patient", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setPatient"} **/
						));
Nutritionorderobj.setEncounter(HapiFHIRHelpers.createReference(nutritionorder.getNutritionOrderEncounterReference() /** { "tree" :"NutritionOrder.encounter", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setEncounter"} **/
						));
Nutritionorderobj.setDateTime(HapiFHIRHelpers.createdateTime(nutritionorder.getNutritionOrderDateTimeDateTime() /** { "tree" :"NutritionOrder.dateTime", "datatype" : "dateTime", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setDateTime"} **/
						));
Nutritionorderobj.setOrderer(HapiFHIRHelpers.createReference(nutritionorder.getNutritionOrderOrdererReference() /** { "tree" :"NutritionOrder.orderer", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setOrderer"} **/
						));
Nutritionorderobj.addAllergyIntolerance(HapiFHIRHelpers.createReference(nutritionorder.getNtrtnrdrLlrgntlrncRfrnce() /** { "tree" :"NutritionOrder.allergyIntolerance", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAllergyIntolerance"} **/
						));
Nutritionorderobj.addFoodPreferenceModifier(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrFdPrfrncMdfrCcCdngCSstm() /** { "tree" :"NutritionOrder.foodPreferenceModifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addFoodPreferenceModifier, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrFdPrfrncMdfrCcCdngCVrsn() /** { "tree" :"NutritionOrder.foodPreferenceModifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addFoodPreferenceModifier, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrFdPrfrncMdfrCcCdngCCde() /** { "tree" :"NutritionOrder.foodPreferenceModifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addFoodPreferenceModifier, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrFdPrfrncMdfrCcCdngCDsplay() /** { "tree" :"NutritionOrder.foodPreferenceModifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addFoodPreferenceModifier, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrFdPrfrncMdfrCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.foodPreferenceModifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addFoodPreferenceModifier, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrFdPrfrncMdfrCcTxt() /** { "tree" :"NutritionOrder.foodPreferenceModifier", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addFoodPreferenceModifier, setText"} **/
						));
Nutritionorderobj.addExcludeFoodModifier(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrXcldFdMdfrCcCdngCSstm() /** { "tree" :"NutritionOrder.excludeFoodModifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addExcludeFoodModifier, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrXcldFdMdfrCcCdngCVrsn() /** { "tree" :"NutritionOrder.excludeFoodModifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addExcludeFoodModifier, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrXcldFdMdfrCcCdngCCde() /** { "tree" :"NutritionOrder.excludeFoodModifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addExcludeFoodModifier, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrXcldFdMdfrCcCdngCDsplay() /** { "tree" :"NutritionOrder.excludeFoodModifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addExcludeFoodModifier, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrXcldFdMdfrCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.excludeFoodModifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addExcludeFoodModifier, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrXcldFdMdfrCcTxt() /** { "tree" :"NutritionOrder.excludeFoodModifier", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addExcludeFoodModifier, setText"} **/
						));
Nutritionorderobj.addType(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrRlDtTpCcCdngCSstm() /** { "tree" :"NutritionOrder.oralDiet.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addType, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrRlDtTpCcCdngCVrsn() /** { "tree" :"NutritionOrder.oralDiet.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addType, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrRlDtTpCcCdngCCde() /** { "tree" :"NutritionOrder.oralDiet.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addType, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrRlDtTpCcCdngCDsplay() /** { "tree" :"NutritionOrder.oralDiet.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addType, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrRlDtTpCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.oralDiet.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addType, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrRlDtTpCcTxt() /** { "tree" :"NutritionOrder.oralDiet.type", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addType, setText"} **/
						));
Nutritionorderobj.addSchedule(HapiFHIRHelpers.createTiming(nutritionorder.getNtrtnrdrRlDtSchdlTmngCdCcCSstm() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setCode, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngCdCcCVrsn() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setCode, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngCdCcCCde() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setCode, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngCdCcCDsplay() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setCode, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngCdCcCSrSlctd() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setCode, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngCdCcTxt() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setCode, setText"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngVnt() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, dateTime", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, addEvent"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptDrtnnt() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, code", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setDurationUnit"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptPrdnt() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, code", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setPeriodUnit"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptDfWk() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, code", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, addDayOfWeek"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptWhn() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, code", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, addWhen"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptDrtn() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setDuration"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptDrtnMx() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setDurationMax"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptPrd() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setPeriod"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptPrdMx() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setPeriodMax"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptBndsDrtn() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, Duration", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setBoundsDuration"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptBndsPrd() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, Period", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setBoundsPeriod"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptCnt() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setCount"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptCntMx() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setCountMax"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptFrqncy() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setFrequency"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptFrqncMx() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setFrequencyMax"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptBndsRnge() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, Range", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setBoundsRange"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptTmfDay() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, time", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, addTimeOfDay"} **/
						, nutritionorder.getNtrtnrdrRlDtSchdlTmngRptFfst() /** { "tree" :"NutritionOrder.oralDiet.schedule", "datatype" : "Timing, Element, unsignedInt", "cardinality" : "Many", "elementtree" : ["setOralDiet"] , "methodName" : "addSchedule, setRepeat, setOffset"} **/
						));
Nutritionorderobj.setModifier(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrRlDtNtrntMdfrCcCdngCSstm() /** { "tree" :"NutritionOrder.oralDiet.nutrient.modifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient"] , "methodName" : "setModifier, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrRlDtNtrntMdfrCcCdngCVrsn() /** { "tree" :"NutritionOrder.oralDiet.nutrient.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient"] , "methodName" : "setModifier, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrRlDtNtrntMdfrCcCdngCCde() /** { "tree" :"NutritionOrder.oralDiet.nutrient.modifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient"] , "methodName" : "setModifier, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrRlDtNtrntMdfrCcCdngCDsplay() /** { "tree" :"NutritionOrder.oralDiet.nutrient.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient"] , "methodName" : "setModifier, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrRlDtNtrntMdfrCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.oralDiet.nutrient.modifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient"] , "methodName" : "setModifier, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrRlDtNtrntMdfrCcTxt() /** { "tree" :"NutritionOrder.oralDiet.nutrient.modifier", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient"] , "methodName" : "setModifier, setText"} **/
						));
Nutritionorderobj.setAmount(HapiFHIRHelpers.createSimpleQuantity(nutritionorder.getNtrtnrdrRlDtNtrntMntSmplQntty() /** { "tree" :"NutritionOrder.oralDiet.nutrient.amount", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient"] , "methodName" : "setAmount"} **/
						));
Nutritionorderobj.setModifier(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrRlDtTxtrMdfrCcCdngCSstm() /** { "tree" :"NutritionOrder.oralDiet.texture.modifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setModifier, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrRlDtTxtrMdfrCcCdngCVrsn() /** { "tree" :"NutritionOrder.oralDiet.texture.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setModifier, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrRlDtTxtrMdfrCcCdngCCde() /** { "tree" :"NutritionOrder.oralDiet.texture.modifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setModifier, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrRlDtTxtrMdfrCcCdngCDsplay() /** { "tree" :"NutritionOrder.oralDiet.texture.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setModifier, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrRlDtTxtrMdfrCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.oralDiet.texture.modifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setModifier, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrRlDtTxtrMdfrCcTxt() /** { "tree" :"NutritionOrder.oralDiet.texture.modifier", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setModifier, setText"} **/
						));
Nutritionorderobj.setFoodType(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrRlDtTxtrFdTpCcCdngCSstm() /** { "tree" :"NutritionOrder.oralDiet.texture.foodType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setFoodType, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrRlDtTxtrFdTpCcCdngCVrsn() /** { "tree" :"NutritionOrder.oralDiet.texture.foodType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setFoodType, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrRlDtTxtrFdTpCcCdngCCde() /** { "tree" :"NutritionOrder.oralDiet.texture.foodType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setFoodType, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrRlDtTxtrFdTpCcCdngCDsplay() /** { "tree" :"NutritionOrder.oralDiet.texture.foodType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setFoodType, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrRlDtTxtrFdTpCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.oralDiet.texture.foodType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setFoodType, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrRlDtTxtrFdTpCcTxt() /** { "tree" :"NutritionOrder.oralDiet.texture.foodType", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setFoodType, setText"} **/
						));
Nutritionorderobj.addFluidConsistencyType(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrRlDtFldCnsstncTpCcCdngCSstm() /** { "tree" :"NutritionOrder.oralDiet.fluidConsistencyType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "addFluidConsistencyType, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrRlDtFldCnsstncTpCcCdngCVrsn() /** { "tree" :"NutritionOrder.oralDiet.fluidConsistencyType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "addFluidConsistencyType, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrRlDtFldCnsstncTpCcCdngCCde() /** { "tree" :"NutritionOrder.oralDiet.fluidConsistencyType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "addFluidConsistencyType, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrRlDtFldCnsstncTpCcCdngCDsplay() /** { "tree" :"NutritionOrder.oralDiet.fluidConsistencyType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "addFluidConsistencyType, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrRlDtFldCnsstncTpCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.oralDiet.fluidConsistencyType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "addFluidConsistencyType, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrRlDtFldCnsstncTpCcTxt() /** { "tree" :"NutritionOrder.oralDiet.fluidConsistencyType", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "addFluidConsistencyType, setText"} **/
						));
Nutritionorderobj.setInstruction(HapiFHIRHelpers.createstring(nutritionorder.getNtrtnrdrRlDtNstrctnStrng() /** { "tree" :"NutritionOrder.oralDiet.instruction", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["setOralDiet", "addNutrient", "addTexture"] , "methodName" : "setInstruction"} **/
						));
Nutritionorderobj.setType(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrSpplmntTpCcCdngCSstm() /** { "tree" :"NutritionOrder.supplement.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSupplement"] , "methodName" : "setType, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrSpplmntTpCcCdngCVrsn() /** { "tree" :"NutritionOrder.supplement.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSupplement"] , "methodName" : "setType, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrSpplmntTpCcCdngCCde() /** { "tree" :"NutritionOrder.supplement.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addSupplement"] , "methodName" : "setType, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrSpplmntTpCcCdngCDsplay() /** { "tree" :"NutritionOrder.supplement.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSupplement"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrSpplmntTpCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.supplement.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSupplement"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrSpplmntTpCcTxt() /** { "tree" :"NutritionOrder.supplement.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addSupplement"] , "methodName" : "setType, setText"} **/
						));
Nutritionorderobj.setProductName(HapiFHIRHelpers.createstring(nutritionorder.getNtrtnrdrSpplmntPrdctNmStrng() /** { "tree" :"NutritionOrder.supplement.productName", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addSupplement"] , "methodName" : "setProductName"} **/
						));
Nutritionorderobj.addSchedule(HapiFHIRHelpers.createTiming(nutritionorder.getNtrtnrdrSpplmntSchdlTmngCdCcCSstm() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setCode, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngCdCcCVrsn() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setCode, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngCdCcCCde() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setCode, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngCdCcCDsplay() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setCode, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngCdCcCSrSlctd() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setCode, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngCdCcTxt() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setCode, setText"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngVnt() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, dateTime", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, addEvent"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptDrtnnt() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, code", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setDurationUnit"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptPrdnt() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, code", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setPeriodUnit"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptDfWk() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, code", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, addDayOfWeek"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptWhn() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, code", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, addWhen"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptDrtn() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setDuration"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptDrtnMx() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setDurationMax"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptPrd() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setPeriod"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptPrdMx() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setPeriodMax"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptBndsDrtn() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, Duration", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setBoundsDuration"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptBndsPrd() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, Period", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setBoundsPeriod"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptCnt() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setCount"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptCntMx() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setCountMax"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptFrqncy() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setFrequency"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptFrqncMx() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setFrequencyMax"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptBndsRnge() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, Range", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setBoundsRange"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptTmfDay() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, time", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, addTimeOfDay"} **/
						, nutritionorder.getNtrtnrdrSpplmntSchdlTmngRptFfst() /** { "tree" :"NutritionOrder.supplement.schedule", "datatype" : "Timing, Element, unsignedInt", "cardinality" : "Many", "elementtree" : ["addSupplement"] , "methodName" : "addSchedule, setRepeat, setOffset"} **/
						));
Nutritionorderobj.setQuantity(HapiFHIRHelpers.createSimpleQuantity(nutritionorder.getNtrtnrdrSpplmntQnttSmplQntty() /** { "tree" :"NutritionOrder.supplement.quantity", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addSupplement"] , "methodName" : "setQuantity"} **/
						));
Nutritionorderobj.setInstruction(HapiFHIRHelpers.createstring(nutritionorder.getNtrtnrdrSpplmntNstrctnStrng() /** { "tree" :"NutritionOrder.supplement.instruction", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addSupplement"] , "methodName" : "setInstruction"} **/
						));
Nutritionorderobj.setBaseFormulaType(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrNtrlFrmlBsFrmlTpCcCdngCSstm() /** { "tree" :"NutritionOrder.enteralFormula.baseFormulaType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setBaseFormulaType, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlBsFrmlTpCcCdngCVrsn() /** { "tree" :"NutritionOrder.enteralFormula.baseFormulaType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setBaseFormulaType, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlBsFrmlTpCcCdngCCde() /** { "tree" :"NutritionOrder.enteralFormula.baseFormulaType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setBaseFormulaType, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlBsFrmlTpCcCdngCDsplay() /** { "tree" :"NutritionOrder.enteralFormula.baseFormulaType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setBaseFormulaType, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlBsFrmlTpCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.enteralFormula.baseFormulaType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setBaseFormulaType, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlBsFrmlTpCcTxt() /** { "tree" :"NutritionOrder.enteralFormula.baseFormulaType", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setBaseFormulaType, setText"} **/
						));
Nutritionorderobj.setBaseFormulaProductName(HapiFHIRHelpers.createstring(nutritionorder.getNtrtnrdrNtrlFrmlBsFrmlPrdctNmStrng() /** { "tree" :"NutritionOrder.enteralFormula.baseFormulaProductName", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setBaseFormulaProductName"} **/
						));
Nutritionorderobj.setAdditiveType(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrNtrlFrmlDdtvTpCcCdngCSstm() /** { "tree" :"NutritionOrder.enteralFormula.additiveType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setAdditiveType, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDdtvTpCcCdngCVrsn() /** { "tree" :"NutritionOrder.enteralFormula.additiveType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setAdditiveType, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDdtvTpCcCdngCCde() /** { "tree" :"NutritionOrder.enteralFormula.additiveType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setAdditiveType, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDdtvTpCcCdngCDsplay() /** { "tree" :"NutritionOrder.enteralFormula.additiveType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setAdditiveType, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDdtvTpCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.enteralFormula.additiveType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setAdditiveType, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDdtvTpCcTxt() /** { "tree" :"NutritionOrder.enteralFormula.additiveType", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setAdditiveType, setText"} **/
						));
Nutritionorderobj.setAdditiveProductName(HapiFHIRHelpers.createstring(nutritionorder.getNtrtnrdrNtrlFrmlDdtvPrdctNmStrng() /** { "tree" :"NutritionOrder.enteralFormula.additiveProductName", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setAdditiveProductName"} **/
						));
Nutritionorderobj.setCaloricDensity(HapiFHIRHelpers.createSimpleQuantity(nutritionorder.getNtrtnrdrNtrlFrmlClrcDnstSmplQntty() /** { "tree" :"NutritionOrder.enteralFormula.caloricDensity", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setCaloricDensity"} **/
						));
Nutritionorderobj.setRouteofAdministration(HapiFHIRHelpers.createCodeableConcept(nutritionorder.getNtrtnrdrNtrlFrmlRtfdmnCcCdngCSstm() /** { "tree" :"NutritionOrder.enteralFormula.routeofAdministration", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setRouteofAdministration, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlRtfdmnCcCdngCVrsn() /** { "tree" :"NutritionOrder.enteralFormula.routeofAdministration", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setRouteofAdministration, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlRtfdmnCcCdngCCde() /** { "tree" :"NutritionOrder.enteralFormula.routeofAdministration", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setRouteofAdministration, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlRtfdmnCcCdngCDsplay() /** { "tree" :"NutritionOrder.enteralFormula.routeofAdministration", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setRouteofAdministration, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlRtfdmnCcCdngCSrSlctd() /** { "tree" :"NutritionOrder.enteralFormula.routeofAdministration", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setRouteofAdministration, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlRtfdmnCcTxt() /** { "tree" :"NutritionOrder.enteralFormula.routeofAdministration", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula"] , "methodName" : "setRouteofAdministration, setText"} **/
						));
Nutritionorderobj.setSchedule(HapiFHIRHelpers.createTiming(nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngCdCcCSstm() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setCode, addCoding, setSystem"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngCdCcCVrsn() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setCode, addCoding, setVersion"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngCdCcCCde() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setCode, addCoding, setCode"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngCdCcCDsplay() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setCode, addCoding, setDisplay"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngCdCcCSrSlctd() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setCode, addCoding, setUserSelected"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngCdCcTxt() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setCode, setText"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngVnt() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, addEvent"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptDrtnnt() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setDurationUnit"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptPrdnt() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setPeriodUnit"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptDfWk() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, addDayOfWeek"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptWhn() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, addWhen"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptDrtn() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setDuration"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptDrtnMx() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setDurationMax"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptPrd() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setPeriod"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptPrdMx() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setPeriodMax"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptBndsDrtn() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, Duration", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setBoundsDuration"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptBndsPrd() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, Period", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setBoundsPeriod"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptCnt() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setCount"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptCntMx() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setCountMax"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptFrqncy() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setFrequency"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptFrqncMx() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setFrequencyMax"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptBndsRnge() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, Range", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setBoundsRange"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptTmfDay() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, time", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, addTimeOfDay"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnSchdlTmngRptFfst() /** { "tree" :"NutritionOrder.enteralFormula.administration.schedule", "datatype" : "Timing, Element, unsignedInt", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setSchedule, setRepeat, setOffset"} **/
						));
Nutritionorderobj.setQuantity(HapiFHIRHelpers.createSimpleQuantity(nutritionorder.getNtrtnrdrNtrlFrmlDmnQnttSmplQntty() /** { "tree" :"NutritionOrder.enteralFormula.administration.quantity", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setQuantity"} **/
						));
Nutritionorderobj.setRateSimplequantity(HapiFHIRHelpers.createSimpleQuantity(nutritionorder.getNtrtnrdrNtrlFrmlDmnRtSmplqnttSmplQntty() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateSimplequantity", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateSimplequantity"} **/
						));
Nutritionorderobj.setRateRatio(HapiFHIRHelpers.createRatio(nutritionorder.getNtrtnrdrNtrlFrmlDmnRtRtRtNmrtrQnttVlue() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateRatio", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateRatio, setNumerator, setValue"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnRtRtRtDnmntrQnttVlue() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateRatio", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateRatio, setDenominator, setValue"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnRtRtRtNmrtrQnttCmprtr() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateRatio", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateRatio, setNumerator, setComparator"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnRtRtRtDnmntrQnttCmprtr() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateRatio", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateRatio, setDenominator, setComparator"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnRtRtRtNmrtrQnttNt() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateRatio", "datatype" : "Ratio, Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateRatio, setNumerator, setUnit"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnRtRtRtDnmntrQnttNt() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateRatio", "datatype" : "Ratio, Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateRatio, setDenominator, setUnit"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnRtRtRtNmrtrQnttSstm() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateRatio", "datatype" : "Ratio, Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateRatio, setNumerator, setSystem"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnRtRtRtDnmntrQnttSstm() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateRatio", "datatype" : "Ratio, Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateRatio, setDenominator, setSystem"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnRtRtRtNmrtrQnttCde() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateRatio", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateRatio, setNumerator, setCode"} **/
						, nutritionorder.getNtrtnrdrNtrlFrmlDmnRtRtRtDnmntrQnttCde() /** { "tree" :"NutritionOrder.enteralFormula.administration.rateRatio", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setRateRatio, setDenominator, setCode"} **/
						));
Nutritionorderobj.setMaxVolumeToDeliver(HapiFHIRHelpers.createSimpleQuantity(nutritionorder.getNtrtnrdrNtrlFrmlMxVlmTdlvrSmplQntty() /** { "tree" :"NutritionOrder.enteralFormula.maxVolumeToDeliver", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setMaxVolumeToDeliver"} **/
						));
Nutritionorderobj.setAdministrationInstruction(HapiFHIRHelpers.createstring(nutritionorder.getNtrtnrdrNtrlFrmlDmnnstrctnStrng() /** { "tree" :"NutritionOrder.enteralFormula.administrationInstruction", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["setEnteralFormula", "addAdministration"] , "methodName" : "setAdministrationInstruction"} **/
						));
Nutritionorderobj.addNote(HapiFHIRHelpers.createAnnotation(nutritionorder.getNtrtnrdrNtNnttnTme() /** { "tree" :"NutritionOrder.note", "datatype" : "Annotation, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addNote, setTime"} **/
						, nutritionorder.getNtrtnrdrNtNnttnTxt() /** { "tree" :"NutritionOrder.note", "datatype" : "Annotation, markdown", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addNote, setText"} **/
						, nutritionorder.getNtrtnrdrNtNnttnThrRfrnce() /** { "tree" :"NutritionOrder.note", "datatype" : "Annotation, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addNote, setAuthorReference"} **/
						, nutritionorder.getNtrtnrdrNtNnttnThrStrng() /** { "tree" :"NutritionOrder.note", "datatype" : "Annotation, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addNote, setAuthorString"} **/
		));
	}
}
