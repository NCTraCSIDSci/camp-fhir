package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Riskevidencesynthesis.
 * @see .Riskevidencesynthesis
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class RiskevidencesynthesisConversion 
{
	public Patient Riskevidencesynthesiss(main.templateoutput.Model.Riskevidencesynthesis riskevidencesynthesis) 
	{
			Patient  Riskevidencesynthesisobj = new Patient(); 

						Riskevidencesynthesisobj.setUrl(HapiFHIRHelpers.createuri(riskevidencesynthesis.getRiskEvidenceSynthesisUrlUri() /** { "tree" :"RiskEvidenceSynthesis.url", "datatype" : "uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setUrl"} **/
						));
Riskevidencesynthesisobj.addIdentifier(HapiFHIRHelpers.createIdentifier(riskevidencesynthesis.getRskvdncSnthssDntfrDntfrSe() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setUse"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrTpCcCSstm() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrTpCcCVrsn() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrTpCcCCde() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrTpCcCDsplay() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrTpCcCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrTpCcTxt() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, setText"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrPrdPrdStrt() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrPrdPrdNd() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrSsgnr() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setAssigner"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrVlue() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setValue"} **/
						, riskevidencesynthesis.getRskvdncSnthssDntfrDntfrSstm() /** { "tree" :"RiskEvidenceSynthesis.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setSystem"} **/
						));
Riskevidencesynthesisobj.setVersion(HapiFHIRHelpers.createstring(riskevidencesynthesis.getRskvdncSnthssVrsnStrng() /** { "tree" :"RiskEvidenceSynthesis.version", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setVersion"} **/
						));
Riskevidencesynthesisobj.setName(HapiFHIRHelpers.createstring(riskevidencesynthesis.getRiskEvidenceSynthesisNameString() /** { "tree" :"RiskEvidenceSynthesis.name", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setName"} **/
						));
Riskevidencesynthesisobj.setTitle(HapiFHIRHelpers.createstring(riskevidencesynthesis.getRiskEvidenceSynthesisTitleString() /** { "tree" :"RiskEvidenceSynthesis.title", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setTitle"} **/
						));
Riskevidencesynthesisobj.setStatus(HapiFHIRHelpers.createcode(riskevidencesynthesis.getRiskEvidenceSynthesisStatusCode() /** { "tree" :"RiskEvidenceSynthesis.status", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setStatus"} **/
						));
Riskevidencesynthesisobj.setDate(HapiFHIRHelpers.createdateTime(riskevidencesynthesis.getRskvdncSnthssDtDtTme() /** { "tree" :"RiskEvidenceSynthesis.date", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDate"} **/
						));
Riskevidencesynthesisobj.setPublisher(HapiFHIRHelpers.createstring(riskevidencesynthesis.getRskvdncSnthssPblshrStrng() /** { "tree" :"RiskEvidenceSynthesis.publisher", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPublisher"} **/
						));
Riskevidencesynthesisobj.addContact(HapiFHIRHelpers.createContactDetail(riskevidencesynthesis.getRskvdncSnthssCntctCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"RiskEvidenceSynthesis.contact", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setPeriod, setStart"} **/
						, riskevidencesynthesis.getRskvdncSnthssCntctCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"RiskEvidenceSynthesis.contact", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setPeriod, setEnd"} **/
						, riskevidencesynthesis.getRskvdncSnthssCntctCntctDtlTlcmCntctPntSstm() /** { "tree" :"RiskEvidenceSynthesis.contact", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssCntctCntctDtlTlcmCntctPntVlue() /** { "tree" :"RiskEvidenceSynthesis.contact", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setValue"} **/
						, riskevidencesynthesis.getRskvdncSnthssCntctCntctDtlTlcmCntctPntSe() /** { "tree" :"RiskEvidenceSynthesis.contact", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setUse"} **/
						, riskevidencesynthesis.getRskvdncSnthssCntctCntctDtlTlcmCntctPntRnk() /** { "tree" :"RiskEvidenceSynthesis.contact", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setRank"} **/
						, riskevidencesynthesis.getRskvdncSnthssCntctCntctDtlNme() /** { "tree" :"RiskEvidenceSynthesis.contact", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, addName"} **/
						));
Riskevidencesynthesisobj.setDescription(HapiFHIRHelpers.createmarkdown(riskevidencesynthesis.getRskvdncSnthssDscrptnMrkdwn() /** { "tree" :"RiskEvidenceSynthesis.description", "datatype" : "markdown", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDescription"} **/
						));
Riskevidencesynthesisobj.addNote(HapiFHIRHelpers.createAnnotation(riskevidencesynthesis.getRskvdncSnthssNtNnttnTme() /** { "tree" :"RiskEvidenceSynthesis.note", "datatype" : "Annotation, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addNote, setTime"} **/
						, riskevidencesynthesis.getRskvdncSnthssNtNnttnTxt() /** { "tree" :"RiskEvidenceSynthesis.note", "datatype" : "Annotation, markdown", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addNote, setText"} **/
						, riskevidencesynthesis.getRskvdncSnthssNtNnttnThrRfrnce() /** { "tree" :"RiskEvidenceSynthesis.note", "datatype" : "Annotation, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addNote, setAuthorReference"} **/
						, riskevidencesynthesis.getRskvdncSnthssNtNnttnThrStrng() /** { "tree" :"RiskEvidenceSynthesis.note", "datatype" : "Annotation, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addNote, setAuthorString"} **/
						));
Riskevidencesynthesisobj.addUseContext(HapiFHIRHelpers.createUsageContext(riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlCcCcCSstm() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlCcCcCVrsn() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlCcCcCCde() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlCcCcCDsplay() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlCcCcCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlCcCcTxt() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, setText"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtCdCSstm() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtCdCVrsn() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtCdCCde() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtCdCDsplay() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtCdCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlQnttQnttVlue() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Quantity, decimal", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setValue"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlQnttQnttCmprtr() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Quantity, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setComparator"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlQnttQnttNt() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Quantity, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setUnit"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlQnttQnttSstm() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Quantity, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlQnttQnttCde() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Quantity, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlRngRngLw() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Range, SimpleQuantity", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueRange, setLow"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlRngRngHgh() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Range, SimpleQuantity", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueRange, setHigh"} **/
						, riskevidencesynthesis.getRskvdncSnthssSCntxtSgCntxtVlRfrnce() /** { "tree" :"RiskEvidenceSynthesis.useContext", "datatype" : "UsageContext, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueReference"} **/
						));
Riskevidencesynthesisobj.addJurisdiction(HapiFHIRHelpers.createCodeableConcept(riskevidencesynthesis.getRskvdncSnthssJrsdctnCcCdngCSstm() /** { "tree" :"RiskEvidenceSynthesis.jurisdiction", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssJrsdctnCcCdngCVrsn() /** { "tree" :"RiskEvidenceSynthesis.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssJrsdctnCcCdngCCde() /** { "tree" :"RiskEvidenceSynthesis.jurisdiction", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssJrsdctnCcCdngCDsplay() /** { "tree" :"RiskEvidenceSynthesis.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssJrsdctnCcCdngCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.jurisdiction", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssJrsdctnCcTxt() /** { "tree" :"RiskEvidenceSynthesis.jurisdiction", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, setText"} **/
						));
Riskevidencesynthesisobj.setCopyright(HapiFHIRHelpers.createmarkdown(riskevidencesynthesis.getRskvdncSnthssCprghtMrkdwn() /** { "tree" :"RiskEvidenceSynthesis.copyright", "datatype" : "markdown", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setCopyright"} **/
						));
Riskevidencesynthesisobj.setApprovalDate(HapiFHIRHelpers.createdate(riskevidencesynthesis.getRskvdncSnthssPprvlDtDte() /** { "tree" :"RiskEvidenceSynthesis.approvalDate", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setApprovalDate"} **/
						));
Riskevidencesynthesisobj.setLastReviewDate(HapiFHIRHelpers.createdate(riskevidencesynthesis.getRskvdncSnthssLstRvwDtDte() /** { "tree" :"RiskEvidenceSynthesis.lastReviewDate", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLastReviewDate"} **/
						));
Riskevidencesynthesisobj.setEffectivePeriod(HapiFHIRHelpers.createPeriod(riskevidencesynthesis.getRskvdncSnthssFfctvPrdPrdStrt() /** { "tree" :"RiskEvidenceSynthesis.effectivePeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setEffectivePeriod, setStart"} **/
						, riskevidencesynthesis.getRskvdncSnthssFfctvPrdPrdNd() /** { "tree" :"RiskEvidenceSynthesis.effectivePeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setEffectivePeriod, setEnd"} **/
						));
Riskevidencesynthesisobj.addTopic(HapiFHIRHelpers.createCodeableConcept(riskevidencesynthesis.getRskvdncSnthssTpcCcCdngCSstm() /** { "tree" :"RiskEvidenceSynthesis.topic", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssTpcCcCdngCVrsn() /** { "tree" :"RiskEvidenceSynthesis.topic", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssTpcCcCdngCCde() /** { "tree" :"RiskEvidenceSynthesis.topic", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssTpcCcCdngCDsplay() /** { "tree" :"RiskEvidenceSynthesis.topic", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssTpcCcCdngCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.topic", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssTpcCcTxt() /** { "tree" :"RiskEvidenceSynthesis.topic", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, setText"} **/
						));
Riskevidencesynthesisobj.addAuthor(HapiFHIRHelpers.createContactDetail(riskevidencesynthesis.getRskvdncSnthssThrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"RiskEvidenceSynthesis.author", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setPeriod, setStart"} **/
						, riskevidencesynthesis.getRskvdncSnthssThrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"RiskEvidenceSynthesis.author", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setPeriod, setEnd"} **/
						, riskevidencesynthesis.getRskvdncSnthssThrCntctDtlTlcmCntctPntSstm() /** { "tree" :"RiskEvidenceSynthesis.author", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssThrCntctDtlTlcmCntctPntVlue() /** { "tree" :"RiskEvidenceSynthesis.author", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setValue"} **/
						, riskevidencesynthesis.getRskvdncSnthssThrCntctDtlTlcmCntctPntSe() /** { "tree" :"RiskEvidenceSynthesis.author", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setUse"} **/
						, riskevidencesynthesis.getRskvdncSnthssThrCntctDtlTlcmCntctPntRnk() /** { "tree" :"RiskEvidenceSynthesis.author", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setRank"} **/
						, riskevidencesynthesis.getRskvdncSnthssThrCntctDtlNme() /** { "tree" :"RiskEvidenceSynthesis.author", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, addName"} **/
						));
Riskevidencesynthesisobj.addEditor(HapiFHIRHelpers.createContactDetail(riskevidencesynthesis.getRskvdncSnthssDtrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"RiskEvidenceSynthesis.editor", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setPeriod, setStart"} **/
						, riskevidencesynthesis.getRskvdncSnthssDtrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"RiskEvidenceSynthesis.editor", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setPeriod, setEnd"} **/
						, riskevidencesynthesis.getRskvdncSnthssDtrCntctDtlTlcmCntctPntSstm() /** { "tree" :"RiskEvidenceSynthesis.editor", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssDtrCntctDtlTlcmCntctPntVlue() /** { "tree" :"RiskEvidenceSynthesis.editor", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setValue"} **/
						, riskevidencesynthesis.getRskvdncSnthssDtrCntctDtlTlcmCntctPntSe() /** { "tree" :"RiskEvidenceSynthesis.editor", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setUse"} **/
						, riskevidencesynthesis.getRskvdncSnthssDtrCntctDtlTlcmCntctPntRnk() /** { "tree" :"RiskEvidenceSynthesis.editor", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setRank"} **/
						, riskevidencesynthesis.getRskvdncSnthssDtrCntctDtlNme() /** { "tree" :"RiskEvidenceSynthesis.editor", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, addName"} **/
						));
Riskevidencesynthesisobj.addReviewer(HapiFHIRHelpers.createContactDetail(riskevidencesynthesis.getRskvdncSnthssRvwrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"RiskEvidenceSynthesis.reviewer", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setPeriod, setStart"} **/
						, riskevidencesynthesis.getRskvdncSnthssRvwrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"RiskEvidenceSynthesis.reviewer", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setPeriod, setEnd"} **/
						, riskevidencesynthesis.getRskvdncSnthssRvwrCntctDtlTlcmCntctPntSstm() /** { "tree" :"RiskEvidenceSynthesis.reviewer", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssRvwrCntctDtlTlcmCntctPntVlue() /** { "tree" :"RiskEvidenceSynthesis.reviewer", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setValue"} **/
						, riskevidencesynthesis.getRskvdncSnthssRvwrCntctDtlTlcmCntctPntSe() /** { "tree" :"RiskEvidenceSynthesis.reviewer", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setUse"} **/
						, riskevidencesynthesis.getRskvdncSnthssRvwrCntctDtlTlcmCntctPntRnk() /** { "tree" :"RiskEvidenceSynthesis.reviewer", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setRank"} **/
						, riskevidencesynthesis.getRskvdncSnthssRvwrCntctDtlNme() /** { "tree" :"RiskEvidenceSynthesis.reviewer", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, addName"} **/
						));
Riskevidencesynthesisobj.addEndorser(HapiFHIRHelpers.createContactDetail(riskevidencesynthesis.getRskvdncSnthssNdrsrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"RiskEvidenceSynthesis.endorser", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setPeriod, setStart"} **/
						, riskevidencesynthesis.getRskvdncSnthssNdrsrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"RiskEvidenceSynthesis.endorser", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setPeriod, setEnd"} **/
						, riskevidencesynthesis.getRskvdncSnthssNdrsrCntctDtlTlcmCntctPntSstm() /** { "tree" :"RiskEvidenceSynthesis.endorser", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssNdrsrCntctDtlTlcmCntctPntVlue() /** { "tree" :"RiskEvidenceSynthesis.endorser", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setValue"} **/
						, riskevidencesynthesis.getRskvdncSnthssNdrsrCntctDtlTlcmCntctPntSe() /** { "tree" :"RiskEvidenceSynthesis.endorser", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setUse"} **/
						, riskevidencesynthesis.getRskvdncSnthssNdrsrCntctDtlTlcmCntctPntRnk() /** { "tree" :"RiskEvidenceSynthesis.endorser", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setRank"} **/
						, riskevidencesynthesis.getRskvdncSnthssNdrsrCntctDtlNme() /** { "tree" :"RiskEvidenceSynthesis.endorser", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, addName"} **/
						));
Riskevidencesynthesisobj.addRelatedArtifact(HapiFHIRHelpers.createRelatedArtifact(riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctDcmntTtchmntCntntTpe() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setContentType"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctDcmntTtchmntLngge() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setLanguage"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctDcmntTtchmntDta() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, base64Binary", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setData"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctDcmntTtchmntRl() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, url", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setUrl"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctDcmntTtchmntSze() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, unsignedInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setSize"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctDcmntTtchmntHsh() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, base64Binary", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setHash"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctDcmntTtchmntTtle() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setTitle"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctDcmntTtchmntCrtn() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setCreation"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctRsrce() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, canonical", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setResource"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctTpe() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setType"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctCttn() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, markdown", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setCitation"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctLbl() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setLabel"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctDsplay() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssRltdrtfctRltdrtfctRl() /** { "tree" :"RiskEvidenceSynthesis.relatedArtifact", "datatype" : "RelatedArtifact, url", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setUrl"} **/
						));
Riskevidencesynthesisobj.setSynthesisType(HapiFHIRHelpers.createCodeableConcept(riskevidencesynthesis.getRskvdncSnthssSnthssTpCcCdngCSstm() /** { "tree" :"RiskEvidenceSynthesis.synthesisType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSynthesisType, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssSnthssTpCcCdngCVrsn() /** { "tree" :"RiskEvidenceSynthesis.synthesisType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSynthesisType, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssSnthssTpCcCdngCCde() /** { "tree" :"RiskEvidenceSynthesis.synthesisType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSynthesisType, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssSnthssTpCcCdngCDsplay() /** { "tree" :"RiskEvidenceSynthesis.synthesisType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSynthesisType, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssSnthssTpCcCdngCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.synthesisType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSynthesisType, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssSnthssTpCcTxt() /** { "tree" :"RiskEvidenceSynthesis.synthesisType", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSynthesisType, setText"} **/
						));
Riskevidencesynthesisobj.setStudyType(HapiFHIRHelpers.createCodeableConcept(riskevidencesynthesis.getRskvdncSnthssStdTpCcCdngCSstm() /** { "tree" :"RiskEvidenceSynthesis.studyType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStudyType, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssStdTpCcCdngCVrsn() /** { "tree" :"RiskEvidenceSynthesis.studyType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStudyType, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssStdTpCcCdngCCde() /** { "tree" :"RiskEvidenceSynthesis.studyType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStudyType, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssStdTpCcCdngCDsplay() /** { "tree" :"RiskEvidenceSynthesis.studyType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStudyType, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssStdTpCcCdngCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.studyType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStudyType, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssStdTpCcTxt() /** { "tree" :"RiskEvidenceSynthesis.studyType", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStudyType, setText"} **/
						));
Riskevidencesynthesisobj.setPopulation(HapiFHIRHelpers.createReference(riskevidencesynthesis.getRskvdncSnthssPpltnRfrnce() /** { "tree" :"RiskEvidenceSynthesis.population", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setPopulation"} **/
						));
Riskevidencesynthesisobj.setExposure(HapiFHIRHelpers.createReference(riskevidencesynthesis.getRskvdncSnthssXpsrRfrnce() /** { "tree" :"RiskEvidenceSynthesis.exposure", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setExposure"} **/
						));
Riskevidencesynthesisobj.setOutcome(HapiFHIRHelpers.createReference(riskevidencesynthesis.getRskvdncSnthssTcmRfrnce() /** { "tree" :"RiskEvidenceSynthesis.outcome", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setOutcome"} **/
						));
Riskevidencesynthesisobj.setDescription(HapiFHIRHelpers.createstring(riskevidencesynthesis.getRskvdncSnthssSmplSzDscrptnStrng() /** { "tree" :"RiskEvidenceSynthesis.sampleSize.description", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["setSampleSize"] , "methodName" : "setDescription"} **/
						));
Riskevidencesynthesisobj.setNumberOfStudies(HapiFHIRHelpers.createinteger(riskevidencesynthesis.getRskvdncSnthssSmplSzNmbrfStdsNtgr() /** { "tree" :"RiskEvidenceSynthesis.sampleSize.numberOfStudies", "datatype" : "integer", "cardinality" : "ZeroOne", "elementtree" : ["setSampleSize"] , "methodName" : "setNumberOfStudies"} **/
						));
Riskevidencesynthesisobj.setNumberOfParticipants(HapiFHIRHelpers.createinteger(riskevidencesynthesis.getRskvdncSnthssSmplSzNmbrfPrtcpntsNtgr() /** { "tree" :"RiskEvidenceSynthesis.sampleSize.numberOfParticipants", "datatype" : "integer", "cardinality" : "ZeroOne", "elementtree" : ["setSampleSize"] , "methodName" : "setNumberOfParticipants"} **/
						));
Riskevidencesynthesisobj.setDescription(HapiFHIRHelpers.createstring(riskevidencesynthesis.getRskvdncSnthssRskstmtDscrptnStrng() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.description", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setDescription"} **/
						));
Riskevidencesynthesisobj.setType(HapiFHIRHelpers.createCodeableConcept(riskevidencesynthesis.getRskvdncSnthssRskstmtTpCcCdngCSstm() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setType, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtTpCcCdngCVrsn() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setType, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtTpCcCdngCCde() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setType, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtTpCcCdngCDsplay() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtTpCcCdngCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtTpCcTxt() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setType, setText"} **/
						));
Riskevidencesynthesisobj.setValue(HapiFHIRHelpers.createdecimal(riskevidencesynthesis.getRskvdncSnthssRskstmtVlDcml() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.value", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setValue"} **/
						));
Riskevidencesynthesisobj.setUnitOfMeasure(HapiFHIRHelpers.createCodeableConcept(riskevidencesynthesis.getRskvdncSnthssRskstmtNtfMsrCcCdngCSstm() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.unitOfMeasure", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setUnitOfMeasure, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtNtfMsrCcCdngCVrsn() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.unitOfMeasure", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setUnitOfMeasure, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtNtfMsrCcCdngCCde() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.unitOfMeasure", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setUnitOfMeasure, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtNtfMsrCcCdngCDsplay() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.unitOfMeasure", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setUnitOfMeasure, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtNtfMsrCcCdngCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.unitOfMeasure", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setUnitOfMeasure, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtNtfMsrCcTxt() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.unitOfMeasure", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setUnitOfMeasure, setText"} **/
						));
Riskevidencesynthesisobj.setDenominatorCount(HapiFHIRHelpers.createinteger(riskevidencesynthesis.getRskvdncSnthssRskstmtDnmntrCntNtgr() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.denominatorCount", "datatype" : "integer", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setDenominatorCount"} **/
						));
Riskevidencesynthesisobj.setNumeratorCount(HapiFHIRHelpers.createinteger(riskevidencesynthesis.getRskvdncSnthssRskstmtNmrtrCntNtgr() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.numeratorCount", "datatype" : "integer", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate"] , "methodName" : "setNumeratorCount"} **/
						));
Riskevidencesynthesisobj.setType(HapiFHIRHelpers.createCodeableConcept(riskevidencesynthesis.getRskvdncSnthssRskstmtPrcsnstmtTpCcCdngCSstm() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.precisionEstimate.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate", "addPrecisionEstimate"] , "methodName" : "setType, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtPrcsnstmtTpCcCdngCVrsn() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.precisionEstimate.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate", "addPrecisionEstimate"] , "methodName" : "setType, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtPrcsnstmtTpCcCdngCCde() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.precisionEstimate.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate", "addPrecisionEstimate"] , "methodName" : "setType, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtPrcsnstmtTpCcCdngCDsplay() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.precisionEstimate.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate", "addPrecisionEstimate"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtPrcsnstmtTpCcCdngCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.precisionEstimate.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate", "addPrecisionEstimate"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssRskstmtPrcsnstmtTpCcTxt() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.precisionEstimate.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate", "addPrecisionEstimate"] , "methodName" : "setType, setText"} **/
						));
Riskevidencesynthesisobj.setLevel(HapiFHIRHelpers.createdecimal(riskevidencesynthesis.getRskvdncSnthssRskstmtPrcsnstmtLvlDcml() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.precisionEstimate.level", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate", "addPrecisionEstimate"] , "methodName" : "setLevel"} **/
						));
Riskevidencesynthesisobj.setFrom(HapiFHIRHelpers.createdecimal(riskevidencesynthesis.getRskvdncSnthssRskstmtPrcsnstmtFrmDcml() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.precisionEstimate.from", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate", "addPrecisionEstimate"] , "methodName" : "setFrom"} **/
						));
Riskevidencesynthesisobj.setTo(HapiFHIRHelpers.createdecimal(riskevidencesynthesis.getRskvdncSnthssRskstmtPrcsnstmtTDcml() /** { "tree" :"RiskEvidenceSynthesis.riskEstimate.precisionEstimate.to", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["setRiskEstimate", "addPrecisionEstimate"] , "methodName" : "setTo"} **/
						));
Riskevidencesynthesisobj.addRating(HapiFHIRHelpers.createCodeableConcept(riskevidencesynthesis.getRskvdncSnthssCrtntRtngCcCdngCSstm() /** { "tree" :"RiskEvidenceSynthesis.certainty.rating", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addCertainty"] , "methodName" : "addRating, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntRtngCcCdngCVrsn() /** { "tree" :"RiskEvidenceSynthesis.certainty.rating", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addCertainty"] , "methodName" : "addRating, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntRtngCcCdngCCde() /** { "tree" :"RiskEvidenceSynthesis.certainty.rating", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addCertainty"] , "methodName" : "addRating, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntRtngCcCdngCDsplay() /** { "tree" :"RiskEvidenceSynthesis.certainty.rating", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addCertainty"] , "methodName" : "addRating, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntRtngCcCdngCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.certainty.rating", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addCertainty"] , "methodName" : "addRating, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntRtngCcTxt() /** { "tree" :"RiskEvidenceSynthesis.certainty.rating", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addCertainty"] , "methodName" : "addRating, setText"} **/
						));
Riskevidencesynthesisobj.addNote(HapiFHIRHelpers.createAnnotation(riskevidencesynthesis.getRskvdncSnthssCrtntNtNnttnTme() /** { "tree" :"RiskEvidenceSynthesis.certainty.note", "datatype" : "Annotation, dateTime", "cardinality" : "Many", "elementtree" : ["addCertainty"] , "methodName" : "addNote, setTime"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntNtNnttnTxt() /** { "tree" :"RiskEvidenceSynthesis.certainty.note", "datatype" : "Annotation, markdown", "cardinality" : "Many", "elementtree" : ["addCertainty"] , "methodName" : "addNote, setText"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntNtNnttnThrRfrnce() /** { "tree" :"RiskEvidenceSynthesis.certainty.note", "datatype" : "Annotation, Reference", "cardinality" : "Many", "elementtree" : ["addCertainty"] , "methodName" : "addNote, setAuthorReference"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntNtNnttnThrStrng() /** { "tree" :"RiskEvidenceSynthesis.certainty.note", "datatype" : "Annotation, string", "cardinality" : "Many", "elementtree" : ["addCertainty"] , "methodName" : "addNote, setAuthorString"} **/
						));
Riskevidencesynthesisobj.setType(HapiFHIRHelpers.createCodeableConcept(riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntTpCcCdngCSstm() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "setType, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntTpCcCdngCVrsn() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "setType, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntTpCcCdngCCde() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "setType, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntTpCcCdngCDsplay() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntTpCcCdngCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntTpCcTxt() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "setType, setText"} **/
						));
Riskevidencesynthesisobj.addRating(HapiFHIRHelpers.createCodeableConcept(riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntRtngCcCdngCSstm() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.rating", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "addRating, addCoding, setSystem"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntRtngCcCdngCVrsn() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.rating", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "addRating, addCoding, setVersion"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntRtngCcCdngCCde() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.rating", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "addRating, addCoding, setCode"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntRtngCcCdngCDsplay() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.rating", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "addRating, addCoding, setDisplay"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntRtngCcCdngCSrSlctd() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.rating", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "addRating, addCoding, setUserSelected"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntRtngCcTxt() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.rating", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "addRating, setText"} **/
						));
Riskevidencesynthesisobj.addNote(HapiFHIRHelpers.createAnnotation(riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntNtNnttnTme() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.note", "datatype" : "Annotation, dateTime", "cardinality" : "Many", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "addNote, setTime"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntNtNnttnTxt() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.note", "datatype" : "Annotation, markdown", "cardinality" : "Many", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "addNote, setText"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntNtNnttnThrRfrnce() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.note", "datatype" : "Annotation, Reference", "cardinality" : "Many", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "addNote, setAuthorReference"} **/
						, riskevidencesynthesis.getRskvdncSnthssCrtntCrtntSbcmpnntNtNnttnThrStrng() /** { "tree" :"RiskEvidenceSynthesis.certainty.certaintySubcomponent.note", "datatype" : "Annotation, string", "cardinality" : "Many", "elementtree" : ["addCertainty", "addCertaintySubcomponent"] , "methodName" : "addNote, setAuthorString"} **/
		));
	}
}
