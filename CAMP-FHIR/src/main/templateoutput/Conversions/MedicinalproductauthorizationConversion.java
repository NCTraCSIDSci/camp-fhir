package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Medicinalproductauthorization.
 * @see .Medicinalproductauthorization
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class MedicinalproductauthorizationConversion 
{
	public Patient Medicinalproductauthorizations(main.templateoutput.Model.Medicinalproductauthorization medicinalproductauthorization) 
	{
			Patient  Medicinalproductauthorizationobj = new Patient(); 

						Medicinalproductauthorizationobj.addIdentifier(HapiFHIRHelpers.createIdentifier(medicinalproductauthorization.getMpthrztnDntfrDntfrSe() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setUse"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrTpCcCSstm() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrTpCcCVrsn() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrTpCcCCde() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrTpCcCDsplay() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrTpCcCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrTpCcTxt() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, setText"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrPrdPrdStrt() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrPrdPrdNd() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrSsgnr() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setAssigner"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrVlue() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setValue"} **/
						, medicinalproductauthorization.getMpthrztnDntfrDntfrSstm() /** { "tree" :"MedicinalProductAuthorization.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setSystem"} **/
						));
Medicinalproductauthorizationobj.setSubject(HapiFHIRHelpers.createReference(medicinalproductauthorization.getMpauthorizationSubjectReference() /** { "tree" :"MedicinalProductAuthorization.subject", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubject"} **/
						));
Medicinalproductauthorizationobj.addCountry(HapiFHIRHelpers.createCodeableConcept(medicinalproductauthorization.getMpthrztnCntrCcCdngCSstm() /** { "tree" :"MedicinalProductAuthorization.country", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCountry, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnCntrCcCdngCVrsn() /** { "tree" :"MedicinalProductAuthorization.country", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCountry, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnCntrCcCdngCCde() /** { "tree" :"MedicinalProductAuthorization.country", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCountry, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnCntrCcCdngCDsplay() /** { "tree" :"MedicinalProductAuthorization.country", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCountry, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnCntrCcCdngCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.country", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCountry, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpauthorizationCountryCcText() /** { "tree" :"MedicinalProductAuthorization.country", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCountry, setText"} **/
						));
Medicinalproductauthorizationobj.addJurisdiction(HapiFHIRHelpers.createCodeableConcept(medicinalproductauthorization.getMpthrztnJrsdctnCcCdngCSstm() /** { "tree" :"MedicinalProductAuthorization.jurisdiction", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnCcCdngCVrsn() /** { "tree" :"MedicinalProductAuthorization.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnCcCdngCCde() /** { "tree" :"MedicinalProductAuthorization.jurisdiction", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnCcCdngCDsplay() /** { "tree" :"MedicinalProductAuthorization.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnCcCdngCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.jurisdiction", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnCcTxt() /** { "tree" :"MedicinalProductAuthorization.jurisdiction", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, setText"} **/
						));
Medicinalproductauthorizationobj.setStatus(HapiFHIRHelpers.createCodeableConcept(medicinalproductauthorization.getMpthrztnSttsCcCdngCSstm() /** { "tree" :"MedicinalProductAuthorization.status", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStatus, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnSttsCcCdngCVrsn() /** { "tree" :"MedicinalProductAuthorization.status", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStatus, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnSttsCcCdngCCde() /** { "tree" :"MedicinalProductAuthorization.status", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStatus, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnSttsCcCdngCDsplay() /** { "tree" :"MedicinalProductAuthorization.status", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStatus, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnSttsCcCdngCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.status", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStatus, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpauthorizationStatusCcText() /** { "tree" :"MedicinalProductAuthorization.status", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStatus, setText"} **/
						));
Medicinalproductauthorizationobj.setStatusDate(HapiFHIRHelpers.createdateTime(medicinalproductauthorization.getMpthrztnSttsDtDtTme() /** { "tree" :"MedicinalProductAuthorization.statusDate", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStatusDate"} **/
						));
Medicinalproductauthorizationobj.setRestoreDate(HapiFHIRHelpers.createdateTime(medicinalproductauthorization.getMpthrztnRstrDtDtTme() /** { "tree" :"MedicinalProductAuthorization.restoreDate", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setRestoreDate"} **/
						));
Medicinalproductauthorizationobj.setValidityPeriod(HapiFHIRHelpers.createPeriod(medicinalproductauthorization.getMpthrztnVldtPrdPrdStrt() /** { "tree" :"MedicinalProductAuthorization.validityPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setValidityPeriod, setStart"} **/
						, medicinalproductauthorization.getMpthrztnVldtPrdPrdNd() /** { "tree" :"MedicinalProductAuthorization.validityPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setValidityPeriod, setEnd"} **/
						));
Medicinalproductauthorizationobj.setDataExclusivityPeriod(HapiFHIRHelpers.createPeriod(medicinalproductauthorization.getMpthrztnDtxclsvtPrdPrdStrt() /** { "tree" :"MedicinalProductAuthorization.dataExclusivityPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDataExclusivityPeriod, setStart"} **/
						, medicinalproductauthorization.getMpthrztnDtxclsvtPrdPrdNd() /** { "tree" :"MedicinalProductAuthorization.dataExclusivityPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDataExclusivityPeriod, setEnd"} **/
						));
Medicinalproductauthorizationobj.setDateOfFirstAuthorization(HapiFHIRHelpers.createdateTime(medicinalproductauthorization.getMpthrztnDtfFrstthrztnDtTme() /** { "tree" :"MedicinalProductAuthorization.dateOfFirstAuthorization", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDateOfFirstAuthorization"} **/
						));
Medicinalproductauthorizationobj.setInternationalBirthDate(HapiFHIRHelpers.createdateTime(medicinalproductauthorization.getMpthrztnNtrntnlBrthDtDtTme() /** { "tree" :"MedicinalProductAuthorization.internationalBirthDate", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setInternationalBirthDate"} **/
						));
Medicinalproductauthorizationobj.setLegalBasis(HapiFHIRHelpers.createCodeableConcept(medicinalproductauthorization.getMpthrztnLglBssCcCdngCSstm() /** { "tree" :"MedicinalProductAuthorization.legalBasis", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalBasis, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnLglBssCcCdngCVrsn() /** { "tree" :"MedicinalProductAuthorization.legalBasis", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalBasis, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnLglBssCcCdngCCde() /** { "tree" :"MedicinalProductAuthorization.legalBasis", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalBasis, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnLglBssCcCdngCDsplay() /** { "tree" :"MedicinalProductAuthorization.legalBasis", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalBasis, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnLglBssCcCdngCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.legalBasis", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalBasis, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpauthorizationLegalBasisCcText() /** { "tree" :"MedicinalProductAuthorization.legalBasis", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLegalBasis, setText"} **/
						));
Medicinalproductauthorizationobj.addIdentifier(HapiFHIRHelpers.createIdentifier(medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrSe() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setUse"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrTpCcCSstm() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrTpCcCVrsn() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrTpCcCCde() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrTpCcCDsplay() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrTpCcCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrTpCcTxt() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setType, setText"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrPrdPrdStrt() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrPrdPrdNd() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrSsgnr() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setAssigner"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrVlue() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setValue"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnDntfrDntfrSstm() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addIdentifier, setSystem"} **/
						));
Medicinalproductauthorizationobj.setCountry(HapiFHIRHelpers.createCodeableConcept(medicinalproductauthorization.getMpthrztnJrsdctnlthrztnCntrCcCdngCSstm() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.country", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setCountry, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnCntrCcCdngCVrsn() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.country", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setCountry, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnCntrCcCdngCCde() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.country", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setCountry, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnCntrCcCdngCDsplay() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.country", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setCountry, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnCntrCcCdngCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.country", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setCountry, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnCntrCcTxt() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.country", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setCountry, setText"} **/
						));
Medicinalproductauthorizationobj.addJurisdiction(HapiFHIRHelpers.createCodeableConcept(medicinalproductauthorization.getMpthrztnJrsdctnlthrztnJrsdctnCcCdngCSstm() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.jurisdiction", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addJurisdiction, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnJrsdctnCcCdngCVrsn() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addJurisdiction, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnJrsdctnCcCdngCCde() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.jurisdiction", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addJurisdiction, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnJrsdctnCcCdngCDsplay() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addJurisdiction, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnJrsdctnCcCdngCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.jurisdiction", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addJurisdiction, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnJrsdctnCcTxt() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.jurisdiction", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "addJurisdiction, setText"} **/
						));
Medicinalproductauthorizationobj.setLegalStatusOfSupply(HapiFHIRHelpers.createCodeableConcept(medicinalproductauthorization.getMpthrztnJrsdctnlthrztnLglSttsfSpplCcCdngCSstm() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.legalStatusOfSupply", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setLegalStatusOfSupply, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnLglSttsfSpplCcCdngCVrsn() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.legalStatusOfSupply", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setLegalStatusOfSupply, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnLglSttsfSpplCcCdngCCde() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.legalStatusOfSupply", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setLegalStatusOfSupply, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnLglSttsfSpplCcCdngCDsplay() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.legalStatusOfSupply", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setLegalStatusOfSupply, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnLglSttsfSpplCcCdngCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.legalStatusOfSupply", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setLegalStatusOfSupply, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnLglSttsfSpplCcTxt() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.legalStatusOfSupply", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setLegalStatusOfSupply, setText"} **/
						));
Medicinalproductauthorizationobj.setValidityPeriod(HapiFHIRHelpers.createPeriod(medicinalproductauthorization.getMpthrztnJrsdctnlthrztnVldtPrdPrdStrt() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.validityPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setValidityPeriod, setStart"} **/
						, medicinalproductauthorization.getMpthrztnJrsdctnlthrztnVldtPrdPrdNd() /** { "tree" :"MedicinalProductAuthorization.jurisdictionalAuthorization.validityPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addJurisdictionalAuthorization"] , "methodName" : "setValidityPeriod, setEnd"} **/
						));
Medicinalproductauthorizationobj.setHolder(HapiFHIRHelpers.createReference(medicinalproductauthorization.getMpauthorizationHolderReference() /** { "tree" :"MedicinalProductAuthorization.holder", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setHolder"} **/
						));
Medicinalproductauthorizationobj.setRegulator(HapiFHIRHelpers.createReference(medicinalproductauthorization.getMpthrztnRgltrRfrnce() /** { "tree" :"MedicinalProductAuthorization.regulator", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setRegulator"} **/
						));
Medicinalproductauthorizationobj.setIdentifier(HapiFHIRHelpers.createIdentifier(medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrSe() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, code", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setUse"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrTpCcCSstm() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setType, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrTpCcCVrsn() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setType, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrTpCcCCde() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setType, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrTpCcCDsplay() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setType, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrTpCcCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setType, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrTpCcTxt() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setType, setText"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrPrdPrdStrt() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setPeriod, setStart"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrPrdPrdNd() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setPeriod, setEnd"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrSsgnr() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, Reference", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setAssigner"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrVlue() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, string", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setValue"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDntfrDntfrSstm() /** { "tree" :"MedicinalProductAuthorization.procedure.identifier", "datatype" : "Identifier, uri", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setIdentifier, setSystem"} **/
						));
Medicinalproductauthorizationobj.setType(HapiFHIRHelpers.createCodeableConcept(medicinalproductauthorization.getMpthrztnPrcdrTpCcCdngCSstm() /** { "tree" :"MedicinalProductAuthorization.procedure.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["setProcedure"] , "methodName" : "setType, addCoding, setSystem"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrTpCcCdngCVrsn() /** { "tree" :"MedicinalProductAuthorization.procedure.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["setProcedure"] , "methodName" : "setType, addCoding, setVersion"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrTpCcCdngCCde() /** { "tree" :"MedicinalProductAuthorization.procedure.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["setProcedure"] , "methodName" : "setType, addCoding, setCode"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrTpCcCdngCDsplay() /** { "tree" :"MedicinalProductAuthorization.procedure.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["setProcedure"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrTpCcCdngCSrSlctd() /** { "tree" :"MedicinalProductAuthorization.procedure.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["setProcedure"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrTpCcTxt() /** { "tree" :"MedicinalProductAuthorization.procedure.type", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["setProcedure"] , "methodName" : "setType, setText"} **/
						));
Medicinalproductauthorizationobj.setDatePeriod(HapiFHIRHelpers.createPeriod(medicinalproductauthorization.getMpthrztnPrcdrDtPrdPrdStrt() /** { "tree" :"MedicinalProductAuthorization.procedure.datePeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setDatePeriod, setStart"} **/
						, medicinalproductauthorization.getMpthrztnPrcdrDtPrdPrdNd() /** { "tree" :"MedicinalProductAuthorization.procedure.datePeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setDatePeriod, setEnd"} **/
						));
Medicinalproductauthorizationobj.setDate(HapiFHIRHelpers.createdateTimetype(medicinalproductauthorization.getMpthrztnPrcdrDtDttmDtTme() /** { "tree" :"MedicinalProductAuthorization.procedure.dateDatetime", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : ["setProcedure"] , "methodName" : "setDateDatetime"} **/
						));
Medicinalproductauthorizationobj.addApplication(HapiFHIRHelpers.createprocedure(medicinalproductauthorization.getMpthrztnPrcdrPplctnPrcdre() /** { "tree" :"MedicinalProductAuthorization.procedure.application", "datatype" : "procedure", "cardinality" : "Many", "elementtree" : ["setProcedure"] , "methodName" : "addApplication"} **/
		));
	}
}
