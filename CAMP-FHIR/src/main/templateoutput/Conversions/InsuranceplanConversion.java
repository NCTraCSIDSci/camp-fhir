package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Insuranceplan.
 * @see .Insuranceplan
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class InsuranceplanConversion 
{
	public Patient Insuranceplans(main.templateoutput.Model.Insuranceplan insuranceplan) 
	{
			Patient  Insuranceplanobj = new Patient(); 

						Insuranceplanobj.addIdentifier(HapiFHIRHelpers.createIdentifier(insuranceplan.getInsrncPlnDntfrDntfrSe() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setUse"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrTpCcCSstm() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrTpCcCVrsn() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrTpCcCCde() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrTpCcCDsplay() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrTpCcCSrSlctd() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrTpCcTxt() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, setText"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrPrdPrdStrt() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrPrdPrdNd() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrSsgnr() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setAssigner"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrVlue() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setValue"} **/
						, insuranceplan.getInsrncPlnDntfrDntfrSstm() /** { "tree" :"InsurancePlan.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setSystem"} **/
						));
Insuranceplanobj.setStatus(HapiFHIRHelpers.createcode(insuranceplan.getInsurancePlanStatusCode() /** { "tree" :"InsurancePlan.status", "datatype" : "code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStatus"} **/
						));
Insuranceplanobj.addType(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnTpCcCdngCSstm() /** { "tree" :"InsurancePlan.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addType, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnTpCcCdngCVrsn() /** { "tree" :"InsurancePlan.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addType, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnTpCcCdngCCde() /** { "tree" :"InsurancePlan.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addType, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnTpCcCdngCDsplay() /** { "tree" :"InsurancePlan.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addType, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnTpCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addType, addCoding, setUserSelected"} **/
						, insuranceplan.getInsurancePlanTypeCcText() /** { "tree" :"InsurancePlan.type", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addType, setText"} **/
						));
Insuranceplanobj.setName(HapiFHIRHelpers.createstring(insuranceplan.getInsurancePlanNameString() /** { "tree" :"InsurancePlan.name", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setName"} **/
						));
Insuranceplanobj.addAlias(HapiFHIRHelpers.createstring(insuranceplan.getInsurancePlanAliasString() /** { "tree" :"InsurancePlan.alias", "datatype" : "string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAlias"} **/
						));
Insuranceplanobj.setPeriod(HapiFHIRHelpers.createPeriod(insuranceplan.getInsurancePlanPeriodPeriodStart() /** { "tree" :"InsurancePlan.period", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPeriod, setStart"} **/
						, insuranceplan.getInsurancePlanPeriodPeriodEnd() /** { "tree" :"InsurancePlan.period", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPeriod, setEnd"} **/
						));
Insuranceplanobj.setOwnedBy(HapiFHIRHelpers.createReference(insuranceplan.getInsurancePlanOwnedByReference() /** { "tree" :"InsurancePlan.ownedBy", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setOwnedBy"} **/
						));
Insuranceplanobj.setAdministeredBy(HapiFHIRHelpers.createReference(insuranceplan.getInsrncPlnDmnstrdBRfrnce() /** { "tree" :"InsurancePlan.administeredBy", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setAdministeredBy"} **/
						));
Insuranceplanobj.addCoverageArea(HapiFHIRHelpers.createReference(insuranceplan.getInsrncPlnCvrgrRfrnce() /** { "tree" :"InsurancePlan.coverageArea", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCoverageArea"} **/
						));
Insuranceplanobj.setPurpose(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnCntctPrpsCcCdngCSstm() /** { "tree" :"InsurancePlan.contact.purpose", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setPurpose, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnCntctPrpsCcCdngCVrsn() /** { "tree" :"InsurancePlan.contact.purpose", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setPurpose, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnCntctPrpsCcCdngCCde() /** { "tree" :"InsurancePlan.contact.purpose", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setPurpose, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnCntctPrpsCcCdngCDsplay() /** { "tree" :"InsurancePlan.contact.purpose", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setPurpose, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnCntctPrpsCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.contact.purpose", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setPurpose, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnCntctPrpsCcTxt() /** { "tree" :"InsurancePlan.contact.purpose", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setPurpose, setText"} **/
						));
Insuranceplanobj.setName(HapiFHIRHelpers.createHumanName(insuranceplan.getInsrncPlnCntctNmHmnNmSe() /** { "tree" :"InsurancePlan.contact.name", "datatype" : "HumanName, code", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setName, setUse"} **/
						, insuranceplan.getInsrncPlnCntctNmHmnNmPrdPrdStrt() /** { "tree" :"InsurancePlan.contact.name", "datatype" : "HumanName, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setName, setPeriod, setStart"} **/
						, insuranceplan.getInsrncPlnCntctNmHmnNmPrdPrdNd() /** { "tree" :"InsurancePlan.contact.name", "datatype" : "HumanName, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setName, setPeriod, setEnd"} **/
						, insuranceplan.getInsrncPlnCntctNmHmnNmTxt() /** { "tree" :"InsurancePlan.contact.name", "datatype" : "HumanName, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setName, setText"} **/
						, insuranceplan.getInsrncPlnCntctNmHmnNmFmly() /** { "tree" :"InsurancePlan.contact.name", "datatype" : "HumanName, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setName, setFamily"} **/
						, insuranceplan.getInsrncPlnCntctNmHmnNmGvn() /** { "tree" :"InsurancePlan.contact.name", "datatype" : "HumanName, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setName, addGiven"} **/
						, insuranceplan.getInsrncPlnCntctNmHmnNmPrfx() /** { "tree" :"InsurancePlan.contact.name", "datatype" : "HumanName, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setName, addPrefix"} **/
						, insuranceplan.getInsrncPlnCntctNmHmnNmSffx() /** { "tree" :"InsurancePlan.contact.name", "datatype" : "HumanName, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setName, addSuffix"} **/
						));
Insuranceplanobj.addTelecom(HapiFHIRHelpers.createContactPoint(insuranceplan.getInsrncPlnCntctTlcmCntctPntSstm() /** { "tree" :"InsurancePlan.contact.telecom", "datatype" : "ContactPoint, code", "cardinality" : "Many", "elementtree" : ["addContact"] , "methodName" : "addTelecom, setSystem"} **/
						, insuranceplan.getInsrncPlnCntctTlcmCntctPntSe() /** { "tree" :"InsurancePlan.contact.telecom", "datatype" : "ContactPoint, code", "cardinality" : "Many", "elementtree" : ["addContact"] , "methodName" : "addTelecom, setUse"} **/
						, insuranceplan.getInsrncPlnCntctTlcmCntctPntPrdPrdStrt() /** { "tree" :"InsurancePlan.contact.telecom", "datatype" : "ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : ["addContact"] , "methodName" : "addTelecom, setPeriod, setStart"} **/
						, insuranceplan.getInsrncPlnCntctTlcmCntctPntPrdPrdNd() /** { "tree" :"InsurancePlan.contact.telecom", "datatype" : "ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : ["addContact"] , "methodName" : "addTelecom, setPeriod, setEnd"} **/
						, insuranceplan.getInsrncPlnCntctTlcmCntctPntRnk() /** { "tree" :"InsurancePlan.contact.telecom", "datatype" : "ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : ["addContact"] , "methodName" : "addTelecom, setRank"} **/
						, insuranceplan.getInsrncPlnCntctTlcmCntctPntVlue() /** { "tree" :"InsurancePlan.contact.telecom", "datatype" : "ContactPoint, string", "cardinality" : "Many", "elementtree" : ["addContact"] , "methodName" : "addTelecom, setValue"} **/
						));
Insuranceplanobj.setAddress(HapiFHIRHelpers.createAddress(insuranceplan.getInsrncPlnCntctDdrssDdrssSe() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, code", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, setUse"} **/
						, insuranceplan.getInsrncPlnCntctDdrssDdrssTpe() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, code", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, setType"} **/
						, insuranceplan.getInsrncPlnCntctDdrssDdrssPrdPrdStrt() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, setPeriod, setStart"} **/
						, insuranceplan.getInsrncPlnCntctDdrssDdrssPrdPrdNd() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, setPeriod, setEnd"} **/
						, insuranceplan.getInsrncPlnCntctDdrssDdrssTxt() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, setText"} **/
						, insuranceplan.getInsrncPlnCntctDdrssDdrssLne() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, addLine"} **/
						, insuranceplan.getInsrncPlnCntctDdrssDdrssCty() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, setCity"} **/
						, insuranceplan.getInsrncPlnCntctDdrssDdrssDstrct() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, setDistrict"} **/
						, insuranceplan.getInsrncPlnCntctDdrssDdrssStte() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, setState"} **/
						, insuranceplan.getInsrncPlnCntctDdrssDdrssPstlCde() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, setPostalCode"} **/
						, insuranceplan.getInsrncPlnCntctDdrssDdrssCntry() /** { "tree" :"InsurancePlan.contact.address", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addContact"] , "methodName" : "setAddress, setCounty"} **/
						));
Insuranceplanobj.addEndpoint(HapiFHIRHelpers.createReference(insuranceplan.getInsurancePlanEndpointReference() /** { "tree" :"InsurancePlan.endpoint", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndpoint"} **/
						));
Insuranceplanobj.addNetwork(HapiFHIRHelpers.createReference(insuranceplan.getInsurancePlanNetworkReference() /** { "tree" :"InsurancePlan.network", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addNetwork"} **/
						));
Insuranceplanobj.setType(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnCvrgTpCcCdngCSstm() /** { "tree" :"InsurancePlan.coverage.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addCoverage"] , "methodName" : "setType, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnCvrgTpCcCdngCVrsn() /** { "tree" :"InsurancePlan.coverage.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addCoverage"] , "methodName" : "setType, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnCvrgTpCcCdngCCde() /** { "tree" :"InsurancePlan.coverage.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addCoverage"] , "methodName" : "setType, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnCvrgTpCcCdngCDsplay() /** { "tree" :"InsurancePlan.coverage.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addCoverage"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnCvrgTpCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.coverage.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addCoverage"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnCvrgTpCcTxt() /** { "tree" :"InsurancePlan.coverage.type", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addCoverage"] , "methodName" : "setType, setText"} **/
						));
Insuranceplanobj.addNetwork(HapiFHIRHelpers.createReference(insuranceplan.getInsrncPlnCvrgNtwrkRfrnce() /** { "tree" :"InsurancePlan.coverage.network", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : ["addCoverage"] , "methodName" : "addNetwork"} **/
						));
Insuranceplanobj.setType(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnCvrgBnftTpCcCdngCSstm() /** { "tree" :"InsurancePlan.coverage.benefit.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addCoverage", "addBenefit"] , "methodName" : "setType, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnCvrgBnftTpCcCdngCVrsn() /** { "tree" :"InsurancePlan.coverage.benefit.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addCoverage", "addBenefit"] , "methodName" : "setType, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnCvrgBnftTpCcCdngCCde() /** { "tree" :"InsurancePlan.coverage.benefit.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addCoverage", "addBenefit"] , "methodName" : "setType, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnCvrgBnftTpCcCdngCDsplay() /** { "tree" :"InsurancePlan.coverage.benefit.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addCoverage", "addBenefit"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnCvrgBnftTpCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.coverage.benefit.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addCoverage", "addBenefit"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnCvrgBnftTpCcTxt() /** { "tree" :"InsurancePlan.coverage.benefit.type", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addCoverage", "addBenefit"] , "methodName" : "setType, setText"} **/
						));
Insuranceplanobj.setRequirement(HapiFHIRHelpers.createstring(insuranceplan.getInsrncPlnCvrgBnftRqrmntStrng() /** { "tree" :"InsurancePlan.coverage.benefit.requirement", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit"] , "methodName" : "setRequirement"} **/
						));
Insuranceplanobj.setValue(HapiFHIRHelpers.createQuantity(insuranceplan.getInsrncPlnCvrgBnftLmtVlQnttCmprtr() /** { "tree" :"InsurancePlan.coverage.benefit.limit.value", "datatype" : "Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setValue, setComparator"} **/
						, insuranceplan.getInsrncPlnCvrgBnftLmtVlQnttCde() /** { "tree" :"InsurancePlan.coverage.benefit.limit.value", "datatype" : "Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setValue, setCode"} **/
						, insuranceplan.getInsrncPlnCvrgBnftLmtVlQnttVlue() /** { "tree" :"InsurancePlan.coverage.benefit.limit.value", "datatype" : "Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setValue, setValue"} **/
						, insuranceplan.getInsrncPlnCvrgBnftLmtVlQnttNt() /** { "tree" :"InsurancePlan.coverage.benefit.limit.value", "datatype" : "Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setValue, setUnit"} **/
						, insuranceplan.getInsrncPlnCvrgBnftLmtVlQnttSstm() /** { "tree" :"InsurancePlan.coverage.benefit.limit.value", "datatype" : "Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setValue, setSystem"} **/
						));
Insuranceplanobj.setCode(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnCvrgBnftLmtCdCcCdngCSstm() /** { "tree" :"InsurancePlan.coverage.benefit.limit.code", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setCode, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnCvrgBnftLmtCdCcCdngCVrsn() /** { "tree" :"InsurancePlan.coverage.benefit.limit.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setCode, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnCvrgBnftLmtCdCcCdngCCde() /** { "tree" :"InsurancePlan.coverage.benefit.limit.code", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setCode, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnCvrgBnftLmtCdCcCdngCDsplay() /** { "tree" :"InsurancePlan.coverage.benefit.limit.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setCode, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnCvrgBnftLmtCdCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.coverage.benefit.limit.code", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setCode, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnCvrgBnftLmtCdCcTxt() /** { "tree" :"InsurancePlan.coverage.benefit.limit.code", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addCoverage", "addBenefit", "addLimit"] , "methodName" : "setCode, setText"} **/
						));
Insuranceplanobj.addIdentifier(HapiFHIRHelpers.createIdentifier(insuranceplan.getInsrncPlnPlnDntfrDntfrSe() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setUse"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrTpCcCSstm() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrTpCcCVrsn() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrTpCcCCde() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrTpCcCDsplay() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrTpCcCSrSlctd() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrTpCcTxt() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setType, setText"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrPrdPrdStrt() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrPrdPrdNd() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrSsgnr() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setAssigner"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrVlue() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setValue"} **/
						, insuranceplan.getInsrncPlnPlnDntfrDntfrSstm() /** { "tree" :"InsurancePlan.plan.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addIdentifier, setSystem"} **/
						));
Insuranceplanobj.setType(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnPlnTpCcCdngCSstm() /** { "tree" :"InsurancePlan.plan.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addPlan"] , "methodName" : "setType, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnPlnTpCcCdngCVrsn() /** { "tree" :"InsurancePlan.plan.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan"] , "methodName" : "setType, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnPlnTpCcCdngCCde() /** { "tree" :"InsurancePlan.plan.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addPlan"] , "methodName" : "setType, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnPlnTpCcCdngCDsplay() /** { "tree" :"InsurancePlan.plan.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnPlnTpCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.plan.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addPlan"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, insuranceplan.getInsurancePlanPlanTypeCcText() /** { "tree" :"InsurancePlan.plan.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan"] , "methodName" : "setType, setText"} **/
						));
Insuranceplanobj.addCoverageArea(HapiFHIRHelpers.createReference(insuranceplan.getInsrncPlnPlnCvrgrRfrnce() /** { "tree" :"InsurancePlan.plan.coverageArea", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addCoverageArea"} **/
						));
Insuranceplanobj.addNetwork(HapiFHIRHelpers.createReference(insuranceplan.getInsrncPlnPlnNtwrkRfrnce() /** { "tree" :"InsurancePlan.plan.network", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : ["addPlan"] , "methodName" : "addNetwork"} **/
						));
Insuranceplanobj.setType(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnPlnGnrlCstTpCcCdngCSstm() /** { "tree" :"InsurancePlan.plan.generalCost.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost"] , "methodName" : "setType, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnPlnGnrlCstTpCcCdngCVrsn() /** { "tree" :"InsurancePlan.plan.generalCost.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost"] , "methodName" : "setType, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnPlnGnrlCstTpCcCdngCCde() /** { "tree" :"InsurancePlan.plan.generalCost.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost"] , "methodName" : "setType, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnPlnGnrlCstTpCcCdngCDsplay() /** { "tree" :"InsurancePlan.plan.generalCost.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnPlnGnrlCstTpCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.plan.generalCost.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnPlnGnrlCstTpCcTxt() /** { "tree" :"InsurancePlan.plan.generalCost.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost"] , "methodName" : "setType, setText"} **/
						));
Insuranceplanobj.setGroupSize(HapiFHIRHelpers.createpositiveInt(insuranceplan.getInsrncPlnPlnGnrlCstGrpSzPstvnt() /** { "tree" :"InsurancePlan.plan.generalCost.groupSize", "datatype" : "positiveInt", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost"] , "methodName" : "setGroupSize"} **/
						));
Insuranceplanobj.setCost(HapiFHIRHelpers.createMoney(insuranceplan.getInsrncPlnPlnGnrlCstCstMnCrrncy() /** { "tree" :"InsurancePlan.plan.generalCost.cost", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost"] , "methodName" : "setCost, setCurrency"} **/
						, insuranceplan.getInsrncPlnPlnGnrlCstCstMnVlue() /** { "tree" :"InsurancePlan.plan.generalCost.cost", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost"] , "methodName" : "setCost, setVal"} **/
						));
Insuranceplanobj.setComment(HapiFHIRHelpers.createstring(insuranceplan.getInsrncPlnPlnGnrlCstCmmntStrng() /** { "tree" :"InsurancePlan.plan.generalCost.comment", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost"] , "methodName" : "setComment"} **/
						));
Insuranceplanobj.setCategory(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnPlnSpcfcCstCtgrCcCdngCSstm() /** { "tree" :"InsurancePlan.plan.specificCost.category", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost"] , "methodName" : "setCategory, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstCtgrCcCdngCVrsn() /** { "tree" :"InsurancePlan.plan.specificCost.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost"] , "methodName" : "setCategory, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstCtgrCcCdngCCde() /** { "tree" :"InsurancePlan.plan.specificCost.category", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost"] , "methodName" : "setCategory, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstCtgrCcCdngCDsplay() /** { "tree" :"InsurancePlan.plan.specificCost.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost"] , "methodName" : "setCategory, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstCtgrCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.plan.specificCost.category", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost"] , "methodName" : "setCategory, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstCtgrCcTxt() /** { "tree" :"InsurancePlan.plan.specificCost.category", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost"] , "methodName" : "setCategory, setText"} **/
						));
Insuranceplanobj.setType(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnPlnSpcfcCstBnftTpCcCdngCSstm() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit"] , "methodName" : "setType, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftTpCcCdngCVrsn() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit"] , "methodName" : "setType, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftTpCcCdngCCde() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit"] , "methodName" : "setType, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftTpCcCdngCDsplay() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftTpCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftTpCcTxt() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.type", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit"] , "methodName" : "setType, setText"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstTpCcCdngCSstm() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setType, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstTpCcCdngCVrsn() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setType, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstTpCcCdngCCde() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setType, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstTpCcCdngCDsplay() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstTpCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstTpCcTxt() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.type", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setType, setText"} **/
						));
Insuranceplanobj.setApplicability(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstPplcbltCcCdngCSstm() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.applicability", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setApplicability, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstPplcbltCcCdngCVrsn() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.applicability", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setApplicability, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstPplcbltCcCdngCCde() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.applicability", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setApplicability, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstPplcbltCcCdngCDsplay() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.applicability", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setApplicability, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstPplcbltCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.applicability", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setApplicability, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstPplcbltCcTxt() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.applicability", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setApplicability, setText"} **/
						));
Insuranceplanobj.addQualifiers(HapiFHIRHelpers.createCodeableConcept(insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstQlfrsCcCdngCSstm() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.qualifiers", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "addQualifiers, addCoding, setSystem"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstQlfrsCcCdngCVrsn() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.qualifiers", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "addQualifiers, addCoding, setVersion"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstQlfrsCcCdngCCde() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.qualifiers", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "addQualifiers, addCoding, setCode"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstQlfrsCcCdngCDsplay() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.qualifiers", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "addQualifiers, addCoding, setDisplay"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstQlfrsCcCdngCSrSlctd() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.qualifiers", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "addQualifiers, addCoding, setUserSelected"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstQlfrsCcTxt() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.qualifiers", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "addQualifiers, setText"} **/
						));
Insuranceplanobj.setValue(HapiFHIRHelpers.createQuantity(insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstVlQnttCmprtr() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.value", "datatype" : "Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setValue, setComparator"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstVlQnttCde() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.value", "datatype" : "Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setValue, setCode"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstVlQnttVlue() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.value", "datatype" : "Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setValue, setValue"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstVlQnttNt() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.value", "datatype" : "Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setValue, setUnit"} **/
						, insuranceplan.getInsrncPlnPlnSpcfcCstBnftCstVlQnttSstm() /** { "tree" :"InsurancePlan.plan.specificCost.benefit.cost.value", "datatype" : "Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addPlan", "addGeneralCost", "addSpecificCost", "addBenefit", "addCost"] , "methodName" : "setValue, setSystem"} **/
		));
	}
}
