package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Coverageeligibilityresponse.
 * @see .Coverageeligibilityresponse
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class CoverageeligibilityresponseConversion 
{
	public Patient Coverageeligibilityresponses(main.templateoutput.Model.Coverageeligibilityresponse coverageeligibilityresponse) 
	{
			Patient  Coverageeligibilityresponseobj = new Patient(); 

						Coverageeligibilityresponseobj.addIdentifier(HapiFHIRHelpers.createIdentifier(coverageeligibilityresponse.getCerIdentifierIdentifierUse() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setUse"} **/
						, coverageeligibilityresponse.getCrDntfrDntfrTpCcCSstm() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCrDntfrDntfrTpCcCVrsn() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCrDntfrDntfrTpCcCCde() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCrDntfrDntfrTpCcCDsplay() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCrDntfrDntfrTpCcCSrSlctd() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCrDntfrDntfrTpCcTxt() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, setText"} **/
						, coverageeligibilityresponse.getCrDntfrDntfrPrdPrdStrt() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, coverageeligibilityresponse.getCrDntfrDntfrPrdPrdNd() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, coverageeligibilityresponse.getCerIdentifierIdentifierAssigner() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setAssigner"} **/
						, coverageeligibilityresponse.getCerIdentifierIdentifierValue() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setValue"} **/
						, coverageeligibilityresponse.getCerIdentifierIdentifierSystem() /** { "tree" :"CoverageEligibilityResponse.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setSystem"} **/
						));
Coverageeligibilityresponseobj.setStatus(HapiFHIRHelpers.createcode(coverageeligibilityresponse.getCerStatusCode() /** { "tree" :"CoverageEligibilityResponse.status", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setStatus"} **/
						));
Coverageeligibilityresponseobj.setPurpose(HapiFHIRHelpers.createcode(coverageeligibilityresponse.getCerPurposeCode() /** { "tree" :"CoverageEligibilityResponse.purpose", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setPurpose"} **/
						));
Coverageeligibilityresponseobj.setPatient(HapiFHIRHelpers.createReference(coverageeligibilityresponse.getCerPntReference() /** { "tree" :"CoverageEligibilityResponse.patient", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setPatient"} **/
						));
Coverageeligibilityresponseobj.setServicedDate(HapiFHIRHelpers.createdate(coverageeligibilityresponse.getCerServicedDateDate() /** { "tree" :"CoverageEligibilityResponse.servicedDate", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setServicedDate"} **/
						));
Coverageeligibilityresponseobj.setServicedPeriod(HapiFHIRHelpers.createPeriod(coverageeligibilityresponse.getCerServicedPeriodPeriodStart() /** { "tree" :"CoverageEligibilityResponse.servicedPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setServicedPeriod, setStart"} **/
						, coverageeligibilityresponse.getCerServicedPeriodPeriodEnd() /** { "tree" :"CoverageEligibilityResponse.servicedPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setServicedPeriod, setEnd"} **/
						));
Coverageeligibilityresponseobj.setCreated(HapiFHIRHelpers.createdateTime(coverageeligibilityresponse.getCerCreatedDateTime() /** { "tree" :"CoverageEligibilityResponse.created", "datatype" : "dateTime", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setCreated"} **/
						));
Coverageeligibilityresponseobj.setRequestor(HapiFHIRHelpers.createReference(coverageeligibilityresponse.getCerRequestorReference() /** { "tree" :"CoverageEligibilityResponse.requestor", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setRequestor"} **/
						));
Coverageeligibilityresponseobj.setRequest(HapiFHIRHelpers.createReference(coverageeligibilityresponse.getCerRequestReference() /** { "tree" :"CoverageEligibilityResponse.request", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setRequest"} **/
						));
Coverageeligibilityresponseobj.setOutcome(HapiFHIRHelpers.createcode(coverageeligibilityresponse.getCerOutcomeCode() /** { "tree" :"CoverageEligibilityResponse.outcome", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setOutcome"} **/
						));
Coverageeligibilityresponseobj.setDisposition(HapiFHIRHelpers.createstring(coverageeligibilityresponse.getCerDispositionString() /** { "tree" :"CoverageEligibilityResponse.disposition", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDisposition"} **/
						));
Coverageeligibilityresponseobj.setInsurer(HapiFHIRHelpers.createReference(coverageeligibilityresponse.getCerInsurerReference() /** { "tree" :"CoverageEligibilityResponse.insurer", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setInsurer"} **/
						));
Coverageeligibilityresponseobj.setCoverage(HapiFHIRHelpers.createReference(coverageeligibilityresponse.getCerInsuranceCoverageReference() /** { "tree" :"CoverageEligibilityResponse.insurance.coverage", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : ["addInsurance"] , "methodName" : "setCoverage"} **/
						));
Coverageeligibilityresponseobj.setInforce(HapiFHIRHelpers.createboolean(coverageeligibilityresponse.getCerInsuranceInforceBoolean() /** { "tree" :"CoverageEligibilityResponse.insurance.inforce", "datatype" : "boolean", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance"] , "methodName" : "setInforce"} **/
						));
Coverageeligibilityresponseobj.setBenefitPeriod(HapiFHIRHelpers.createPeriod(coverageeligibilityresponse.getCrNsrncBnftPrdPrdStrt() /** { "tree" :"CoverageEligibilityResponse.insurance.benefitPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance"] , "methodName" : "setBenefitPeriod, setStart"} **/
						, coverageeligibilityresponse.getCrNsrncBnftPrdPrdNd() /** { "tree" :"CoverageEligibilityResponse.insurance.benefitPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance"] , "methodName" : "setBenefitPeriod, setEnd"} **/
						));
Coverageeligibilityresponseobj.setCategory(HapiFHIRHelpers.createCodeableConcept(coverageeligibilityresponse.getCrNsrncTmCtgrCcCdngCSstm() /** { "tree" :"CoverageEligibilityResponse.insurance.item.category", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setCategory, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCrNsrncTmCtgrCcCdngCVrsn() /** { "tree" :"CoverageEligibilityResponse.insurance.item.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setCategory, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCrNsrncTmCtgrCcCdngCCde() /** { "tree" :"CoverageEligibilityResponse.insurance.item.category", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setCategory, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCrNsrncTmCtgrCcCdngCDsplay() /** { "tree" :"CoverageEligibilityResponse.insurance.item.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setCategory, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCrNsrncTmCtgrCcCdngCSrSlctd() /** { "tree" :"CoverageEligibilityResponse.insurance.item.category", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setCategory, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCrNsrncTmCtgrCcTxt() /** { "tree" :"CoverageEligibilityResponse.insurance.item.category", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setCategory, setText"} **/
						));
Coverageeligibilityresponseobj.setProductOrService(HapiFHIRHelpers.createCodeableConcept(coverageeligibilityresponse.getCrNsrncTmPrdctrSrvcCcCdngCSstm() /** { "tree" :"CoverageEligibilityResponse.insurance.item.productOrService", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setProductOrService, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCrNsrncTmPrdctrSrvcCcCdngCVrsn() /** { "tree" :"CoverageEligibilityResponse.insurance.item.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setProductOrService, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCrNsrncTmPrdctrSrvcCcCdngCCde() /** { "tree" :"CoverageEligibilityResponse.insurance.item.productOrService", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setProductOrService, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCrNsrncTmPrdctrSrvcCcCdngCDsplay() /** { "tree" :"CoverageEligibilityResponse.insurance.item.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setProductOrService, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCrNsrncTmPrdctrSrvcCcCdngCSrSlctd() /** { "tree" :"CoverageEligibilityResponse.insurance.item.productOrService", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setProductOrService, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCrNsrncTmPrdctrSrvcCcTxt() /** { "tree" :"CoverageEligibilityResponse.insurance.item.productOrService", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setProductOrService, setText"} **/
						));
Coverageeligibilityresponseobj.addModifier(HapiFHIRHelpers.createCodeableConcept(coverageeligibilityresponse.getCrNsrncTmMdfrCcCdngCSstm() /** { "tree" :"CoverageEligibilityResponse.insurance.item.modifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "addModifier, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCrNsrncTmMdfrCcCdngCVrsn() /** { "tree" :"CoverageEligibilityResponse.insurance.item.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "addModifier, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCrNsrncTmMdfrCcCdngCCde() /** { "tree" :"CoverageEligibilityResponse.insurance.item.modifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "addModifier, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCrNsrncTmMdfrCcCdngCDsplay() /** { "tree" :"CoverageEligibilityResponse.insurance.item.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "addModifier, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCrNsrncTmMdfrCcCdngCSrSlctd() /** { "tree" :"CoverageEligibilityResponse.insurance.item.modifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "addModifier, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCrNsrncTmMdfrCcTxt() /** { "tree" :"CoverageEligibilityResponse.insurance.item.modifier", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "addModifier, setText"} **/
						));
Coverageeligibilityresponseobj.setProvider(HapiFHIRHelpers.createReference(coverageeligibilityresponse.getCrNsrncTmPrvdrRfrnce() /** { "tree" :"CoverageEligibilityResponse.insurance.item.provider", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setProvider"} **/
						));
Coverageeligibilityresponseobj.setExcluded(HapiFHIRHelpers.createboolean(coverageeligibilityresponse.getCrNsrncTmXclddBln() /** { "tree" :"CoverageEligibilityResponse.insurance.item.excluded", "datatype" : "boolean", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setExcluded"} **/
						));
Coverageeligibilityresponseobj.setName(HapiFHIRHelpers.createstring(coverageeligibilityresponse.getCerInsuranceItemNameString() /** { "tree" :"CoverageEligibilityResponse.insurance.item.name", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setName"} **/
						));
Coverageeligibilityresponseobj.setDescription(HapiFHIRHelpers.createstring(coverageeligibilityresponse.getCrNsrncTmDscrptnStrng() /** { "tree" :"CoverageEligibilityResponse.insurance.item.description", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setDescription"} **/
						));
Coverageeligibilityresponseobj.setNetwork(HapiFHIRHelpers.createCodeableConcept(coverageeligibilityresponse.getCrNsrncTmNtwrkCcCdngCSstm() /** { "tree" :"CoverageEligibilityResponse.insurance.item.network", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setNetwork, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCrNsrncTmNtwrkCcCdngCVrsn() /** { "tree" :"CoverageEligibilityResponse.insurance.item.network", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setNetwork, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCrNsrncTmNtwrkCcCdngCCde() /** { "tree" :"CoverageEligibilityResponse.insurance.item.network", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setNetwork, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCrNsrncTmNtwrkCcCdngCDsplay() /** { "tree" :"CoverageEligibilityResponse.insurance.item.network", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setNetwork, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCrNsrncTmNtwrkCcCdngCSrSlctd() /** { "tree" :"CoverageEligibilityResponse.insurance.item.network", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setNetwork, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCerInsuranceItemNetworkCcText() /** { "tree" :"CoverageEligibilityResponse.insurance.item.network", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setNetwork, setText"} **/
						));
Coverageeligibilityresponseobj.setUnit(HapiFHIRHelpers.createCodeableConcept(coverageeligibilityresponse.getCrNsrncTmNtCcCdngCSstm() /** { "tree" :"CoverageEligibilityResponse.insurance.item.unit", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setUnit, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCrNsrncTmNtCcCdngCVrsn() /** { "tree" :"CoverageEligibilityResponse.insurance.item.unit", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setUnit, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCrNsrncTmNtCcCdngCCde() /** { "tree" :"CoverageEligibilityResponse.insurance.item.unit", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setUnit, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCrNsrncTmNtCcCdngCDsplay() /** { "tree" :"CoverageEligibilityResponse.insurance.item.unit", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setUnit, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCrNsrncTmNtCcCdngCSrSlctd() /** { "tree" :"CoverageEligibilityResponse.insurance.item.unit", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setUnit, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCerInsuranceItemUnitCcText() /** { "tree" :"CoverageEligibilityResponse.insurance.item.unit", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setUnit, setText"} **/
						));
Coverageeligibilityresponseobj.setTerm(HapiFHIRHelpers.createCodeableConcept(coverageeligibilityresponse.getCrNsrncTmTrmCcCdngCSstm() /** { "tree" :"CoverageEligibilityResponse.insurance.item.term", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setTerm, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCrNsrncTmTrmCcCdngCVrsn() /** { "tree" :"CoverageEligibilityResponse.insurance.item.term", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setTerm, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCrNsrncTmTrmCcCdngCCde() /** { "tree" :"CoverageEligibilityResponse.insurance.item.term", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setTerm, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCrNsrncTmTrmCcCdngCDsplay() /** { "tree" :"CoverageEligibilityResponse.insurance.item.term", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setTerm, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCrNsrncTmTrmCcCdngCSrSlctd() /** { "tree" :"CoverageEligibilityResponse.insurance.item.term", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setTerm, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCerInsuranceItemTermCcText() /** { "tree" :"CoverageEligibilityResponse.insurance.item.term", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem"] , "methodName" : "setTerm, setText"} **/
						));
Coverageeligibilityresponseobj.setType(HapiFHIRHelpers.createCodeableConcept(coverageeligibilityresponse.getCrNsrncTmBnftTpCcCdngCSstm() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setType, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCrNsrncTmBnftTpCcCdngCVrsn() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setType, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCrNsrncTmBnftTpCcCdngCCde() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setType, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCrNsrncTmBnftTpCcCdngCDsplay() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCrNsrncTmBnftTpCcCdngCSrSlctd() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCrNsrncTmBnftTpCcTxt() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.type", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setType, setText"} **/
						));
Coverageeligibilityresponseobj.setAllowedUnsignedint(HapiFHIRHelpers.createunsignedInt(coverageeligibilityresponse.getCrNsrncTmBnftLlwdnsgndntNsgndnt() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.allowedUnsignedint", "datatype" : "unsignedInt", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setAllowedUnsignedint"} **/
						));
Coverageeligibilityresponseobj.setAllowedString(HapiFHIRHelpers.createstring(coverageeligibilityresponse.getCrNsrncTmBnftLlwdStrngStrng() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.allowedString", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setAllowedString"} **/
						));
Coverageeligibilityresponseobj.setAllowedMoney(HapiFHIRHelpers.createMoney(coverageeligibilityresponse.getCrNsrncTmBnftLlwdMnMnCrrncy() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.allowedMoney", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setAllowedMoney, setCurrency"} **/
						, coverageeligibilityresponse.getCrNsrncTmBnftLlwdMnMnVlue() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.allowedMoney", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setAllowedMoney, setVal"} **/
						));
Coverageeligibilityresponseobj.setUsedUnsignedint(HapiFHIRHelpers.createunsignedInt(coverageeligibilityresponse.getCrNsrncTmBnftSdnsgndntNsgndnt() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.usedUnsignedint", "datatype" : "unsignedInt", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setUsedUnsignedint"} **/
						));
Coverageeligibilityresponseobj.setUsedString(HapiFHIRHelpers.createstring(coverageeligibilityresponse.getCrNsrncTmBnftSdStrngStrng() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.usedString", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setUsedString"} **/
						));
Coverageeligibilityresponseobj.setUsedMoney(HapiFHIRHelpers.createMoney(coverageeligibilityresponse.getCrNsrncTmBnftSdMnMnCrrncy() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.usedMoney", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setUsedMoney, setCurrency"} **/
						, coverageeligibilityresponse.getCrNsrncTmBnftSdMnMnVlue() /** { "tree" :"CoverageEligibilityResponse.insurance.item.benefit.usedMoney", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setUsedMoney, setVal"} **/
						));
Coverageeligibilityresponseobj.setAuthorizationRequired(HapiFHIRHelpers.createboolean(coverageeligibilityresponse.getCrNsrncTmThrztnRqrdBln() /** { "tree" :"CoverageEligibilityResponse.insurance.item.authorizationRequired", "datatype" : "boolean", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setAuthorizationRequired"} **/
						));
Coverageeligibilityresponseobj.addAuthorizationSupporting(HapiFHIRHelpers.createCodeableConcept(coverageeligibilityresponse.getCrNsrncTmThrztnSpprtngCcCdngCSstm() /** { "tree" :"CoverageEligibilityResponse.insurance.item.authorizationSupporting", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "addAuthorizationSupporting, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCrNsrncTmThrztnSpprtngCcCdngCVrsn() /** { "tree" :"CoverageEligibilityResponse.insurance.item.authorizationSupporting", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "addAuthorizationSupporting, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCrNsrncTmThrztnSpprtngCcCdngCCde() /** { "tree" :"CoverageEligibilityResponse.insurance.item.authorizationSupporting", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "addAuthorizationSupporting, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCrNsrncTmThrztnSpprtngCcCdngCDsplay() /** { "tree" :"CoverageEligibilityResponse.insurance.item.authorizationSupporting", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "addAuthorizationSupporting, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCrNsrncTmThrztnSpprtngCcCdngCSrSlctd() /** { "tree" :"CoverageEligibilityResponse.insurance.item.authorizationSupporting", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "addAuthorizationSupporting, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCrNsrncTmThrztnSpprtngCcTxt() /** { "tree" :"CoverageEligibilityResponse.insurance.item.authorizationSupporting", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "addAuthorizationSupporting, setText"} **/
						));
Coverageeligibilityresponseobj.setAuthorizationUrl(HapiFHIRHelpers.createuri(coverageeligibilityresponse.getCrNsrncTmThrztnrlRi() /** { "tree" :"CoverageEligibilityResponse.insurance.item.authorizationUrl", "datatype" : "uri", "cardinality" : "ZeroOne", "elementtree" : ["addInsurance", "addItem", "addBenefit"] , "methodName" : "setAuthorizationUrl"} **/
						));
Coverageeligibilityresponseobj.setPreAuthRef(HapiFHIRHelpers.createstring(coverageeligibilityresponse.getCerPreAuthRefString() /** { "tree" :"CoverageEligibilityResponse.preAuthRef", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPreAuthRef"} **/
						));
Coverageeligibilityresponseobj.setForm(HapiFHIRHelpers.createCodeableConcept(coverageeligibilityresponse.getCerFormCcCodingCSystem() /** { "tree" :"CoverageEligibilityResponse.form", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCerFormCcCodingCVersion() /** { "tree" :"CoverageEligibilityResponse.form", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCerFormCcCodingCCode() /** { "tree" :"CoverageEligibilityResponse.form", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCerFormCcCodingCDisplay() /** { "tree" :"CoverageEligibilityResponse.form", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCerFormCcCodingCUserSelected() /** { "tree" :"CoverageEligibilityResponse.form", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCerFormCcText() /** { "tree" :"CoverageEligibilityResponse.form", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, setText"} **/
						));
Coverageeligibilityresponseobj.setCode(HapiFHIRHelpers.createCodeableConcept(coverageeligibilityresponse.getCerErrorCodeCcCodingCSystem() /** { "tree" :"CoverageEligibilityResponse.error.code", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addError"] , "methodName" : "setCode, addCoding, setSystem"} **/
						, coverageeligibilityresponse.getCerErrorCodeCcCodingCVersion() /** { "tree" :"CoverageEligibilityResponse.error.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addError"] , "methodName" : "setCode, addCoding, setVersion"} **/
						, coverageeligibilityresponse.getCerErrorCodeCcCodingCCode() /** { "tree" :"CoverageEligibilityResponse.error.code", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addError"] , "methodName" : "setCode, addCoding, setCode"} **/
						, coverageeligibilityresponse.getCerErrorCodeCcCodingCDisplay() /** { "tree" :"CoverageEligibilityResponse.error.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addError"] , "methodName" : "setCode, addCoding, setDisplay"} **/
						, coverageeligibilityresponse.getCrRrrCdCcCdngCSrSlctd() /** { "tree" :"CoverageEligibilityResponse.error.code", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addError"] , "methodName" : "setCode, addCoding, setUserSelected"} **/
						, coverageeligibilityresponse.getCerErrorCodeCcText() /** { "tree" :"CoverageEligibilityResponse.error.code", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addError"] , "methodName" : "setCode, setText"} **/
		));
	}
}
