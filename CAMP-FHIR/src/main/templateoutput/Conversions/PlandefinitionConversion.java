package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Plandefinition.
 * @see .Plandefinition
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class PlandefinitionConversion 
{
	public Patient Plandefinitions(main.templateoutput.Model.Plandefinition plandefinition) 
	{
			Patient  Plandefinitionobj = new Patient(); 

						Plandefinitionobj.setUrl(HapiFHIRHelpers.createuri(plandefinition.getPlanDefinitionUrlUri() /** { "tree" :"PlanDefinition.url", "datatype" : "uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setUrl"} **/
						));
Plandefinitionobj.addIdentifier(HapiFHIRHelpers.createIdentifier(plandefinition.getPlnDfntnDntfrDntfrSe() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setUse"} **/
						, plandefinition.getPlnDfntnDntfrDntfrTpCcCSstm() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnDntfrDntfrTpCcCVrsn() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnDntfrDntfrTpCcCCde() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnDntfrDntfrTpCcCDsplay() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnDntfrDntfrTpCcCSrSlctd() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnDntfrDntfrTpCcTxt() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, setText"} **/
						, plandefinition.getPlnDfntnDntfrDntfrPrdPrdStrt() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, plandefinition.getPlnDfntnDntfrDntfrPrdPrdNd() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, plandefinition.getPlnDfntnDntfrDntfrSsgnr() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setAssigner"} **/
						, plandefinition.getPlnDfntnDntfrDntfrVlue() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setValue"} **/
						, plandefinition.getPlnDfntnDntfrDntfrSstm() /** { "tree" :"PlanDefinition.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setSystem"} **/
						));
Plandefinitionobj.setVersion(HapiFHIRHelpers.createstring(plandefinition.getPlanDefinitionVersionString() /** { "tree" :"PlanDefinition.version", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setVersion"} **/
						));
Plandefinitionobj.setName(HapiFHIRHelpers.createstring(plandefinition.getPlanDefinitionNameString() /** { "tree" :"PlanDefinition.name", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setName"} **/
						));
Plandefinitionobj.setTitle(HapiFHIRHelpers.createstring(plandefinition.getPlanDefinitionTitleString() /** { "tree" :"PlanDefinition.title", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setTitle"} **/
						));
Plandefinitionobj.setSubtitle(HapiFHIRHelpers.createstring(plandefinition.getPlanDefinitionSubtitleString() /** { "tree" :"PlanDefinition.subtitle", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubtitle"} **/
						));
Plandefinitionobj.setType(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnTpCcCdngCSstm() /** { "tree" :"PlanDefinition.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnTpCcCdngCVrsn() /** { "tree" :"PlanDefinition.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnTpCcCdngCCde() /** { "tree" :"PlanDefinition.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnTpCcCdngCDsplay() /** { "tree" :"PlanDefinition.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnTpCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, plandefinition.getPlanDefinitionTypeCcText() /** { "tree" :"PlanDefinition.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setType, setText"} **/
						));
Plandefinitionobj.setStatus(HapiFHIRHelpers.createcode(plandefinition.getPlanDefinitionStatusCode() /** { "tree" :"PlanDefinition.status", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setStatus"} **/
						));
Plandefinitionobj.setExperimental(HapiFHIRHelpers.createboolean(plandefinition.getPlnDfntnXprmntlBln() /** { "tree" :"PlanDefinition.experimental", "datatype" : "boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setExperimental"} **/
						));
Plandefinitionobj.setSubjectCodeableconcept(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnSbjctCdblcncptCcCdngCSstm() /** { "tree" :"PlanDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnSbjctCdblcncptCcCdngCVrsn() /** { "tree" :"PlanDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnSbjctCdblcncptCcCdngCCde() /** { "tree" :"PlanDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnSbjctCdblcncptCcCdngCDsplay() /** { "tree" :"PlanDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnSbjctCdblcncptCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnSbjctCdblcncptCcTxt() /** { "tree" :"PlanDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, setText"} **/
						));
Plandefinitionobj.setSubjectReference(group)(HapiFHIRHelpers.createReference(plandefinition.getPlnDfntnSbjctRfrncRfrnce() /** { "tree" :"PlanDefinition.subjectReference", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectReference(group)"} **/
						));
Plandefinitionobj.setDate(HapiFHIRHelpers.createdateTime(plandefinition.getPlanDefinitionDateDateTime() /** { "tree" :"PlanDefinition.date", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDate"} **/
						));
Plandefinitionobj.setPublisher(HapiFHIRHelpers.createstring(plandefinition.getPlanDefinitionPublisherString() /** { "tree" :"PlanDefinition.publisher", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPublisher"} **/
						));
Plandefinitionobj.addContact(HapiFHIRHelpers.createContactDetail(plandefinition.getPlnDfntnCntctCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"PlanDefinition.contact", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setPeriod, setStart"} **/
						, plandefinition.getPlnDfntnCntctCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"PlanDefinition.contact", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setPeriod, setEnd"} **/
						, plandefinition.getPlnDfntnCntctCntctDtlTlcmCntctPntSstm() /** { "tree" :"PlanDefinition.contact", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setSystem"} **/
						, plandefinition.getPlnDfntnCntctCntctDtlTlcmCntctPntVlue() /** { "tree" :"PlanDefinition.contact", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setValue"} **/
						, plandefinition.getPlnDfntnCntctCntctDtlTlcmCntctPntSe() /** { "tree" :"PlanDefinition.contact", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setUse"} **/
						, plandefinition.getPlnDfntnCntctCntctDtlTlcmCntctPntRnk() /** { "tree" :"PlanDefinition.contact", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setRank"} **/
						, plandefinition.getPlnDfntnCntctCntctDtlNme() /** { "tree" :"PlanDefinition.contact", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, addName"} **/
						));
Plandefinitionobj.setDescription(HapiFHIRHelpers.createmarkdown(plandefinition.getPlnDfntnDscrptnMrkdwn() /** { "tree" :"PlanDefinition.description", "datatype" : "markdown", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDescription"} **/
						));
Plandefinitionobj.addUseContext(HapiFHIRHelpers.createUsageContext(plandefinition.getPlnDfntnSCntxtSgCntxtVlCcCcCSstm() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlCcCcCVrsn() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlCcCcCCde() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlCcCcCDsplay() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlCcCcCSrSlctd() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlCcCcTxt() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, setText"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtCdCSstm() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setSystem"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtCdCVrsn() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setVersion"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtCdCCde() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setCode"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtCdCDsplay() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setDisplay"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtCdCSrSlctd() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setUserSelected"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlQnttQnttVlue() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Quantity, decimal", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setValue"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlQnttQnttCmprtr() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Quantity, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setComparator"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlQnttQnttNt() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Quantity, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setUnit"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlQnttQnttSstm() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Quantity, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setSystem"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlQnttQnttCde() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Quantity, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setCode"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlRngRngLw() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Range, SimpleQuantity", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueRange, setLow"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlRngRngHgh() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Range, SimpleQuantity", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueRange, setHigh"} **/
						, plandefinition.getPlnDfntnSCntxtSgCntxtVlRfrnce() /** { "tree" :"PlanDefinition.useContext", "datatype" : "UsageContext, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueReference"} **/
						));
Plandefinitionobj.addJurisdiction(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnJrsdctnCcCdngCSstm() /** { "tree" :"PlanDefinition.jurisdiction", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnJrsdctnCcCdngCVrsn() /** { "tree" :"PlanDefinition.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnJrsdctnCcCdngCCde() /** { "tree" :"PlanDefinition.jurisdiction", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnJrsdctnCcCdngCDsplay() /** { "tree" :"PlanDefinition.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnJrsdctnCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.jurisdiction", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnJrsdctnCcTxt() /** { "tree" :"PlanDefinition.jurisdiction", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, setText"} **/
						));
Plandefinitionobj.setPurpose(HapiFHIRHelpers.createmarkdown(plandefinition.getPlanDefinitionPurposeMarkdown() /** { "tree" :"PlanDefinition.purpose", "datatype" : "markdown", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPurpose"} **/
						));
Plandefinitionobj.setUsage(HapiFHIRHelpers.createstring(plandefinition.getPlanDefinitionUsageString() /** { "tree" :"PlanDefinition.usage", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setUsage"} **/
						));
Plandefinitionobj.setCopyright(HapiFHIRHelpers.createmarkdown(plandefinition.getPlanDefinitionCopyrightMarkdown() /** { "tree" :"PlanDefinition.copyright", "datatype" : "markdown", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setCopyright"} **/
						));
Plandefinitionobj.setApprovalDate(HapiFHIRHelpers.createdate(plandefinition.getPlanDefinitionApprovalDateDate() /** { "tree" :"PlanDefinition.approvalDate", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setApprovalDate"} **/
						));
Plandefinitionobj.setLastReviewDate(HapiFHIRHelpers.createdate(plandefinition.getPlanDefinitionLastReviewDateDate() /** { "tree" :"PlanDefinition.lastReviewDate", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLastReviewDate"} **/
						));
Plandefinitionobj.setEffectivePeriod(HapiFHIRHelpers.createPeriod(plandefinition.getPlnDfntnFfctvPrdPrdStrt() /** { "tree" :"PlanDefinition.effectivePeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setEffectivePeriod, setStart"} **/
						, plandefinition.getPlnDfntnFfctvPrdPrdNd() /** { "tree" :"PlanDefinition.effectivePeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setEffectivePeriod, setEnd"} **/
						));
Plandefinitionobj.addTopic(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnTpcCcCdngCSstm() /** { "tree" :"PlanDefinition.topic", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnTpcCcCdngCVrsn() /** { "tree" :"PlanDefinition.topic", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnTpcCcCdngCCde() /** { "tree" :"PlanDefinition.topic", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnTpcCcCdngCDsplay() /** { "tree" :"PlanDefinition.topic", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnTpcCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.topic", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setUserSelected"} **/
						, plandefinition.getPlanDefinitionTopicCcText() /** { "tree" :"PlanDefinition.topic", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, setText"} **/
						));
Plandefinitionobj.addAuthor(HapiFHIRHelpers.createContactDetail(plandefinition.getPlnDfntnThrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"PlanDefinition.author", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setPeriod, setStart"} **/
						, plandefinition.getPlnDfntnThrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"PlanDefinition.author", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setPeriod, setEnd"} **/
						, plandefinition.getPlnDfntnThrCntctDtlTlcmCntctPntSstm() /** { "tree" :"PlanDefinition.author", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setSystem"} **/
						, plandefinition.getPlnDfntnThrCntctDtlTlcmCntctPntVlue() /** { "tree" :"PlanDefinition.author", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setValue"} **/
						, plandefinition.getPlnDfntnThrCntctDtlTlcmCntctPntSe() /** { "tree" :"PlanDefinition.author", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setUse"} **/
						, plandefinition.getPlnDfntnThrCntctDtlTlcmCntctPntRnk() /** { "tree" :"PlanDefinition.author", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setRank"} **/
						, plandefinition.getPlnDfntnThrCntctDtlNme() /** { "tree" :"PlanDefinition.author", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, addName"} **/
						));
Plandefinitionobj.addEditor(HapiFHIRHelpers.createContactDetail(plandefinition.getPlnDfntnDtrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"PlanDefinition.editor", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setPeriod, setStart"} **/
						, plandefinition.getPlnDfntnDtrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"PlanDefinition.editor", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setPeriod, setEnd"} **/
						, plandefinition.getPlnDfntnDtrCntctDtlTlcmCntctPntSstm() /** { "tree" :"PlanDefinition.editor", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setSystem"} **/
						, plandefinition.getPlnDfntnDtrCntctDtlTlcmCntctPntVlue() /** { "tree" :"PlanDefinition.editor", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setValue"} **/
						, plandefinition.getPlnDfntnDtrCntctDtlTlcmCntctPntSe() /** { "tree" :"PlanDefinition.editor", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setUse"} **/
						, plandefinition.getPlnDfntnDtrCntctDtlTlcmCntctPntRnk() /** { "tree" :"PlanDefinition.editor", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setRank"} **/
						, plandefinition.getPlnDfntnDtrCntctDtlNme() /** { "tree" :"PlanDefinition.editor", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, addName"} **/
						));
Plandefinitionobj.addReviewer(HapiFHIRHelpers.createContactDetail(plandefinition.getPlnDfntnRvwrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"PlanDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setPeriod, setStart"} **/
						, plandefinition.getPlnDfntnRvwrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"PlanDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setPeriod, setEnd"} **/
						, plandefinition.getPlnDfntnRvwrCntctDtlTlcmCntctPntSstm() /** { "tree" :"PlanDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setSystem"} **/
						, plandefinition.getPlnDfntnRvwrCntctDtlTlcmCntctPntVlue() /** { "tree" :"PlanDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setValue"} **/
						, plandefinition.getPlnDfntnRvwrCntctDtlTlcmCntctPntSe() /** { "tree" :"PlanDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setUse"} **/
						, plandefinition.getPlnDfntnRvwrCntctDtlTlcmCntctPntRnk() /** { "tree" :"PlanDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setRank"} **/
						, plandefinition.getPlnDfntnRvwrCntctDtlNme() /** { "tree" :"PlanDefinition.reviewer", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, addName"} **/
						));
Plandefinitionobj.addEndorser(HapiFHIRHelpers.createContactDetail(plandefinition.getPlnDfntnNdrsrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"PlanDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setPeriod, setStart"} **/
						, plandefinition.getPlnDfntnNdrsrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"PlanDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setPeriod, setEnd"} **/
						, plandefinition.getPlnDfntnNdrsrCntctDtlTlcmCntctPntSstm() /** { "tree" :"PlanDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setSystem"} **/
						, plandefinition.getPlnDfntnNdrsrCntctDtlTlcmCntctPntVlue() /** { "tree" :"PlanDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setValue"} **/
						, plandefinition.getPlnDfntnNdrsrCntctDtlTlcmCntctPntSe() /** { "tree" :"PlanDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setUse"} **/
						, plandefinition.getPlnDfntnNdrsrCntctDtlTlcmCntctPntRnk() /** { "tree" :"PlanDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setRank"} **/
						, plandefinition.getPlnDfntnNdrsrCntctDtlNme() /** { "tree" :"PlanDefinition.endorser", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, addName"} **/
						));
Plandefinitionobj.addRelatedArtifact(HapiFHIRHelpers.createRelatedArtifact(plandefinition.getPlnDfntnRltdrtfctRltdrtfctDcmntTtchmntCntntTpe() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setContentType"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctDcmntTtchmntLngge() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setLanguage"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctDcmntTtchmntDta() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, base64Binary", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setData"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctDcmntTtchmntRl() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, url", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setUrl"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctDcmntTtchmntSze() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, unsignedInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setSize"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctDcmntTtchmntHsh() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, base64Binary", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setHash"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctDcmntTtchmntTtle() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setTitle"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctDcmntTtchmntCrtn() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setCreation"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctRsrce() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, canonical", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setResource"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctTpe() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setType"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctCttn() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, markdown", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setCitation"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctLbl() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setLabel"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctDsplay() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDisplay"} **/
						, plandefinition.getPlnDfntnRltdrtfctRltdrtfctRl() /** { "tree" :"PlanDefinition.relatedArtifact", "datatype" : "RelatedArtifact, url", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setUrl"} **/
						));
Plandefinitionobj.addLibrary(HapiFHIRHelpers.createcanonical(plandefinition.getPlanDefinitionLibraryCanonical() /** { "tree" :"PlanDefinition.library", "datatype" : "canonical", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addLibrary"} **/
						));
Plandefinitionobj.setCategory(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnGlCtgrCcCdngCSstm() /** { "tree" :"PlanDefinition.goal.category", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setCategory, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnGlCtgrCcCdngCVrsn() /** { "tree" :"PlanDefinition.goal.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setCategory, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnGlCtgrCcCdngCCde() /** { "tree" :"PlanDefinition.goal.category", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setCategory, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnGlCtgrCcCdngCDsplay() /** { "tree" :"PlanDefinition.goal.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setCategory, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnGlCtgrCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.goal.category", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setCategory, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnGlCtgrCcTxt() /** { "tree" :"PlanDefinition.goal.category", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setCategory, setText"} **/
						));
Plandefinitionobj.setDescription(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnGlDscrptnCcCdngCSstm() /** { "tree" :"PlanDefinition.goal.description", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addGoal"] , "methodName" : "setDescription, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnGlDscrptnCcCdngCVrsn() /** { "tree" :"PlanDefinition.goal.description", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addGoal"] , "methodName" : "setDescription, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnGlDscrptnCcCdngCCde() /** { "tree" :"PlanDefinition.goal.description", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addGoal"] , "methodName" : "setDescription, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnGlDscrptnCcCdngCDsplay() /** { "tree" :"PlanDefinition.goal.description", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addGoal"] , "methodName" : "setDescription, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnGlDscrptnCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.goal.description", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addGoal"] , "methodName" : "setDescription, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnGlDscrptnCcTxt() /** { "tree" :"PlanDefinition.goal.description", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addGoal"] , "methodName" : "setDescription, setText"} **/
						));
Plandefinitionobj.setPriority(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnGlPrrtCcCdngCSstm() /** { "tree" :"PlanDefinition.goal.priority", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setPriority, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnGlPrrtCcCdngCVrsn() /** { "tree" :"PlanDefinition.goal.priority", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setPriority, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnGlPrrtCcCdngCCde() /** { "tree" :"PlanDefinition.goal.priority", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setPriority, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnGlPrrtCcCdngCDsplay() /** { "tree" :"PlanDefinition.goal.priority", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setPriority, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnGlPrrtCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.goal.priority", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setPriority, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnGlPrrtCcTxt() /** { "tree" :"PlanDefinition.goal.priority", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setPriority, setText"} **/
						));
Plandefinitionobj.setStart(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnGlStrtCcCdngCSstm() /** { "tree" :"PlanDefinition.goal.start", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setStart, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnGlStrtCcCdngCVrsn() /** { "tree" :"PlanDefinition.goal.start", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setStart, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnGlStrtCcCdngCCde() /** { "tree" :"PlanDefinition.goal.start", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setStart, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnGlStrtCcCdngCDsplay() /** { "tree" :"PlanDefinition.goal.start", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setStart, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnGlStrtCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.goal.start", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setStart, addCoding, setUserSelected"} **/
						, plandefinition.getPlanDefinitionGoalStartCcText() /** { "tree" :"PlanDefinition.goal.start", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal"] , "methodName" : "setStart, setText"} **/
						));
Plandefinitionobj.addAddresses(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnGlDdrsssCcCdngCSstm() /** { "tree" :"PlanDefinition.goal.addresses", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addAddresses, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnGlDdrsssCcCdngCVrsn() /** { "tree" :"PlanDefinition.goal.addresses", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addAddresses, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnGlDdrsssCcCdngCCde() /** { "tree" :"PlanDefinition.goal.addresses", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addAddresses, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnGlDdrsssCcCdngCDsplay() /** { "tree" :"PlanDefinition.goal.addresses", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addAddresses, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnGlDdrsssCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.goal.addresses", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addAddresses, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnGlDdrsssCcTxt() /** { "tree" :"PlanDefinition.goal.addresses", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addAddresses, setText"} **/
						));
Plandefinitionobj.addDocumentation(HapiFHIRHelpers.createRelatedArtifact(plandefinition.getPlnDfntnGlDcmnttnRltdrtfctDcmntTtchmntCntntTpe() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, Attachment, code", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setDocument, setContentType"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctDcmntTtchmntLngge() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, Attachment, code", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setDocument, setLanguage"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctDcmntTtchmntDta() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, Attachment, base64Binary", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setDocument, setData"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctDcmntTtchmntRl() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, Attachment, url", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setDocument, setUrl"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctDcmntTtchmntSze() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, Attachment, unsignedInt", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setDocument, setSize"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctDcmntTtchmntHsh() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, Attachment, base64Binary", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setDocument, setHash"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctDcmntTtchmntTtle() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, Attachment, string", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setDocument, setTitle"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctDcmntTtchmntCrtn() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, Attachment, dateTime", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setDocument, setCreation"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctRsrce() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, canonical", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setResource"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctTpe() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, code", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setType"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctCttn() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, markdown", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setCitation"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctLbl() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, string", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setLabel"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctDsplay() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, string", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setDisplay"} **/
						, plandefinition.getPlnDfntnGlDcmnttnRltdrtfctRl() /** { "tree" :"PlanDefinition.goal.documentation", "datatype" : "RelatedArtifact, url", "cardinality" : "Many", "elementtree" : ["addGoal"] , "methodName" : "addDocumentation, setUrl"} **/
						));
Plandefinitionobj.setMeasure(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnGlTrgtMsrCcCdngCSstm() /** { "tree" :"PlanDefinition.goal.target.measure", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setMeasure, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnGlTrgtMsrCcCdngCVrsn() /** { "tree" :"PlanDefinition.goal.target.measure", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setMeasure, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnGlTrgtMsrCcCdngCCde() /** { "tree" :"PlanDefinition.goal.target.measure", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setMeasure, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnGlTrgtMsrCcCdngCDsplay() /** { "tree" :"PlanDefinition.goal.target.measure", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setMeasure, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnGlTrgtMsrCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.goal.target.measure", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setMeasure, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnGlTrgtMsrCcTxt() /** { "tree" :"PlanDefinition.goal.target.measure", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setMeasure, setText"} **/
						));
Plandefinitionobj.setDetailQuantity(HapiFHIRHelpers.createQuantity(plandefinition.getPlnDfntnGlTrgtDtlQnttQnttCmprtr() /** { "tree" :"PlanDefinition.goal.target.detailQuantity", "datatype" : "Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailQuantity, setComparator"} **/
						, plandefinition.getPlnDfntnGlTrgtDtlQnttQnttCde() /** { "tree" :"PlanDefinition.goal.target.detailQuantity", "datatype" : "Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailQuantity, setCode"} **/
						, plandefinition.getPlnDfntnGlTrgtDtlQnttQnttVlue() /** { "tree" :"PlanDefinition.goal.target.detailQuantity", "datatype" : "Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailQuantity, setValue"} **/
						, plandefinition.getPlnDfntnGlTrgtDtlQnttQnttNt() /** { "tree" :"PlanDefinition.goal.target.detailQuantity", "datatype" : "Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailQuantity, setUnit"} **/
						, plandefinition.getPlnDfntnGlTrgtDtlQnttQnttSstm() /** { "tree" :"PlanDefinition.goal.target.detailQuantity", "datatype" : "Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailQuantity, setSystem"} **/
						));
Plandefinitionobj.setDetailRange(HapiFHIRHelpers.createRange(plandefinition.getPlnDfntnGlTrgtDtlRngRngLw() /** { "tree" :"PlanDefinition.goal.target.detailRange", "datatype" : "Range, SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailRange, setLow"} **/
						, plandefinition.getPlnDfntnGlTrgtDtlRngRngHgh() /** { "tree" :"PlanDefinition.goal.target.detailRange", "datatype" : "Range, SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailRange, setHigh"} **/
						));
Plandefinitionobj.setDetailCodeableconcept(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnGlTrgtDtlCdblcncptCcCdngCSstm() /** { "tree" :"PlanDefinition.goal.target.detailCodeableconcept", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailCodeableconcept, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnGlTrgtDtlCdblcncptCcCdngCVrsn() /** { "tree" :"PlanDefinition.goal.target.detailCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailCodeableconcept, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnGlTrgtDtlCdblcncptCcCdngCCde() /** { "tree" :"PlanDefinition.goal.target.detailCodeableconcept", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailCodeableconcept, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnGlTrgtDtlCdblcncptCcCdngCDsplay() /** { "tree" :"PlanDefinition.goal.target.detailCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailCodeableconcept, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnGlTrgtDtlCdblcncptCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.goal.target.detailCodeableconcept", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailCodeableconcept, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnGlTrgtDtlCdblcncptCcTxt() /** { "tree" :"PlanDefinition.goal.target.detailCodeableconcept", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDetailCodeableconcept, setText"} **/
						));
Plandefinitionobj.setDue(HapiFHIRHelpers.createDuration(plandefinition.getPlnDfntnGlTrgtDDrtn() /** { "tree" :"PlanDefinition.goal.target.due", "datatype" : "Duration", "cardinality" : "ZeroOne", "elementtree" : ["addGoal", "addTarget"] , "methodName" : "setDue"} **/
						));
Plandefinitionobj.setPrefix(HapiFHIRHelpers.createstring(plandefinition.getPlnDfntnCtnPrfxStrng() /** { "tree" :"PlanDefinition.action.prefix", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setPrefix"} **/
						));
Plandefinitionobj.setTitle(HapiFHIRHelpers.createstring(plandefinition.getPlanDefinitionActionTitleString() /** { "tree" :"PlanDefinition.action.title", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setTitle"} **/
						));
Plandefinitionobj.setDescription(HapiFHIRHelpers.createstring(plandefinition.getPlnDfntnCtnDscrptnStrng() /** { "tree" :"PlanDefinition.action.description", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setDescription"} **/
						));
Plandefinitionobj.setTextEquivalent(HapiFHIRHelpers.createstring(plandefinition.getPlnDfntnCtnTxtqvlntStrng() /** { "tree" :"PlanDefinition.action.textEquivalent", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setTextEquivalent"} **/
						));
Plandefinitionobj.setPriority(HapiFHIRHelpers.createcode(plandefinition.getPlnDfntnCtnPrrtCde() /** { "tree" :"PlanDefinition.action.priority", "datatype" : "code", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setPriority"} **/
						));
Plandefinitionobj.addCode(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnCtnCdCcCdngCSstm() /** { "tree" :"PlanDefinition.action.code", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addCode, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnCtnCdCcCdngCVrsn() /** { "tree" :"PlanDefinition.action.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addCode, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnCtnCdCcCdngCCde() /** { "tree" :"PlanDefinition.action.code", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addCode, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnCtnCdCcCdngCDsplay() /** { "tree" :"PlanDefinition.action.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addCode, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnCtnCdCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.action.code", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addCode, addCoding, setUserSelected"} **/
						, plandefinition.getPlanDefinitionActionCodeCcText() /** { "tree" :"PlanDefinition.action.code", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addCode, setText"} **/
						));
Plandefinitionobj.addReason(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnCtnRsnCcCdngCSstm() /** { "tree" :"PlanDefinition.action.reason", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addReason, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnCtnRsnCcCdngCVrsn() /** { "tree" :"PlanDefinition.action.reason", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addReason, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnCtnRsnCcCdngCCde() /** { "tree" :"PlanDefinition.action.reason", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addReason, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnCtnRsnCcCdngCDsplay() /** { "tree" :"PlanDefinition.action.reason", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addReason, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnCtnRsnCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.action.reason", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addReason, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnCtnRsnCcTxt() /** { "tree" :"PlanDefinition.action.reason", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addReason, setText"} **/
						));
Plandefinitionobj.addDocumentation(HapiFHIRHelpers.createRelatedArtifact(plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctDcmntTtchmntCntntTpe() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, Attachment, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setDocument, setContentType"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctDcmntTtchmntLngge() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, Attachment, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setDocument, setLanguage"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctDcmntTtchmntDta() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, Attachment, base64Binary", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setDocument, setData"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctDcmntTtchmntRl() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, Attachment, url", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setDocument, setUrl"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctDcmntTtchmntSze() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, Attachment, unsignedInt", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setDocument, setSize"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctDcmntTtchmntHsh() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, Attachment, base64Binary", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setDocument, setHash"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctDcmntTtchmntTtle() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, Attachment, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setDocument, setTitle"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctDcmntTtchmntCrtn() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, Attachment, dateTime", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setDocument, setCreation"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctRsrce() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, canonical", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setResource"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctTpe() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setType"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctCttn() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, markdown", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setCitation"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctLbl() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setLabel"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctDsplay() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setDisplay"} **/
						, plandefinition.getPlnDfntnCtnDcmnttnRltdrtfctRl() /** { "tree" :"PlanDefinition.action.documentation", "datatype" : "RelatedArtifact, url", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addDocumentation, setUrl"} **/
						));
Plandefinitionobj.addGoalId(HapiFHIRHelpers.createid(plandefinition.getPlanDefinitionActionGoalIdId() /** { "tree" :"PlanDefinition.action.goalId", "datatype" : "id", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addGoalId"} **/
						));
Plandefinitionobj.setSubjectCodeableconcept(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnCtnSbjctCdblcncptCcCdngCSstm() /** { "tree" :"PlanDefinition.action.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setSubjectCodeableconcept, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnCtnSbjctCdblcncptCcCdngCVrsn() /** { "tree" :"PlanDefinition.action.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setSubjectCodeableconcept, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnCtnSbjctCdblcncptCcCdngCCde() /** { "tree" :"PlanDefinition.action.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setSubjectCodeableconcept, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnCtnSbjctCdblcncptCcCdngCDsplay() /** { "tree" :"PlanDefinition.action.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setSubjectCodeableconcept, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnCtnSbjctCdblcncptCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.action.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setSubjectCodeableconcept, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnCtnSbjctCdblcncptCcTxt() /** { "tree" :"PlanDefinition.action.subjectCodeableconcept", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setSubjectCodeableconcept, setText"} **/
						));
Plandefinitionobj.setSubjectReference(group)(HapiFHIRHelpers.createReference(plandefinition.getPlnDfntnCtnSbjctRfrncRfrnce() /** { "tree" :"PlanDefinition.action.subjectReference", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["addAction"] , "methodName" : "setSubjectReference(group)"} **/
						));
Plandefinitionobj.addTrigger(HapiFHIRHelpers.createTriggerDefinition(plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTpe() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addType"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntCcCdng() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, CodeableConcept, Coding", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, setSubjectCodeableConcept, addCoding"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntCcTxt() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, setSubjectCodeableConcept, setText"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntTpe() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, setType"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntPrfle() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, canonical", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addProfile"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntSbjctRfrnce() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, Reference", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, setSubjectReference"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntMstSpprt() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addMustSupport"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntCdFltrPth() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addCodeFilter, setPath"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntCdFltrSrchPrm() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addCodeFilter, setSearchParam"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntCdFltrVlSt() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, canonical", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addCodeFilter, setValueSet"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntCdFltrCde() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, Coding", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addCodeFilter, addCode"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntDtFltrPth() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addDateFilter, setPath"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntDtFltrSrchPrm() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addDateFilter, setSearchParam"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntDtFltrVlDtTme() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, dateTime", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addDateFilter, setValueDateTime"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntDtFltrVlPrd() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, Period", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addDateFilter, setValuePeriod"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntDtFltrVlDrtn() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, Duration", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addDateFilter, setValueDuration"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntLmt() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, positiveInt", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, setLimit"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntSrtPth() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addSort, setPath"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnDtDtRqrmntSrtDrctn() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, DataRequirement, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, setData, addSort, setDirection"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngDte() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, date", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingDate"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngDtTme() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, dateTime", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingDateTime"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnCndtnXprssnDscrptn() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Expression, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addCondition, setDescription"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnCndtnXprssnNme() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Expression, id", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addCondition, setName"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnCndtnXprssnLngge() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Expression, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addCondition, setLanguage"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnCndtnXprssnXprssn() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Expression, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addCondition, setExpression"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnCndtnXprssnRfrnce() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Expression, uri", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addCondition, setReference"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngRfrnce() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Reference", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingReference"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnNme() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addName"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngCcCdng() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, CodeableConcept, Coding", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setCode, addCoding"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngCcTxt() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setCode, setText"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngVnt() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, dateTime", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, addEvent"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptBndsDrtn() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, Duration", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setBoundsDuration"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptBndsRnge() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, Range", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setBoundsRange"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptBndsPrd() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, Period", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setBoundsPeriod"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptCnt() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setCount"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptCntMx() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setCountMax"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptDrtn() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setDuration"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptDrtnMx() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setDurationMax"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptDrtnnt() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setDurationUnit"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptFrqncy() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setFrequency"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptFrqncMx() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setFrequencyMax"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptPrd() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setPeriod"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptPrdMx() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, decimal", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setPeriodMax"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptPrdnt() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setPeriodUnit"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptDfWk() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, addDayOfWeek"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptTmfDay() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, time", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, addTimeOfDay"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptWhn() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, code", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, addWhen"} **/
						, plandefinition.getPlnDfntnCtnTrggrTrggrDfntnTmngTmngTmngRptFfst() /** { "tree" :"PlanDefinition.action.trigger", "datatype" : "TriggerDefinition, Timing, Element, unsignedInt", "cardinality" : "Many", "elementtree" : ["addAction"] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setOffset"} **/
						));
Plandefinitionobj.setKind(HapiFHIRHelpers.createcode(plandefinition.getPlnDfntnCtnCndtnKndCde() /** { "tree" :"PlanDefinition.action.condition.kind", "datatype" : "code", "cardinality" : "Required", "elementtree" : ["addAction", "addCondition"] , "methodName" : "setKind"} **/
						));
Plandefinitionobj.setExpression(HapiFHIRHelpers.createExpression(plandefinition.getPlnDfntnCtnCndtnXprssnXprssnLngge() /** { "tree" :"PlanDefinition.action.condition.expression", "datatype" : "Expression, code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition"] , "methodName" : "setExpression, setLanguage"} **/
						, plandefinition.getPlnDfntnCtnCndtnXprssnXprssnNme() /** { "tree" :"PlanDefinition.action.condition.expression", "datatype" : "Expression, id", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition"] , "methodName" : "setExpression, setName"} **/
						, plandefinition.getPlnDfntnCtnCndtnXprssnXprssnDscrptn() /** { "tree" :"PlanDefinition.action.condition.expression", "datatype" : "Expression, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition"] , "methodName" : "setExpression, setDescription"} **/
						, plandefinition.getPlnDfntnCtnCndtnXprssnXprssnXprssn() /** { "tree" :"PlanDefinition.action.condition.expression", "datatype" : "Expression, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition"] , "methodName" : "setExpression, setExpression"} **/
						, plandefinition.getPlnDfntnCtnCndtnXprssnXprssnRfrnce() /** { "tree" :"PlanDefinition.action.condition.expression", "datatype" : "Expression, uri", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition"] , "methodName" : "setExpression, setReference"} **/
						));
Plandefinitionobj.addInput(HapiFHIRHelpers.createDataRequirement(plandefinition.getPlnDfntnCtnNptDtRqrmntPrfle() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, canonical", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addProfile"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntTpe() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, code", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, setType"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntSbjctCcCcCSstm() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, setSubjectCodeableConcept, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntSbjctCcCcCVrsn() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, setSubjectCodeableConcept, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntSbjctCcCcCCde() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, setSubjectCodeableConcept, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntSbjctCcCcCDsplay() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, setSubjectCodeableConcept, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntSbjctCcCcCSrSlctd() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, setSubjectCodeableConcept, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntSbjctCcCcTxt() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, setSubjectCodeableConcept, setText"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntCdFltrVlSt() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, Element, canonical", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addCodeFilter, setValueSet"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntSrtDrctn() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, code", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addSort, setDirection"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntCdFltrCde() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, Element, Coding", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addCodeFilter, addCode"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntDtFltrVlDtTme() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, Element, dateTime", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addDateFilter, setValueDateTime"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntDtFltrVlDrtn() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, Element, Duration", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addDateFilter, setValueDuration"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntDtFltrVlPrd() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, Element, Period", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addDateFilter, setValuePeriod"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntCdFltrPth() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addCodeFilter, setPath"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntCdFltrSrchPrm() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addCodeFilter, setSearchParam"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntDtFltrPth() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addDateFilter, setPath"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntDtFltrSrchPrm() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addDateFilter, setSearchParam"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntSrtPth() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addSort, setPath"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntLmt() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, positiveInt", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, setLimit"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntSbjctRfrnce() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, Reference", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, setSubjectReference"} **/
						, plandefinition.getPlnDfntnCtnNptDtRqrmntMstSpprt() /** { "tree" :"PlanDefinition.action.input", "datatype" : "DataRequirement, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addInput, addMustSupport"} **/
						));
Plandefinitionobj.addOutput(HapiFHIRHelpers.createDataRequirement(plandefinition.getPlnDfntnCtnTptDtRqrmntPrfle() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, canonical", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addProfile"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntTpe() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, code", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, setType"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntSbjctCcCcCSstm() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, setSubjectCodeableConcept, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntSbjctCcCcCVrsn() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, setSubjectCodeableConcept, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntSbjctCcCcCCde() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, setSubjectCodeableConcept, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntSbjctCcCcCDsplay() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, setSubjectCodeableConcept, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntSbjctCcCcCSrSlctd() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, setSubjectCodeableConcept, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntSbjctCcCcTxt() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, setSubjectCodeableConcept, setText"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntCdFltrVlSt() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, Element, canonical", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addCodeFilter, setValueSet"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntSrtDrctn() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, code", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addSort, setDirection"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntCdFltrCde() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, Element, Coding", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addCodeFilter, addCode"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntDtFltrVlDtTme() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, Element, dateTime", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addDateFilter, setValueDateTime"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntDtFltrVlDrtn() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, Element, Duration", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addDateFilter, setValueDuration"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntDtFltrVlPrd() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, Element, Period", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addDateFilter, setValuePeriod"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntCdFltrPth() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addCodeFilter, setPath"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntCdFltrSrchPrm() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addCodeFilter, setSearchParam"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntDtFltrPth() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addDateFilter, setPath"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntDtFltrSrchPrm() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addDateFilter, setSearchParam"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntSrtPth() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addSort, setPath"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntLmt() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, positiveInt", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, setLimit"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntSbjctRfrnce() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, Reference", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, setSubjectReference"} **/
						, plandefinition.getPlnDfntnCtnTptDtRqrmntMstSpprt() /** { "tree" :"PlanDefinition.action.output", "datatype" : "DataRequirement, string", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition"] , "methodName" : "addOutput, addMustSupport"} **/
						));
Plandefinitionobj.setActionId(HapiFHIRHelpers.createid(plandefinition.getPlnDfntnCtnRltdctnCtndD() /** { "tree" :"PlanDefinition.action.relatedAction.actionId", "datatype" : "id", "cardinality" : "Required", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setActionId"} **/
						));
Plandefinitionobj.setRelationship(HapiFHIRHelpers.createcode(plandefinition.getPlnDfntnCtnRltdctnRltnshpCde() /** { "tree" :"PlanDefinition.action.relatedAction.relationship", "datatype" : "code", "cardinality" : "Required", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setRelationship"} **/
						));
Plandefinitionobj.setOffsetDuration(HapiFHIRHelpers.createDuration(plandefinition.getPlnDfntnCtnRltdctnFfstDrtnDrtn() /** { "tree" :"PlanDefinition.action.relatedAction.offsetDuration", "datatype" : "Duration", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setOffsetDuration"} **/
						));
Plandefinitionobj.setOffsetRange(HapiFHIRHelpers.createRange(plandefinition.getPlnDfntnCtnRltdctnFfstRngRngLw() /** { "tree" :"PlanDefinition.action.relatedAction.offsetRange", "datatype" : "Range, SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setOffsetRange, setLow"} **/
						, plandefinition.getPlnDfntnCtnRltdctnFfstRngRngHgh() /** { "tree" :"PlanDefinition.action.relatedAction.offsetRange", "datatype" : "Range, SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setOffsetRange, setHigh"} **/
						));
Plandefinitionobj.setTiming(HapiFHIRHelpers.createdateTimetype(plandefinition.getPlnDfntnCtnTmngDttmDtTme() /** { "tree" :"PlanDefinition.action.timingDatetime", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingDatetime"} **/
						));
Plandefinitionobj.setTimingAge(HapiFHIRHelpers.createAge(plandefinition.getPlnDfntnCtnTmnggGe() /** { "tree" :"PlanDefinition.action.timingAge", "datatype" : "Age", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingAge"} **/
						));
Plandefinitionobj.setTimingPeriod(HapiFHIRHelpers.createPeriod(plandefinition.getPlnDfntnCtnTmngPrdPrdStrt() /** { "tree" :"PlanDefinition.action.timingPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingPeriod, setStart"} **/
						, plandefinition.getPlnDfntnCtnTmngPrdPrdNd() /** { "tree" :"PlanDefinition.action.timingPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingPeriod, setEnd"} **/
						));
Plandefinitionobj.setTimingDuration(HapiFHIRHelpers.createDuration(plandefinition.getPlnDfntnCtnTmngDrtnDrtn() /** { "tree" :"PlanDefinition.action.timingDuration", "datatype" : "Duration", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingDuration"} **/
						));
Plandefinitionobj.setTimingRange(HapiFHIRHelpers.createRange(plandefinition.getPlnDfntnCtnTmngRngRngLw() /** { "tree" :"PlanDefinition.action.timingRange", "datatype" : "Range, SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingRange, setLow"} **/
						, plandefinition.getPlnDfntnCtnTmngRngRngHgh() /** { "tree" :"PlanDefinition.action.timingRange", "datatype" : "Range, SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingRange, setHigh"} **/
						));
Plandefinitionobj.setTimingTiming(HapiFHIRHelpers.createTiming(plandefinition.getPlnDfntnCtnTmngTmngTmngCdCcCSstm() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setCode, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngCdCcCVrsn() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setCode, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngCdCcCCde() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setCode, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngCdCcCDsplay() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setCode, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngCdCcCSrSlctd() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setCode, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngCdCcTxt() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setCode, setText"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngVnt() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, addEvent"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptDrtnnt() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setDurationUnit"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptPrdnt() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setPeriodUnit"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptDfWk() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, addDayOfWeek"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptWhn() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, addWhen"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptDrtn() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setDuration"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptDrtnMx() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setDurationMax"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptPrd() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setPeriod"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptPrdMx() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setPeriodMax"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptBndsDrtn() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, Duration", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setBoundsDuration"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptBndsPrd() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, Period", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setBoundsPeriod"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptCnt() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setCount"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptCntMx() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setCountMax"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptFrqncy() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setFrequency"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptFrqncMx() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setFrequencyMax"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptBndsRnge() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, Range", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setBoundsRange"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptTmfDay() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, time", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, addTimeOfDay"} **/
						, plandefinition.getPlnDfntnCtnTmngTmngTmngRptFfst() /** { "tree" :"PlanDefinition.action.timingTiming", "datatype" : "Timing, Element, unsignedInt", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction"] , "methodName" : "setTimingTiming, setRepeat, setOffset"} **/
						));
Plandefinitionobj.setType(HapiFHIRHelpers.createcode(plandefinition.getPlnDfntnCtnPrtcpntTpCde() /** { "tree" :"PlanDefinition.action.participant.type", "datatype" : "code", "cardinality" : "Required", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setType"} **/
						));
Plandefinitionobj.setRole(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnCtnPrtcpntRlCcCdngCSstm() /** { "tree" :"PlanDefinition.action.participant.role", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setRole, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnCtnPrtcpntRlCcCdngCVrsn() /** { "tree" :"PlanDefinition.action.participant.role", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setRole, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnCtnPrtcpntRlCcCdngCCde() /** { "tree" :"PlanDefinition.action.participant.role", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setRole, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnCtnPrtcpntRlCcCdngCDsplay() /** { "tree" :"PlanDefinition.action.participant.role", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setRole, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnCtnPrtcpntRlCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.action.participant.role", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setRole, addCoding, setUserSelected"} **/
						, plandefinition.getPlnDfntnCtnPrtcpntRlCcTxt() /** { "tree" :"PlanDefinition.action.participant.role", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setRole, setText"} **/
						));
Plandefinitionobj.setType(HapiFHIRHelpers.createCodeableConcept(plandefinition.getPlnDfntnCtnTpCcCdngCSstm() /** { "tree" :"PlanDefinition.action.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setType, addCoding, setSystem"} **/
						, plandefinition.getPlnDfntnCtnTpCcCdngCVrsn() /** { "tree" :"PlanDefinition.action.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setType, addCoding, setVersion"} **/
						, plandefinition.getPlnDfntnCtnTpCcCdngCCde() /** { "tree" :"PlanDefinition.action.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setType, addCoding, setCode"} **/
						, plandefinition.getPlnDfntnCtnTpCcCdngCDsplay() /** { "tree" :"PlanDefinition.action.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, plandefinition.getPlnDfntnCtnTpCcCdngCSrSlctd() /** { "tree" :"PlanDefinition.action.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, plandefinition.getPlanDefinitionActionTypeCcText() /** { "tree" :"PlanDefinition.action.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setType, setText"} **/
						));
Plandefinitionobj.setGroupingBehavior(HapiFHIRHelpers.createcode(plandefinition.getPlnDfntnCtnGrpngBhvrCde() /** { "tree" :"PlanDefinition.action.groupingBehavior", "datatype" : "code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setGroupingBehavior"} **/
						));
Plandefinitionobj.setSelectionBehavior(HapiFHIRHelpers.createcode(plandefinition.getPlnDfntnCtnSlctnBhvrCde() /** { "tree" :"PlanDefinition.action.selectionBehavior", "datatype" : "code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setSelectionBehavior"} **/
						));
Plandefinitionobj.setRequiredBehavior(HapiFHIRHelpers.createcode(plandefinition.getPlnDfntnCtnRqrdBhvrCde() /** { "tree" :"PlanDefinition.action.requiredBehavior", "datatype" : "code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setRequiredBehavior"} **/
						));
Plandefinitionobj.setPrecheckBehavior(HapiFHIRHelpers.createcode(plandefinition.getPlnDfntnCtnPrchckBhvrCde() /** { "tree" :"PlanDefinition.action.precheckBehavior", "datatype" : "code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setPrecheckBehavior"} **/
						));
Plandefinitionobj.setCardinalityBehavior(HapiFHIRHelpers.createcode(plandefinition.getPlnDfntnCtnCrdnltBhvrCde() /** { "tree" :"PlanDefinition.action.cardinalityBehavior", "datatype" : "code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setCardinalityBehavior"} **/
						));
Plandefinitionobj.setDefinitionCanonical(activitydefinition | plandefinition | questionnaire)(HapiFHIRHelpers.createcanonical(plandefinition.getPlnDfntnCtnDfntnCnnclCnncl() /** { "tree" :"PlanDefinition.action.definitionCanonical", "datatype" : "canonical", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setDefinitionCanonical(activitydefinition | plandefinition | questionnaire)"} **/
						));
Plandefinitionobj.setDefinitionUri(HapiFHIRHelpers.createuri(plandefinition.getPlnDfntnCtnDfntnrRi() /** { "tree" :"PlanDefinition.action.definitionUri", "datatype" : "uri", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setDefinitionUri"} **/
						));
Plandefinitionobj.setTransform(HapiFHIRHelpers.createcanonical(plandefinition.getPlnDfntnCtnTrnsfrmCnncl() /** { "tree" :"PlanDefinition.action.transform", "datatype" : "canonical", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant"] , "methodName" : "setTransform"} **/
						));
Plandefinitionobj.setPath(HapiFHIRHelpers.createstring(plandefinition.getPlnDfntnCtnDnmcVlPthStrng() /** { "tree" :"PlanDefinition.action.dynamicValue.path", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant", "addDynamicValue"] , "methodName" : "setPath"} **/
						));
Plandefinitionobj.setExpression(HapiFHIRHelpers.createExpression(plandefinition.getPlnDfntnCtnDnmcVlXprssnXprssnLngge() /** { "tree" :"PlanDefinition.action.dynamicValue.expression", "datatype" : "Expression, code", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant", "addDynamicValue"] , "methodName" : "setExpression, setLanguage"} **/
						, plandefinition.getPlnDfntnCtnDnmcVlXprssnXprssnNme() /** { "tree" :"PlanDefinition.action.dynamicValue.expression", "datatype" : "Expression, id", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant", "addDynamicValue"] , "methodName" : "setExpression, setName"} **/
						, plandefinition.getPlnDfntnCtnDnmcVlXprssnXprssnDscrptn() /** { "tree" :"PlanDefinition.action.dynamicValue.expression", "datatype" : "Expression, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant", "addDynamicValue"] , "methodName" : "setExpression, setDescription"} **/
						, plandefinition.getPlnDfntnCtnDnmcVlXprssnXprssnXprssn() /** { "tree" :"PlanDefinition.action.dynamicValue.expression", "datatype" : "Expression, string", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant", "addDynamicValue"] , "methodName" : "setExpression, setExpression"} **/
						, plandefinition.getPlnDfntnCtnDnmcVlXprssnXprssnRfrnce() /** { "tree" :"PlanDefinition.action.dynamicValue.expression", "datatype" : "Expression, uri", "cardinality" : "ZeroOne", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant", "addDynamicValue"] , "methodName" : "setExpression, setReference"} **/
						));
Plandefinitionobj.addAction(HapiFHIRHelpers.createaction(plandefinition.getPlnDfntnCtnCtnCtn() /** { "tree" :"PlanDefinition.action.action", "datatype" : "action", "cardinality" : "Many", "elementtree" : ["addAction", "addCondition", "addRelatedAction", "addParticipant", "addDynamicValue"] , "methodName" : "addAction"} **/
		));
	}
}
