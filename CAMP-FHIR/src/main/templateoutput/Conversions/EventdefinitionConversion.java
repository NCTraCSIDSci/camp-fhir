package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Eventdefinition.
 * @see .Eventdefinition
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class EventdefinitionConversion 
{
	public Patient Eventdefinitions(main.templateoutput.Model.Eventdefinition eventdefinition) 
	{
			Patient  Eventdefinitionobj = new Patient(); 

						Eventdefinitionobj.setUrl(HapiFHIRHelpers.createuri(eventdefinition.getEventDefinitionUrlUri() /** { "tree" :"EventDefinition.url", "datatype" : "uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setUrl"} **/
						));
Eventdefinitionobj.addIdentifier(HapiFHIRHelpers.createIdentifier(eventdefinition.getEvntDfntnDntfrDntfrSe() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setUse"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrTpCcCSstm() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrTpCcCVrsn() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrTpCcCCde() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrTpCcCDsplay() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrTpCcCSrSlctd() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrTpCcTxt() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, setText"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrPrdPrdStrt() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrPrdPrdNd() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrSsgnr() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setAssigner"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrVlue() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setValue"} **/
						, eventdefinition.getEvntDfntnDntfrDntfrSstm() /** { "tree" :"EventDefinition.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setSystem"} **/
						));
Eventdefinitionobj.setVersion(HapiFHIRHelpers.createstring(eventdefinition.getEventDefinitionVersionString() /** { "tree" :"EventDefinition.version", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setVersion"} **/
						));
Eventdefinitionobj.setName(HapiFHIRHelpers.createstring(eventdefinition.getEventDefinitionNameString() /** { "tree" :"EventDefinition.name", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setName"} **/
						));
Eventdefinitionobj.setTitle(HapiFHIRHelpers.createstring(eventdefinition.getEventDefinitionTitleString() /** { "tree" :"EventDefinition.title", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setTitle"} **/
						));
Eventdefinitionobj.setSubtitle(HapiFHIRHelpers.createstring(eventdefinition.getEventDefinitionSubtitleString() /** { "tree" :"EventDefinition.subtitle", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubtitle"} **/
						));
Eventdefinitionobj.setStatus(HapiFHIRHelpers.createcode(eventdefinition.getEventDefinitionStatusCode() /** { "tree" :"EventDefinition.status", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setStatus"} **/
						));
Eventdefinitionobj.setExperimental(HapiFHIRHelpers.createboolean(eventdefinition.getEvntDfntnXprmntlBln() /** { "tree" :"EventDefinition.experimental", "datatype" : "boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setExperimental"} **/
						));
Eventdefinitionobj.setSubjectCodeableconcept(HapiFHIRHelpers.createCodeableConcept(eventdefinition.getEvntDfntnSbjctCdblcncptCcCdngCSstm() /** { "tree" :"EventDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, addCoding, setSystem"} **/
						, eventdefinition.getEvntDfntnSbjctCdblcncptCcCdngCVrsn() /** { "tree" :"EventDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, addCoding, setVersion"} **/
						, eventdefinition.getEvntDfntnSbjctCdblcncptCcCdngCCde() /** { "tree" :"EventDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, addCoding, setCode"} **/
						, eventdefinition.getEvntDfntnSbjctCdblcncptCcCdngCDsplay() /** { "tree" :"EventDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, addCoding, setDisplay"} **/
						, eventdefinition.getEvntDfntnSbjctCdblcncptCcCdngCSrSlctd() /** { "tree" :"EventDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, addCoding, setUserSelected"} **/
						, eventdefinition.getEvntDfntnSbjctCdblcncptCcTxt() /** { "tree" :"EventDefinition.subjectCodeableconcept", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectCodeableconcept, setText"} **/
						));
Eventdefinitionobj.setSubjectReference(group)(HapiFHIRHelpers.createReference(eventdefinition.getEvntDfntnSbjctRfrncRfrnce() /** { "tree" :"EventDefinition.subjectReference", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubjectReference(group)"} **/
						));
Eventdefinitionobj.setDate(HapiFHIRHelpers.createdateTime(eventdefinition.getEventDefinitionDateDateTime() /** { "tree" :"EventDefinition.date", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDate"} **/
						));
Eventdefinitionobj.setPublisher(HapiFHIRHelpers.createstring(eventdefinition.getEventDefinitionPublisherString() /** { "tree" :"EventDefinition.publisher", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPublisher"} **/
						));
Eventdefinitionobj.addContact(HapiFHIRHelpers.createContactDetail(eventdefinition.getEvntDfntnCntctCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"EventDefinition.contact", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setPeriod, setStart"} **/
						, eventdefinition.getEvntDfntnCntctCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"EventDefinition.contact", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setPeriod, setEnd"} **/
						, eventdefinition.getEvntDfntnCntctCntctDtlTlcmCntctPntSstm() /** { "tree" :"EventDefinition.contact", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setSystem"} **/
						, eventdefinition.getEvntDfntnCntctCntctDtlTlcmCntctPntVlue() /** { "tree" :"EventDefinition.contact", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setValue"} **/
						, eventdefinition.getEvntDfntnCntctCntctDtlTlcmCntctPntSe() /** { "tree" :"EventDefinition.contact", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setUse"} **/
						, eventdefinition.getEvntDfntnCntctCntctDtlTlcmCntctPntRnk() /** { "tree" :"EventDefinition.contact", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, setTelecom, setRank"} **/
						, eventdefinition.getEvntDfntnCntctCntctDtlNme() /** { "tree" :"EventDefinition.contact", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addContact, addName"} **/
						));
Eventdefinitionobj.setDescription(HapiFHIRHelpers.createmarkdown(eventdefinition.getEvntDfntnDscrptnMrkdwn() /** { "tree" :"EventDefinition.description", "datatype" : "markdown", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDescription"} **/
						));
Eventdefinitionobj.addUseContext(HapiFHIRHelpers.createUsageContext(eventdefinition.getEvntDfntnSCntxtSgCntxtVlCcCcCSstm() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setSystem"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlCcCcCVrsn() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setVersion"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlCcCcCCde() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setCode"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlCcCcCDsplay() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setDisplay"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlCcCcCSrSlctd() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, addCoding, setUserSelected"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlCcCcTxt() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueCodeableConcept, setText"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtCdCSstm() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setSystem"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtCdCVrsn() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setVersion"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtCdCCde() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setCode"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtCdCDsplay() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setDisplay"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtCdCSrSlctd() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addCode, setUserSelected"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlQnttQnttVlue() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Quantity, decimal", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setValue"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlQnttQnttCmprtr() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Quantity, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setComparator"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlQnttQnttNt() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Quantity, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setUnit"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlQnttQnttSstm() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Quantity, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setSystem"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlQnttQnttCde() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Quantity, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueQuantity, setCode"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlRngRngLw() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Range, SimpleQuantity", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueRange, setLow"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlRngRngHgh() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Range, SimpleQuantity", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueRange, setHigh"} **/
						, eventdefinition.getEvntDfntnSCntxtSgCntxtVlRfrnce() /** { "tree" :"EventDefinition.useContext", "datatype" : "UsageContext, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addUseContext, addValueReference"} **/
						));
Eventdefinitionobj.addJurisdiction(HapiFHIRHelpers.createCodeableConcept(eventdefinition.getEvntDfntnJrsdctnCcCdngCSstm() /** { "tree" :"EventDefinition.jurisdiction", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setSystem"} **/
						, eventdefinition.getEvntDfntnJrsdctnCcCdngCVrsn() /** { "tree" :"EventDefinition.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setVersion"} **/
						, eventdefinition.getEvntDfntnJrsdctnCcCdngCCde() /** { "tree" :"EventDefinition.jurisdiction", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setCode"} **/
						, eventdefinition.getEvntDfntnJrsdctnCcCdngCDsplay() /** { "tree" :"EventDefinition.jurisdiction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setDisplay"} **/
						, eventdefinition.getEvntDfntnJrsdctnCcCdngCSrSlctd() /** { "tree" :"EventDefinition.jurisdiction", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, addCoding, setUserSelected"} **/
						, eventdefinition.getEvntDfntnJrsdctnCcTxt() /** { "tree" :"EventDefinition.jurisdiction", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addJurisdiction, setText"} **/
						));
Eventdefinitionobj.setPurpose(HapiFHIRHelpers.createmarkdown(eventdefinition.getEventDefinitionPurposeMarkdown() /** { "tree" :"EventDefinition.purpose", "datatype" : "markdown", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPurpose"} **/
						));
Eventdefinitionobj.setUsage(HapiFHIRHelpers.createstring(eventdefinition.getEventDefinitionUsageString() /** { "tree" :"EventDefinition.usage", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setUsage"} **/
						));
Eventdefinitionobj.setCopyright(HapiFHIRHelpers.createmarkdown(eventdefinition.getEventDefinitionCopyrightMarkdown() /** { "tree" :"EventDefinition.copyright", "datatype" : "markdown", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setCopyright"} **/
						));
Eventdefinitionobj.setApprovalDate(HapiFHIRHelpers.createdate(eventdefinition.getEventDefinitionApprovalDateDate() /** { "tree" :"EventDefinition.approvalDate", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setApprovalDate"} **/
						));
Eventdefinitionobj.setLastReviewDate(HapiFHIRHelpers.createdate(eventdefinition.getEvntDfntnLstRvwDtDte() /** { "tree" :"EventDefinition.lastReviewDate", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLastReviewDate"} **/
						));
Eventdefinitionobj.setEffectivePeriod(HapiFHIRHelpers.createPeriod(eventdefinition.getEvntDfntnFfctvPrdPrdStrt() /** { "tree" :"EventDefinition.effectivePeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setEffectivePeriod, setStart"} **/
						, eventdefinition.getEvntDfntnFfctvPrdPrdNd() /** { "tree" :"EventDefinition.effectivePeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setEffectivePeriod, setEnd"} **/
						));
Eventdefinitionobj.addTopic(HapiFHIRHelpers.createCodeableConcept(eventdefinition.getEvntDfntnTpcCcCdngCSstm() /** { "tree" :"EventDefinition.topic", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setSystem"} **/
						, eventdefinition.getEvntDfntnTpcCcCdngCVrsn() /** { "tree" :"EventDefinition.topic", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setVersion"} **/
						, eventdefinition.getEvntDfntnTpcCcCdngCCde() /** { "tree" :"EventDefinition.topic", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setCode"} **/
						, eventdefinition.getEvntDfntnTpcCcCdngCDsplay() /** { "tree" :"EventDefinition.topic", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setDisplay"} **/
						, eventdefinition.getEvntDfntnTpcCcCdngCSrSlctd() /** { "tree" :"EventDefinition.topic", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, addCoding, setUserSelected"} **/
						, eventdefinition.getEventDefinitionTopicCcText() /** { "tree" :"EventDefinition.topic", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTopic, setText"} **/
						));
Eventdefinitionobj.addAuthor(HapiFHIRHelpers.createContactDetail(eventdefinition.getEvntDfntnThrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"EventDefinition.author", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setPeriod, setStart"} **/
						, eventdefinition.getEvntDfntnThrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"EventDefinition.author", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setPeriod, setEnd"} **/
						, eventdefinition.getEvntDfntnThrCntctDtlTlcmCntctPntSstm() /** { "tree" :"EventDefinition.author", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setSystem"} **/
						, eventdefinition.getEvntDfntnThrCntctDtlTlcmCntctPntVlue() /** { "tree" :"EventDefinition.author", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setValue"} **/
						, eventdefinition.getEvntDfntnThrCntctDtlTlcmCntctPntSe() /** { "tree" :"EventDefinition.author", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setUse"} **/
						, eventdefinition.getEvntDfntnThrCntctDtlTlcmCntctPntRnk() /** { "tree" :"EventDefinition.author", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, setTelecom, setRank"} **/
						, eventdefinition.getEvntDfntnThrCntctDtlNme() /** { "tree" :"EventDefinition.author", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAuthor, addName"} **/
						));
Eventdefinitionobj.addEditor(HapiFHIRHelpers.createContactDetail(eventdefinition.getEvntDfntnDtrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"EventDefinition.editor", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setPeriod, setStart"} **/
						, eventdefinition.getEvntDfntnDtrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"EventDefinition.editor", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setPeriod, setEnd"} **/
						, eventdefinition.getEvntDfntnDtrCntctDtlTlcmCntctPntSstm() /** { "tree" :"EventDefinition.editor", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setSystem"} **/
						, eventdefinition.getEvntDfntnDtrCntctDtlTlcmCntctPntVlue() /** { "tree" :"EventDefinition.editor", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setValue"} **/
						, eventdefinition.getEvntDfntnDtrCntctDtlTlcmCntctPntSe() /** { "tree" :"EventDefinition.editor", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setUse"} **/
						, eventdefinition.getEvntDfntnDtrCntctDtlTlcmCntctPntRnk() /** { "tree" :"EventDefinition.editor", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, setTelecom, setRank"} **/
						, eventdefinition.getEvntDfntnDtrCntctDtlNme() /** { "tree" :"EventDefinition.editor", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEditor, addName"} **/
						));
Eventdefinitionobj.addReviewer(HapiFHIRHelpers.createContactDetail(eventdefinition.getEvntDfntnRvwrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"EventDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setPeriod, setStart"} **/
						, eventdefinition.getEvntDfntnRvwrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"EventDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setPeriod, setEnd"} **/
						, eventdefinition.getEvntDfntnRvwrCntctDtlTlcmCntctPntSstm() /** { "tree" :"EventDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setSystem"} **/
						, eventdefinition.getEvntDfntnRvwrCntctDtlTlcmCntctPntVlue() /** { "tree" :"EventDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setValue"} **/
						, eventdefinition.getEvntDfntnRvwrCntctDtlTlcmCntctPntSe() /** { "tree" :"EventDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setUse"} **/
						, eventdefinition.getEvntDfntnRvwrCntctDtlTlcmCntctPntRnk() /** { "tree" :"EventDefinition.reviewer", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, setTelecom, setRank"} **/
						, eventdefinition.getEvntDfntnRvwrCntctDtlNme() /** { "tree" :"EventDefinition.reviewer", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addReviewer, addName"} **/
						));
Eventdefinitionobj.addEndorser(HapiFHIRHelpers.createContactDetail(eventdefinition.getEvntDfntnNdrsrCntctDtlTlcmCntctPntPrdStrt() /** { "tree" :"EventDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setPeriod, setStart"} **/
						, eventdefinition.getEvntDfntnNdrsrCntctDtlTlcmCntctPntPrdNd() /** { "tree" :"EventDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setPeriod, setEnd"} **/
						, eventdefinition.getEvntDfntnNdrsrCntctDtlTlcmCntctPntSstm() /** { "tree" :"EventDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setSystem"} **/
						, eventdefinition.getEvntDfntnNdrsrCntctDtlTlcmCntctPntVlue() /** { "tree" :"EventDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setValue"} **/
						, eventdefinition.getEvntDfntnNdrsrCntctDtlTlcmCntctPntSe() /** { "tree" :"EventDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setUse"} **/
						, eventdefinition.getEvntDfntnNdrsrCntctDtlTlcmCntctPntRnk() /** { "tree" :"EventDefinition.endorser", "datatype" : "ContactDetail, ContactPoint, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, setTelecom, setRank"} **/
						, eventdefinition.getEvntDfntnNdrsrCntctDtlNme() /** { "tree" :"EventDefinition.endorser", "datatype" : "ContactDetail, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addEndorser, addName"} **/
						));
Eventdefinitionobj.addRelatedArtifact(HapiFHIRHelpers.createRelatedArtifact(eventdefinition.getEvntDfntnRltdrtfctRltdrtfctDcmntTtchmntCntntTpe() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setContentType"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctDcmntTtchmntLngge() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setLanguage"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctDcmntTtchmntDta() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, base64Binary", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setData"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctDcmntTtchmntRl() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, url", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setUrl"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctDcmntTtchmntSze() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, unsignedInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setSize"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctDcmntTtchmntHsh() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, base64Binary", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setHash"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctDcmntTtchmntTtle() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setTitle"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctDcmntTtchmntCrtn() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, Attachment, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDocument, setCreation"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctRsrce() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, canonical", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setResource"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctTpe() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setType"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctCttn() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, markdown", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setCitation"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctLbl() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setLabel"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctDsplay() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setDisplay"} **/
						, eventdefinition.getEvntDfntnRltdrtfctRltdrtfctRl() /** { "tree" :"EventDefinition.relatedArtifact", "datatype" : "RelatedArtifact, url", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addRelatedArtifact, setUrl"} **/
						));
Eventdefinitionobj.addTrigger(HapiFHIRHelpers.createTriggerDefinition(eventdefinition.getEvntDfntnTrggrTrggrDfntnTpe() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addType"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntCcCdng() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, CodeableConcept, Coding", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, setSubjectCodeableConcept, addCoding"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntCcTxt() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, setSubjectCodeableConcept, setText"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntTpe() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, setType"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntPrfle() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, canonical", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addProfile"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntSbjctRfrnce() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, setSubjectReference"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntMstSpprt() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addMustSupport"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntCdFltrPth() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addCodeFilter, setPath"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntCdFltrSrchPrm() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addCodeFilter, setSearchParam"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntCdFltrVlSt() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, canonical", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addCodeFilter, setValueSet"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntCdFltrCde() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, Coding", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addCodeFilter, addCode"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntDtFltrPth() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addDateFilter, setPath"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntDtFltrSrchPrm() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addDateFilter, setSearchParam"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntDtFltrVlDtTme() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addDateFilter, setValueDateTime"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntDtFltrVlPrd() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, Period", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addDateFilter, setValuePeriod"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntDtFltrVlDrtn() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, Element, Duration", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addDateFilter, setValueDuration"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntLmt() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, setLimit"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntSrtPth() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addSort, setPath"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnDtDtRqrmntSrtDrctn() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, DataRequirement, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, setData, addSort, setDirection"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngDte() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, date", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingDate"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngDtTme() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingDateTime"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnCndtnXprssnDscrptn() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Expression, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addCondition, setDescription"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnCndtnXprssnNme() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Expression, id", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addCondition, setName"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnCndtnXprssnLngge() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Expression, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addCondition, setLanguage"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnCndtnXprssnXprssn() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Expression, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addCondition, setExpression"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnCndtnXprssnRfrnce() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Expression, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addCondition, setReference"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngRfrnce() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingReference"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnNme() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addName"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngCcCdng() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, CodeableConcept, Coding", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setCode, addCoding"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngCcTxt() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setCode, setText"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngVnt() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, addEvent"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptBndsDrtn() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, Duration", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setBoundsDuration"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptBndsRnge() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, Range", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setBoundsRange"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptBndsPrd() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, Period", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setBoundsPeriod"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptCnt() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setCount"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptCntMx() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setCountMax"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptDrtn() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, decimal", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setDuration"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptDrtnMx() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, decimal", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setDurationMax"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptDrtnnt() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setDurationUnit"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptFrqncy() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setFrequency"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptFrqncMx() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, positiveInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setFrequencyMax"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptPrd() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, decimal", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setPeriod"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptPrdMx() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, decimal", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setPeriodMax"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptPrdnt() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setPeriodUnit"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptDfWk() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, addDayOfWeek"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptTmfDay() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, time", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, addTimeOfDay"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptWhn() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, addWhen"} **/
						, eventdefinition.getEvntDfntnTrggrTrggrDfntnTmngTmngTmngRptFfst() /** { "tree" :"EventDefinition.trigger", "datatype" : "TriggerDefinition, Timing, Element, unsignedInt", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTrigger, addTimingTiming, setRepeat, setOffset"} **/
		));
	}
}
