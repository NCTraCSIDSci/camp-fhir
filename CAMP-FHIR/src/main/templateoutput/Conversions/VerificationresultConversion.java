package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Verificationresult.
 * @see .Verificationresult
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class VerificationresultConversion 
{
	public Patient Verificationresults(main.templateoutput.Model.Verificationresult verificationresult) 
	{
			Patient  Verificationresultobj = new Patient(); 

						Verificationresultobj.addTarget(HapiFHIRHelpers.createReference(verificationresult.getVrfctnRsltTrgtRfrnce() /** { "tree" :"VerificationResult.target", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTarget"} **/
						));
Verificationresultobj.addTargetLocation(HapiFHIRHelpers.createstring(verificationresult.getVrfctnRsltTrgtLctnStrng() /** { "tree" :"VerificationResult.targetLocation", "datatype" : "string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addTargetLocation"} **/
						));
Verificationresultobj.setNeed(HapiFHIRHelpers.createCodeableConcept(verificationresult.getVrfctnRsltNdCcCdngCSstm() /** { "tree" :"VerificationResult.need", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setNeed, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltNdCcCdngCVrsn() /** { "tree" :"VerificationResult.need", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setNeed, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltNdCcCdngCCde() /** { "tree" :"VerificationResult.need", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setNeed, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltNdCcCdngCDsplay() /** { "tree" :"VerificationResult.need", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setNeed, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltNdCcCdngCSrSlctd() /** { "tree" :"VerificationResult.need", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setNeed, addCoding, setUserSelected"} **/
						, verificationresult.getVerificationResultNeedCcText() /** { "tree" :"VerificationResult.need", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setNeed, setText"} **/
						));
Verificationresultobj.setStatus(HapiFHIRHelpers.createcode(verificationresult.getVerificationResultStatusCode() /** { "tree" :"VerificationResult.status", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setStatus"} **/
						));
Verificationresultobj.setStatusDate(HapiFHIRHelpers.createdateTime(verificationresult.getVrfctnRsltSttsDtDtTme() /** { "tree" :"VerificationResult.statusDate", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setStatusDate"} **/
						));
Verificationresultobj.setValidationType(HapiFHIRHelpers.createCodeableConcept(verificationresult.getVrfctnRsltVldtnTpCcCdngCSstm() /** { "tree" :"VerificationResult.validationType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setValidationType, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltVldtnTpCcCdngCVrsn() /** { "tree" :"VerificationResult.validationType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setValidationType, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltVldtnTpCcCdngCCde() /** { "tree" :"VerificationResult.validationType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setValidationType, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltVldtnTpCcCdngCDsplay() /** { "tree" :"VerificationResult.validationType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setValidationType, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltVldtnTpCcCdngCSrSlctd() /** { "tree" :"VerificationResult.validationType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setValidationType, addCoding, setUserSelected"} **/
						, verificationresult.getVrfctnRsltVldtnTpCcTxt() /** { "tree" :"VerificationResult.validationType", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setValidationType, setText"} **/
						));
Verificationresultobj.addValidationProcess(HapiFHIRHelpers.createCodeableConcept(verificationresult.getVrfctnRsltVldtnPrcssCcCdngCSstm() /** { "tree" :"VerificationResult.validationProcess", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addValidationProcess, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltVldtnPrcssCcCdngCVrsn() /** { "tree" :"VerificationResult.validationProcess", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addValidationProcess, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltVldtnPrcssCcCdngCCde() /** { "tree" :"VerificationResult.validationProcess", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addValidationProcess, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltVldtnPrcssCcCdngCDsplay() /** { "tree" :"VerificationResult.validationProcess", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addValidationProcess, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltVldtnPrcssCcCdngCSrSlctd() /** { "tree" :"VerificationResult.validationProcess", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addValidationProcess, addCoding, setUserSelected"} **/
						, verificationresult.getVrfctnRsltVldtnPrcssCcTxt() /** { "tree" :"VerificationResult.validationProcess", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addValidationProcess, setText"} **/
						));
Verificationresultobj.setFrequency(HapiFHIRHelpers.createTiming(verificationresult.getVrfctnRsltFrqncTmngCdCcCSstm() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setCode, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltFrqncTmngCdCcCVrsn() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setCode, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltFrqncTmngCdCcCCde() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setCode, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltFrqncTmngCdCcCDsplay() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setCode, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltFrqncTmngCdCcCSrSlctd() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setCode, addCoding, setUserSelected"} **/
						, verificationresult.getVrfctnRsltFrqncTmngCdCcTxt() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setCode, setText"} **/
						, verificationresult.getVrfctnRsltFrqncTmngVnt() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, addEvent"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptDrtnnt() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setDurationUnit"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptPrdnt() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setPeriodUnit"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptDfWk() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, addDayOfWeek"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptWhn() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, addWhen"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptDrtn() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setDuration"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptDrtnMx() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setDurationMax"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptPrd() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setPeriod"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptPrdMx() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, decimal", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setPeriodMax"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptBndsDrtn() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, Duration", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setBoundsDuration"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptBndsPrd() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, Period", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setBoundsPeriod"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptCnt() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setCount"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptCntMx() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setCountMax"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptFrqncy() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setFrequency"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptFrqncMx() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, positiveInt", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setFrequencyMax"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptBndsRnge() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, Range", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setBoundsRange"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptTmfDay() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, time", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, addTimeOfDay"} **/
						, verificationresult.getVrfctnRsltFrqncTmngRptFfst() /** { "tree" :"VerificationResult.frequency", "datatype" : "Timing, Element, unsignedInt", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFrequency, setRepeat, setOffset"} **/
						));
Verificationresultobj.setLastPerformed(HapiFHIRHelpers.createdateTime(verificationresult.getVrfctnRsltLstPrfrmdDtTme() /** { "tree" :"VerificationResult.lastPerformed", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setLastPerformed"} **/
						));
Verificationresultobj.setNextScheduled(HapiFHIRHelpers.createdate(verificationresult.getVrfctnRsltNxtSchdldDte() /** { "tree" :"VerificationResult.nextScheduled", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setNextScheduled"} **/
						));
Verificationresultobj.setFailureAction(HapiFHIRHelpers.createCodeableConcept(verificationresult.getVrfctnRsltFlrctnCcCdngCSstm() /** { "tree" :"VerificationResult.failureAction", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFailureAction, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltFlrctnCcCdngCVrsn() /** { "tree" :"VerificationResult.failureAction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFailureAction, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltFlrctnCcCdngCCde() /** { "tree" :"VerificationResult.failureAction", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFailureAction, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltFlrctnCcCdngCDsplay() /** { "tree" :"VerificationResult.failureAction", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFailureAction, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltFlrctnCcCdngCSrSlctd() /** { "tree" :"VerificationResult.failureAction", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFailureAction, addCoding, setUserSelected"} **/
						, verificationresult.getVrfctnRsltFlrctnCcTxt() /** { "tree" :"VerificationResult.failureAction", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFailureAction, setText"} **/
						));
Verificationresultobj.setWho(HapiFHIRHelpers.createReference(verificationresult.getVrfctnRsltPrmrSrcWhRfrnce() /** { "tree" :"VerificationResult.primarySource.who", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setWho"} **/
						));
Verificationresultobj.addType(HapiFHIRHelpers.createCodeableConcept(verificationresult.getVrfctnRsltPrmrSrcTpCcCdngCSstm() /** { "tree" :"VerificationResult.primarySource.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addType, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltPrmrSrcTpCcCdngCVrsn() /** { "tree" :"VerificationResult.primarySource.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addType, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltPrmrSrcTpCcCdngCCde() /** { "tree" :"VerificationResult.primarySource.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addType, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltPrmrSrcTpCcCdngCDsplay() /** { "tree" :"VerificationResult.primarySource.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addType, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltPrmrSrcTpCcCdngCSrSlctd() /** { "tree" :"VerificationResult.primarySource.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addType, addCoding, setUserSelected"} **/
						, verificationresult.getVrfctnRsltPrmrSrcTpCcTxt() /** { "tree" :"VerificationResult.primarySource.type", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addType, setText"} **/
						));
Verificationresultobj.addCommunicationMethod(HapiFHIRHelpers.createCodeableConcept(verificationresult.getVrfctnRsltPrmrSrcCmmnctnMthdCcCdngCSstm() /** { "tree" :"VerificationResult.primarySource.communicationMethod", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addCommunicationMethod, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltPrmrSrcCmmnctnMthdCcCdngCVrsn() /** { "tree" :"VerificationResult.primarySource.communicationMethod", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addCommunicationMethod, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltPrmrSrcCmmnctnMthdCcCdngCCde() /** { "tree" :"VerificationResult.primarySource.communicationMethod", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addCommunicationMethod, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltPrmrSrcCmmnctnMthdCcCdngCDsplay() /** { "tree" :"VerificationResult.primarySource.communicationMethod", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addCommunicationMethod, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltPrmrSrcCmmnctnMthdCcCdngCSrSlctd() /** { "tree" :"VerificationResult.primarySource.communicationMethod", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addCommunicationMethod, addCoding, setUserSelected"} **/
						, verificationresult.getVrfctnRsltPrmrSrcCmmnctnMthdCcTxt() /** { "tree" :"VerificationResult.primarySource.communicationMethod", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addCommunicationMethod, setText"} **/
						));
Verificationresultobj.setValidationStatus(HapiFHIRHelpers.createCodeableConcept(verificationresult.getVrfctnRsltPrmrSrcVldtnSttsCcCdngCSstm() /** { "tree" :"VerificationResult.primarySource.validationStatus", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setValidationStatus, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltPrmrSrcVldtnSttsCcCdngCVrsn() /** { "tree" :"VerificationResult.primarySource.validationStatus", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setValidationStatus, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltPrmrSrcVldtnSttsCcCdngCCde() /** { "tree" :"VerificationResult.primarySource.validationStatus", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setValidationStatus, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltPrmrSrcVldtnSttsCcCdngCDsplay() /** { "tree" :"VerificationResult.primarySource.validationStatus", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setValidationStatus, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltPrmrSrcVldtnSttsCcCdngCSrSlctd() /** { "tree" :"VerificationResult.primarySource.validationStatus", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setValidationStatus, addCoding, setUserSelected"} **/
						, verificationresult.getVrfctnRsltPrmrSrcVldtnSttsCcTxt() /** { "tree" :"VerificationResult.primarySource.validationStatus", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setValidationStatus, setText"} **/
						));
Verificationresultobj.setValidationDate(HapiFHIRHelpers.createdateTime(verificationresult.getVrfctnRsltPrmrSrcVldtnDtDtTme() /** { "tree" :"VerificationResult.primarySource.validationDate", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setValidationDate"} **/
						));
Verificationresultobj.setCanPushUpdates(HapiFHIRHelpers.createCodeableConcept(verificationresult.getVrfctnRsltPrmrSrcCnPshpdtsCcCdngCSstm() /** { "tree" :"VerificationResult.primarySource.canPushUpdates", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setCanPushUpdates, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltPrmrSrcCnPshpdtsCcCdngCVrsn() /** { "tree" :"VerificationResult.primarySource.canPushUpdates", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setCanPushUpdates, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltPrmrSrcCnPshpdtsCcCdngCCde() /** { "tree" :"VerificationResult.primarySource.canPushUpdates", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setCanPushUpdates, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltPrmrSrcCnPshpdtsCcCdngCDsplay() /** { "tree" :"VerificationResult.primarySource.canPushUpdates", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setCanPushUpdates, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltPrmrSrcCnPshpdtsCcCdngCSrSlctd() /** { "tree" :"VerificationResult.primarySource.canPushUpdates", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setCanPushUpdates, addCoding, setUserSelected"} **/
						, verificationresult.getVrfctnRsltPrmrSrcCnPshpdtsCcTxt() /** { "tree" :"VerificationResult.primarySource.canPushUpdates", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addPrimarySource"] , "methodName" : "setCanPushUpdates, setText"} **/
						));
Verificationresultobj.addPushTypeAvailable(HapiFHIRHelpers.createCodeableConcept(verificationresult.getVrfctnRsltPrmrSrcPshTpvlblCcCdngCSstm() /** { "tree" :"VerificationResult.primarySource.pushTypeAvailable", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addPushTypeAvailable, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltPrmrSrcPshTpvlblCcCdngCVrsn() /** { "tree" :"VerificationResult.primarySource.pushTypeAvailable", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addPushTypeAvailable, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltPrmrSrcPshTpvlblCcCdngCCde() /** { "tree" :"VerificationResult.primarySource.pushTypeAvailable", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addPushTypeAvailable, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltPrmrSrcPshTpvlblCcCdngCDsplay() /** { "tree" :"VerificationResult.primarySource.pushTypeAvailable", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addPushTypeAvailable, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltPrmrSrcPshTpvlblCcCdngCSrSlctd() /** { "tree" :"VerificationResult.primarySource.pushTypeAvailable", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addPushTypeAvailable, addCoding, setUserSelected"} **/
						, verificationresult.getVrfctnRsltPrmrSrcPshTpvlblCcTxt() /** { "tree" :"VerificationResult.primarySource.pushTypeAvailable", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addPrimarySource"] , "methodName" : "addPushTypeAvailable, setText"} **/
						));
Verificationresultobj.setWho(HapiFHIRHelpers.createReference(verificationresult.getVrfctnRsltTtsttnWhRfrnce() /** { "tree" :"VerificationResult.attestation.who", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setWho"} **/
						));
Verificationresultobj.setOnBehalfOf(HapiFHIRHelpers.createReference(verificationresult.getVrfctnRsltTtsttnNBhlffRfrnce() /** { "tree" :"VerificationResult.attestation.onBehalfOf", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setOnBehalfOf"} **/
						));
Verificationresultobj.setCommunicationMethod(HapiFHIRHelpers.createCodeableConcept(verificationresult.getVrfctnRsltTtsttnCmmnctnMthdCcCdngCSstm() /** { "tree" :"VerificationResult.attestation.communicationMethod", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setCommunicationMethod, addCoding, setSystem"} **/
						, verificationresult.getVrfctnRsltTtsttnCmmnctnMthdCcCdngCVrsn() /** { "tree" :"VerificationResult.attestation.communicationMethod", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setCommunicationMethod, addCoding, setVersion"} **/
						, verificationresult.getVrfctnRsltTtsttnCmmnctnMthdCcCdngCCde() /** { "tree" :"VerificationResult.attestation.communicationMethod", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setCommunicationMethod, addCoding, setCode"} **/
						, verificationresult.getVrfctnRsltTtsttnCmmnctnMthdCcCdngCDsplay() /** { "tree" :"VerificationResult.attestation.communicationMethod", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setCommunicationMethod, addCoding, setDisplay"} **/
						, verificationresult.getVrfctnRsltTtsttnCmmnctnMthdCcCdngCSrSlctd() /** { "tree" :"VerificationResult.attestation.communicationMethod", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setCommunicationMethod, addCoding, setUserSelected"} **/
						, verificationresult.getVrfctnRsltTtsttnCmmnctnMthdCcTxt() /** { "tree" :"VerificationResult.attestation.communicationMethod", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setCommunicationMethod, setText"} **/
						));
Verificationresultobj.setDate(HapiFHIRHelpers.createdate(verificationresult.getVrfctnRsltTtsttnDtDte() /** { "tree" :"VerificationResult.attestation.date", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setDate"} **/
						));
Verificationresultobj.setSourceIdentityCertificate(HapiFHIRHelpers.createstring(verificationresult.getVrfctnRsltTtsttnSrcdnttCrtfctStrng() /** { "tree" :"VerificationResult.attestation.sourceIdentityCertificate", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceIdentityCertificate"} **/
						));
Verificationresultobj.setProxyIdentityCertificate(HapiFHIRHelpers.createstring(verificationresult.getVrfctnRsltTtsttnPrxdnttCrtfctStrng() /** { "tree" :"VerificationResult.attestation.proxyIdentityCertificate", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxyIdentityCertificate"} **/
						));
Verificationresultobj.setProxySignature(HapiFHIRHelpers.createSignature(verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrDta() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, base64Binary", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, setData"} **/
						, verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrTrgtFrmt() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, code", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, setTargetFormat"} **/
						, verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrSgFrmt() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, code", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, setSigFormat"} **/
						, verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrTpCSstm() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, addType, setSystem"} **/
						, verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrTpCVrsn() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, addType, setVersion"} **/
						, verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrTpCCde() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, addType, setCode"} **/
						, verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrTpCDsplay() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, addType, setDisplay"} **/
						, verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrTpCSrSlctd() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, addType, setUserSelected"} **/
						, verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrWhn() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, instant", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, setWhen"} **/
						, verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrWho() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, Reference", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, setWho"} **/
						, verificationresult.getVrfctnRsltTtsttnPrxSgntrSgntrNBhlff() /** { "tree" :"VerificationResult.attestation.proxySignature", "datatype" : "Signature, Reference", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setProxySignature, setOnBehalfOf"} **/
						));
Verificationresultobj.setSourceSignature(HapiFHIRHelpers.createSignature(verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrDta() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, base64Binary", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, setData"} **/
						, verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrTrgtFrmt() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, code", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, setTargetFormat"} **/
						, verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrSgFrmt() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, code", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, setSigFormat"} **/
						, verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrTpCSstm() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, addType, setSystem"} **/
						, verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrTpCVrsn() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, addType, setVersion"} **/
						, verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrTpCCde() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, addType, setCode"} **/
						, verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrTpCDsplay() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, addType, setDisplay"} **/
						, verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrTpCSrSlctd() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, addType, setUserSelected"} **/
						, verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrWhn() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, instant", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, setWhen"} **/
						, verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrWho() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, Reference", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, setWho"} **/
						, verificationresult.getVrfctnRsltTtsttnSrcSgntrSgntrNBhlff() /** { "tree" :"VerificationResult.attestation.sourceSignature", "datatype" : "Signature, Reference", "cardinality" : "ZeroOne", "elementtree" : ["setAttestation"] , "methodName" : "setSourceSignature, setOnBehalfOf"} **/
						));
Verificationresultobj.setOrganization(HapiFHIRHelpers.createReference(verificationresult.getVrfctnRsltVldtrRgnztnRfrnce() /** { "tree" :"VerificationResult.validator.organization", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : ["addValidator"] , "methodName" : "setOrganization"} **/
						));
Verificationresultobj.setIdentityCertificate(HapiFHIRHelpers.createstring(verificationresult.getVrfctnRsltVldtrDnttCrtfctStrng() /** { "tree" :"VerificationResult.validator.identityCertificate", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setIdentityCertificate"} **/
						));
Verificationresultobj.setAttestationSignature(HapiFHIRHelpers.createSignature(verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrDta() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, base64Binary", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, setData"} **/
						, verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrTrgtFrmt() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, code", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, setTargetFormat"} **/
						, verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrSgFrmt() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, code", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, setSigFormat"} **/
						, verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrTpCSstm() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, addType, setSystem"} **/
						, verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrTpCVrsn() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, addType, setVersion"} **/
						, verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrTpCCde() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, addType, setCode"} **/
						, verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrTpCDsplay() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, addType, setDisplay"} **/
						, verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrTpCSrSlctd() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, addType, setUserSelected"} **/
						, verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrWhn() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, instant", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, setWhen"} **/
						, verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrWho() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, Reference", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, setWho"} **/
						, verificationresult.getVrfctnRsltVldtrTtsttnSgntrSgntrNBhlff() /** { "tree" :"VerificationResult.validator.attestationSignature", "datatype" : "Signature, Reference", "cardinality" : "ZeroOne", "elementtree" : ["addValidator"] , "methodName" : "setAttestationSignature, setOnBehalfOf"} **/
		));
	}
}
