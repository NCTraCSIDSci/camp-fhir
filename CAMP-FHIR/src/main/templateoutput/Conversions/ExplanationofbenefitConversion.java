package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Explanationofbenefit.
 * @see .Explanationofbenefit
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class ExplanationofbenefitConversion 
{
	public Patient Explanationofbenefits(main.templateoutput.Model.Explanationofbenefit explanationofbenefit) 
	{
			Patient  Explanationofbenefitobj = new Patient(); 

						Explanationofbenefitobj.addIdentifier(HapiFHIRHelpers.createIdentifier(explanationofbenefit.getExplntnfBnftDntfrDntfrSe() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setUse"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrTpCcCSstm() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrTpCcCVrsn() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrTpCcCCde() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrTpCcCDsplay() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrTpCcCSrSlctd() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrTpCcTxt() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setType, setText"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setPeriod, setEnd"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrSsgnr() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setAssigner"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrVlue() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setValue"} **/
						, explanationofbenefit.getExplntnfBnftDntfrDntfrSstm() /** { "tree" :"ExplanationOfBenefit.identifier", "datatype" : "Identifier, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addIdentifier, setSystem"} **/
						));
Explanationofbenefitobj.setStatus(HapiFHIRHelpers.createcode(explanationofbenefit.getExplanationOfBenefitStatusCode() /** { "tree" :"ExplanationOfBenefit.status", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setStatus"} **/
						));
Explanationofbenefitobj.setType(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTpCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTpCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTpCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTpCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTpCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplanationOfBenefitTypeCcText() /** { "tree" :"ExplanationOfBenefit.type", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setType, setText"} **/
						));
Explanationofbenefitobj.setSubType(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftSbTpCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.subType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftSbTpCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.subType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftSbTpCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.subType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftSbTpCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.subType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftSbTpCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.subType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftSbTpCcTxt() /** { "tree" :"ExplanationOfBenefit.subType", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setSubType, setText"} **/
						));
Explanationofbenefitobj.setUse(HapiFHIRHelpers.createcode(explanationofbenefit.getExplanationOfBenefitUseCode() /** { "tree" :"ExplanationOfBenefit.use", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setUse"} **/
						));
Explanationofbenefitobj.setPatient(HapiFHIRHelpers.createReference(explanationofbenefit.getExplanationOfBenefitPntReference() /** { "tree" :"ExplanationOfBenefit.patient", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setPatient"} **/
						));
Explanationofbenefitobj.setBillablePeriod(HapiFHIRHelpers.createPeriod(explanationofbenefit.getExplntnfBnftBllblPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.billablePeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setBillablePeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftBllblPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.billablePeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setBillablePeriod, setEnd"} **/
						));
Explanationofbenefitobj.setCreated(HapiFHIRHelpers.createdateTime(explanationofbenefit.getExplntnfBnftCrtdDtTme() /** { "tree" :"ExplanationOfBenefit.created", "datatype" : "dateTime", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setCreated"} **/
						));
Explanationofbenefitobj.setEnterer(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftNtrrRfrnce() /** { "tree" :"ExplanationOfBenefit.enterer", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setEnterer"} **/
						));
Explanationofbenefitobj.setInsurer(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftNsrrRfrnce() /** { "tree" :"ExplanationOfBenefit.insurer", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setInsurer"} **/
						));
Explanationofbenefitobj.setProvider(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftPrvdrRfrnce() /** { "tree" :"ExplanationOfBenefit.provider", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setProvider"} **/
						));
Explanationofbenefitobj.setPriority(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftPrrtCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.priority", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPriority, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftPrrtCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.priority", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPriority, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftPrrtCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.priority", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPriority, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftPrrtCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.priority", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPriority, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftPrrtCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.priority", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPriority, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftPrrtCcTxt() /** { "tree" :"ExplanationOfBenefit.priority", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPriority, setText"} **/
						));
Explanationofbenefitobj.setFundsReserveRequested(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftFndsRsrvRqstdCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.fundsReserveRequested", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserveRequested, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftFndsRsrvRqstdCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.fundsReserveRequested", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserveRequested, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftFndsRsrvRqstdCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.fundsReserveRequested", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserveRequested, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftFndsRsrvRqstdCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.fundsReserveRequested", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserveRequested, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftFndsRsrvRqstdCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.fundsReserveRequested", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserveRequested, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftFndsRsrvRqstdCcTxt() /** { "tree" :"ExplanationOfBenefit.fundsReserveRequested", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserveRequested, setText"} **/
						));
Explanationofbenefitobj.setFundsReserve(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftFndsRsrvCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.fundsReserve", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserve, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftFndsRsrvCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.fundsReserve", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserve, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftFndsRsrvCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.fundsReserve", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserve, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftFndsRsrvCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.fundsReserve", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserve, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftFndsRsrvCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.fundsReserve", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserve, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftFndsRsrvCcTxt() /** { "tree" :"ExplanationOfBenefit.fundsReserve", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFundsReserve, setText"} **/
						));
Explanationofbenefitobj.setClaim(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftRltdClmRfrnce() /** { "tree" :"ExplanationOfBenefit.related.claim", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setClaim"} **/
						));
Explanationofbenefitobj.setRelationship(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftRltdRltnshpCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.related.relationship", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setRelationship, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftRltdRltnshpCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.related.relationship", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setRelationship, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftRltdRltnshpCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.related.relationship", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setRelationship, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftRltdRltnshpCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.related.relationship", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setRelationship, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftRltdRltnshpCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.related.relationship", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setRelationship, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftRltdRltnshpCcTxt() /** { "tree" :"ExplanationOfBenefit.related.relationship", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setRelationship, setText"} **/
						));
Explanationofbenefitobj.setReference(HapiFHIRHelpers.createIdentifier(explanationofbenefit.getExplntnfBnftRltdRfrncDntfrSe() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, code", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setUse"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrTpCcCSstm() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrTpCcCVrsn() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrTpCcCCde() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrTpCcCDsplay() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrTpCcCSrSlctd() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrTpCcTxt() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setType, setText"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setPeriod, setEnd"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrSsgnr() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, Reference", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setAssigner"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrVlue() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, string", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setValue"} **/
						, explanationofbenefit.getExplntnfBnftRltdRfrncDntfrSstm() /** { "tree" :"ExplanationOfBenefit.related.reference", "datatype" : "Identifier, uri", "cardinality" : "ZeroOne", "elementtree" : ["addRelated"] , "methodName" : "setReference, setSystem"} **/
						));
Explanationofbenefitobj.setPrescription(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftPrscrptnRfrnce() /** { "tree" :"ExplanationOfBenefit.prescription", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPrescription"} **/
						));
Explanationofbenefitobj.setOriginalPrescription(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftRgnlPrscrptnRfrnce() /** { "tree" :"ExplanationOfBenefit.originalPrescription", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setOriginalPrescription"} **/
						));
Explanationofbenefitobj.setType(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftPTpCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.payee.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setPayee"] , "methodName" : "setType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftPTpCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.payee.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayee"] , "methodName" : "setType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftPTpCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.payee.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setPayee"] , "methodName" : "setType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftPTpCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.payee.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayee"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftPTpCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.payee.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setPayee"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftPTpCcTxt() /** { "tree" :"ExplanationOfBenefit.payee.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayee"] , "methodName" : "setType, setText"} **/
						));
Explanationofbenefitobj.setParty(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftPPrtRfrnce() /** { "tree" :"ExplanationOfBenefit.payee.party", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["setPayee"] , "methodName" : "setParty"} **/
						));
Explanationofbenefitobj.setReferral(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftRfrrlRfrnce() /** { "tree" :"ExplanationOfBenefit.referral", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setReferral"} **/
						));
Explanationofbenefitobj.setFacility(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftFcltRfrnce() /** { "tree" :"ExplanationOfBenefit.facility", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFacility"} **/
						));
Explanationofbenefitobj.setClaim(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftClmRfrnce() /** { "tree" :"ExplanationOfBenefit.claim", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setClaim"} **/
						));
Explanationofbenefitobj.setClaimResponse(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftClmRspnsRfrnce() /** { "tree" :"ExplanationOfBenefit.claimResponse", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setClaimResponse"} **/
						));
Explanationofbenefitobj.setOutcome(HapiFHIRHelpers.createcode(explanationofbenefit.getExplanationOfBenefitOutcomeCode() /** { "tree" :"ExplanationOfBenefit.outcome", "datatype" : "code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setOutcome"} **/
						));
Explanationofbenefitobj.setDisposition(HapiFHIRHelpers.createstring(explanationofbenefit.getExplntnfBnftDspstnStrng() /** { "tree" :"ExplanationOfBenefit.disposition", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setDisposition"} **/
						));
Explanationofbenefitobj.addPreAuthRef(HapiFHIRHelpers.createstring(explanationofbenefit.getExplntnfBnftPrthRfStrng() /** { "tree" :"ExplanationOfBenefit.preAuthRef", "datatype" : "string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addPreAuthRef"} **/
						));
Explanationofbenefitobj.addPreAuthRefPeriod(HapiFHIRHelpers.createPeriod(explanationofbenefit.getExplntnfBnftPrthRfPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.preAuthRefPeriod", "datatype" : "Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addPreAuthRefPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftPrthRfPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.preAuthRefPeriod", "datatype" : "Period, dateTime", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addPreAuthRefPeriod, setEnd"} **/
						));
Explanationofbenefitobj.setSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftCrTmSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.careTeam.sequence", "datatype" : "positiveInt", "cardinality" : "Required", "elementtree" : ["addCareTeam"] , "methodName" : "setSequence"} **/
						));
Explanationofbenefitobj.setProvider(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftCrTmPrvdrRfrnce() /** { "tree" :"ExplanationOfBenefit.careTeam.provider", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : ["addCareTeam"] , "methodName" : "setProvider"} **/
						));
Explanationofbenefitobj.setResponsible(HapiFHIRHelpers.createboolean(explanationofbenefit.getExplntnfBnftCrTmRspnsblBln() /** { "tree" :"ExplanationOfBenefit.careTeam.responsible", "datatype" : "boolean", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setResponsible"} **/
						));
Explanationofbenefitobj.setRole(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftCrTmRlCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.careTeam.role", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setRole, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftCrTmRlCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.careTeam.role", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setRole, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftCrTmRlCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.careTeam.role", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setRole, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftCrTmRlCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.careTeam.role", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setRole, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftCrTmRlCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.careTeam.role", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setRole, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftCrTmRlCcTxt() /** { "tree" :"ExplanationOfBenefit.careTeam.role", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setRole, setText"} **/
						));
Explanationofbenefitobj.setQualification(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftCrTmQlfctnCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.careTeam.qualification", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setQualification, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftCrTmQlfctnCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.careTeam.qualification", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setQualification, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftCrTmQlfctnCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.careTeam.qualification", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setQualification, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftCrTmQlfctnCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.careTeam.qualification", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setQualification, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftCrTmQlfctnCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.careTeam.qualification", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setQualification, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftCrTmQlfctnCcTxt() /** { "tree" :"ExplanationOfBenefit.careTeam.qualification", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addCareTeam"] , "methodName" : "setQualification, setText"} **/
						));
Explanationofbenefitobj.setSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftSpprtngnfSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.supportingInfo.sequence", "datatype" : "positiveInt", "cardinality" : "Required", "elementtree" : ["addSupportingInfo"] , "methodName" : "setSequence"} **/
						));
Explanationofbenefitobj.setCategory(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftSpprtngnfCtgrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.supportingInfo.category", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCategory, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfCtgrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.supportingInfo.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCategory, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfCtgrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.supportingInfo.category", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCategory, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfCtgrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.supportingInfo.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCategory, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfCtgrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.supportingInfo.category", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCategory, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfCtgrCcTxt() /** { "tree" :"ExplanationOfBenefit.supportingInfo.category", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCategory, setText"} **/
						));
Explanationofbenefitobj.setCode(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftSpprtngnfCdCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.supportingInfo.code", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCode, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfCdCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.supportingInfo.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCode, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfCdCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.supportingInfo.code", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCode, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfCdCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.supportingInfo.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCode, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfCdCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.supportingInfo.code", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCode, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfCdCcTxt() /** { "tree" :"ExplanationOfBenefit.supportingInfo.code", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setCode, setText"} **/
						));
Explanationofbenefitobj.setTimingDate(HapiFHIRHelpers.createdate(explanationofbenefit.getExplntnfBnftSpprtngnfTmngDtDte() /** { "tree" :"ExplanationOfBenefit.supportingInfo.timingDate", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setTimingDate"} **/
						));
Explanationofbenefitobj.setTimingPeriod(HapiFHIRHelpers.createPeriod(explanationofbenefit.getExplntnfBnftSpprtngnfTmngPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.supportingInfo.timingPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setTimingPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfTmngPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.supportingInfo.timingPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setTimingPeriod, setEnd"} **/
						));
Explanationofbenefitobj.setValue(HapiFHIRHelpers.createbooleantype(explanationofbenefit.getExplntnfBnftSpprtngnfVlBlnBln() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueBoolean", "datatype" : "boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueBoolean"} **/
						));
Explanationofbenefitobj.setValueString(HapiFHIRHelpers.createstring(explanationofbenefit.getExplntnfBnftSpprtngnfVlStrngStrng() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueString", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueString"} **/
						));
Explanationofbenefitobj.setValueQuantity(HapiFHIRHelpers.createQuantity(explanationofbenefit.getExplntnfBnftSpprtngnfVlQnttQnttCmprtr() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueQuantity", "datatype" : "Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueQuantity, setComparator"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlQnttQnttCde() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueQuantity", "datatype" : "Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueQuantity, setCode"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlQnttQnttVlue() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueQuantity", "datatype" : "Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueQuantity, setValue"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlQnttQnttNt() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueQuantity", "datatype" : "Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueQuantity, setUnit"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlQnttQnttSstm() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueQuantity", "datatype" : "Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueQuantity, setSystem"} **/
						));
Explanationofbenefitobj.setValueAttachment(HapiFHIRHelpers.createAttachment(explanationofbenefit.getExplntnfBnftSpprtngnfVlttchmntTtchmntDta() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueAttachment", "datatype" : "Attachment, base64Binary", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueAttachment, setData"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlttchmntTtchmntHsh() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueAttachment", "datatype" : "Attachment, base64Binary", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueAttachment, setHash"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlttchmntTtchmntCntntTpe() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueAttachment", "datatype" : "Attachment, code", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueAttachment, setContentType"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlttchmntTtchmntLngge() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueAttachment", "datatype" : "Attachment, code", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueAttachment, setLanguage"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlttchmntTtchmntCrtn() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueAttachment", "datatype" : "Attachment, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueAttachment, setCreation"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlttchmntTtchmntTtle() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueAttachment", "datatype" : "Attachment, string", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueAttachment, setTitle"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlttchmntTtchmntSze() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueAttachment", "datatype" : "Attachment, unsignedInt", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueAttachment, setSize"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfVlttchmntTtchmntRl() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueAttachment", "datatype" : "Attachment, url", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueAttachment, setUrl"} **/
						));
Explanationofbenefitobj.setValueReference(any)(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftSpprtngnfVlRfrncRfrnce() /** { "tree" :"ExplanationOfBenefit.supportingInfo.valueReference", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setValueReference(any)"} **/
						));
Explanationofbenefitobj.setReason(HapiFHIRHelpers.createCoding(explanationofbenefit.getExplntnfBnftSpprtngnfRsnCSrSlctd() /** { "tree" :"ExplanationOfBenefit.supportingInfo.reason", "datatype" : "Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setReason, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfRsnCCde() /** { "tree" :"ExplanationOfBenefit.supportingInfo.reason", "datatype" : "Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setReason, setCode"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfRsnCVrsn() /** { "tree" :"ExplanationOfBenefit.supportingInfo.reason", "datatype" : "Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setReason, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfRsnCDsplay() /** { "tree" :"ExplanationOfBenefit.supportingInfo.reason", "datatype" : "Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setReason, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftSpprtngnfRsnCSstm() /** { "tree" :"ExplanationOfBenefit.supportingInfo.reason", "datatype" : "Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSupportingInfo"] , "methodName" : "setReason, setSystem"} **/
						));
Explanationofbenefitobj.setSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftDgnssSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.diagnosis.sequence", "datatype" : "positiveInt", "cardinality" : "Required", "elementtree" : ["addDiagnosis"] , "methodName" : "setSequence"} **/
						));
Explanationofbenefitobj.setDiagnosisCodeableconcept(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDgnssDgnssCdblcncptCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.diagnosis.diagnosisCodeableconcept", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addDiagnosis"] , "methodName" : "setDiagnosisCodeableconcept, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDgnssDgnssCdblcncptCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.diagnosis.diagnosisCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addDiagnosis"] , "methodName" : "setDiagnosisCodeableconcept, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDgnssDgnssCdblcncptCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.diagnosis.diagnosisCodeableconcept", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addDiagnosis"] , "methodName" : "setDiagnosisCodeableconcept, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDgnssDgnssCdblcncptCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.diagnosis.diagnosisCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addDiagnosis"] , "methodName" : "setDiagnosisCodeableconcept, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDgnssDgnssCdblcncptCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.diagnosis.diagnosisCodeableconcept", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addDiagnosis"] , "methodName" : "setDiagnosisCodeableconcept, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDgnssDgnssCdblcncptCcTxt() /** { "tree" :"ExplanationOfBenefit.diagnosis.diagnosisCodeableconcept", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addDiagnosis"] , "methodName" : "setDiagnosisCodeableconcept, setText"} **/
						));
Explanationofbenefitobj.setDiagnosisReference(condition)(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftDgnssDgnssRfrncRfrnce() /** { "tree" :"ExplanationOfBenefit.diagnosis.diagnosisReference", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : ["addDiagnosis"] , "methodName" : "setDiagnosisReference(condition)"} **/
						));
Explanationofbenefitobj.addType(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDgnssTpCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.diagnosis.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addDiagnosis"] , "methodName" : "addType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDgnssTpCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.diagnosis.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addDiagnosis"] , "methodName" : "addType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDgnssTpCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.diagnosis.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addDiagnosis"] , "methodName" : "addType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDgnssTpCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.diagnosis.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addDiagnosis"] , "methodName" : "addType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDgnssTpCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.diagnosis.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addDiagnosis"] , "methodName" : "addType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDgnssTpCcTxt() /** { "tree" :"ExplanationOfBenefit.diagnosis.type", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addDiagnosis"] , "methodName" : "addType, setText"} **/
						));
Explanationofbenefitobj.setOnAdmission(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDgnssNdmssnCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.diagnosis.onAdmission", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setOnAdmission, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDgnssNdmssnCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.diagnosis.onAdmission", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setOnAdmission, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDgnssNdmssnCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.diagnosis.onAdmission", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setOnAdmission, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDgnssNdmssnCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.diagnosis.onAdmission", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setOnAdmission, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDgnssNdmssnCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.diagnosis.onAdmission", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setOnAdmission, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDgnssNdmssnCcTxt() /** { "tree" :"ExplanationOfBenefit.diagnosis.onAdmission", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setOnAdmission, setText"} **/
						));
Explanationofbenefitobj.setPackageCode(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDgnssPckgCdCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.diagnosis.packageCode", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setPackageCode, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDgnssPckgCdCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.diagnosis.packageCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setPackageCode, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDgnssPckgCdCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.diagnosis.packageCode", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setPackageCode, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDgnssPckgCdCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.diagnosis.packageCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setPackageCode, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDgnssPckgCdCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.diagnosis.packageCode", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setPackageCode, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDgnssPckgCdCcTxt() /** { "tree" :"ExplanationOfBenefit.diagnosis.packageCode", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addDiagnosis"] , "methodName" : "setPackageCode, setText"} **/
						));
Explanationofbenefitobj.setSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftPrcdrSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.procedure.sequence", "datatype" : "positiveInt", "cardinality" : "Required", "elementtree" : ["addProcedure"] , "methodName" : "setSequence"} **/
						));
Explanationofbenefitobj.addType(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftPrcdrTpCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.procedure.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addProcedure"] , "methodName" : "addType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftPrcdrTpCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.procedure.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addProcedure"] , "methodName" : "addType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftPrcdrTpCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.procedure.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addProcedure"] , "methodName" : "addType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftPrcdrTpCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.procedure.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addProcedure"] , "methodName" : "addType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftPrcdrTpCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.procedure.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addProcedure"] , "methodName" : "addType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftPrcdrTpCcTxt() /** { "tree" :"ExplanationOfBenefit.procedure.type", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addProcedure"] , "methodName" : "addType, setText"} **/
						));
Explanationofbenefitobj.setDate(HapiFHIRHelpers.createdateTime(explanationofbenefit.getExplntnfBnftPrcdrDtDtTme() /** { "tree" :"ExplanationOfBenefit.procedure.date", "datatype" : "dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addProcedure"] , "methodName" : "setDate"} **/
						));
Explanationofbenefitobj.setProcedureCodeableconcept(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftPrcdrPrcdrCdblcncptCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.procedure.procedureCodeableconcept", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addProcedure"] , "methodName" : "setProcedureCodeableconcept, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftPrcdrPrcdrCdblcncptCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.procedure.procedureCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addProcedure"] , "methodName" : "setProcedureCodeableconcept, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftPrcdrPrcdrCdblcncptCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.procedure.procedureCodeableconcept", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addProcedure"] , "methodName" : "setProcedureCodeableconcept, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftPrcdrPrcdrCdblcncptCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.procedure.procedureCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addProcedure"] , "methodName" : "setProcedureCodeableconcept, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftPrcdrPrcdrCdblcncptCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.procedure.procedureCodeableconcept", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addProcedure"] , "methodName" : "setProcedureCodeableconcept, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftPrcdrPrcdrCdblcncptCcTxt() /** { "tree" :"ExplanationOfBenefit.procedure.procedureCodeableconcept", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addProcedure"] , "methodName" : "setProcedureCodeableconcept, setText"} **/
						));
Explanationofbenefitobj.setProcedureReference(procedure)(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftPrcdrPrcdrRfrncRfrnce() /** { "tree" :"ExplanationOfBenefit.procedure.procedureReference", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : ["addProcedure"] , "methodName" : "setProcedureReference(procedure)"} **/
						));
Explanationofbenefitobj.addUdi(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftPrcdrDRfrnce() /** { "tree" :"ExplanationOfBenefit.procedure.udi", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : ["addProcedure"] , "methodName" : "addUdi"} **/
						));
Explanationofbenefitobj.setPrecedence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftPrcdncPstvnt() /** { "tree" :"ExplanationOfBenefit.precedence", "datatype" : "positiveInt", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setPrecedence"} **/
						));
Explanationofbenefitobj.setFocal(HapiFHIRHelpers.createboolean(explanationofbenefit.getExplntnfBnftNsrncFclBln() /** { "tree" :"ExplanationOfBenefit.insurance.focal", "datatype" : "boolean", "cardinality" : "Required", "elementtree" : ["setInsurance"] , "methodName" : "setFocal"} **/
						));
Explanationofbenefitobj.setCoverage(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftNsrncCvrgRfrnce() /** { "tree" :"ExplanationOfBenefit.insurance.coverage", "datatype" : "Reference", "cardinality" : "Required", "elementtree" : ["setInsurance"] , "methodName" : "setCoverage"} **/
						));
Explanationofbenefitobj.addPreAuthRef(HapiFHIRHelpers.createstring(explanationofbenefit.getExplntnfBnftNsrncPrthRfStrng() /** { "tree" :"ExplanationOfBenefit.insurance.preAuthRef", "datatype" : "string", "cardinality" : "Many", "elementtree" : ["setInsurance"] , "methodName" : "addPreAuthRef"} **/
						));
Explanationofbenefitobj.setDate(HapiFHIRHelpers.createdate(explanationofbenefit.getExplntnfBnftCcdntDtDte() /** { "tree" :"ExplanationOfBenefit.accident.date", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setDate"} **/
						));
Explanationofbenefitobj.setType(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftCcdntTpCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.accident.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftCcdntTpCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.accident.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftCcdntTpCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.accident.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftCcdntTpCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.accident.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftCcdntTpCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.accident.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftCcdntTpCcTxt() /** { "tree" :"ExplanationOfBenefit.accident.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setType, setText"} **/
						));
Explanationofbenefitobj.setLocationAddress(HapiFHIRHelpers.createAddress(explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssSe() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, code", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, setUse"} **/
						, explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssTpe() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, code", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, setType"} **/
						, explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, setPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, setPeriod, setEnd"} **/
						, explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssTxt() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, setText"} **/
						, explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssLne() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, addLine"} **/
						, explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssCty() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, setCity"} **/
						, explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssDstrct() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, setDistrict"} **/
						, explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssStte() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, setState"} **/
						, explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssPstlCde() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, setPostalCode"} **/
						, explanationofbenefit.getExplntnfBnftCcdntLctnddrssDdrssCntry() /** { "tree" :"ExplanationOfBenefit.accident.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationAddress, setCounty"} **/
						));
Explanationofbenefitobj.setLocationReference(location)(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftCcdntLctnRfrncRfrnce() /** { "tree" :"ExplanationOfBenefit.accident.locationReference", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["setAccident"] , "methodName" : "setLocationReference(location)"} **/
						));
Explanationofbenefitobj.setSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftTmSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.item.sequence", "datatype" : "positiveInt", "cardinality" : "Required", "elementtree" : ["addItem"] , "methodName" : "setSequence"} **/
						));
Explanationofbenefitobj.addCareTeamSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftTmCrTmSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.item.careTeamSequence", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addCareTeamSequence"} **/
						));
Explanationofbenefitobj.addDiagnosisSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftTmDgnssSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.item.diagnosisSequence", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addDiagnosisSequence"} **/
						));
Explanationofbenefitobj.addProcedureSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftTmPrcdrSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.item.procedureSequence", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addProcedureSequence"} **/
						));
Explanationofbenefitobj.addInformationSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftTmNfrmtnSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.item.informationSequence", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addInformationSequence"} **/
						));
Explanationofbenefitobj.setRevenue(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmRvnCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.revenue", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setRevenue, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmRvnCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.revenue", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setRevenue, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmRvnCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.revenue", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setRevenue, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmRvnCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.revenue", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setRevenue, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmRvnCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.revenue", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setRevenue, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmRvnCcTxt() /** { "tree" :"ExplanationOfBenefit.item.revenue", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setRevenue, setText"} **/
						));
Explanationofbenefitobj.setCategory(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmCtgrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.category", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setCategory, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmCtgrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setCategory, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmCtgrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.category", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setCategory, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmCtgrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setCategory, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmCtgrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.category", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setCategory, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmCtgrCcTxt() /** { "tree" :"ExplanationOfBenefit.item.category", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setCategory, setText"} **/
						));
Explanationofbenefitobj.setProductOrService(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmPrdctrSrvcCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.productOrService", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addItem"] , "methodName" : "setProductOrService, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmPrdctrSrvcCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addItem"] , "methodName" : "setProductOrService, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmPrdctrSrvcCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.productOrService", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addItem"] , "methodName" : "setProductOrService, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmPrdctrSrvcCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addItem"] , "methodName" : "setProductOrService, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmPrdctrSrvcCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.productOrService", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addItem"] , "methodName" : "setProductOrService, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmPrdctrSrvcCcTxt() /** { "tree" :"ExplanationOfBenefit.item.productOrService", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addItem"] , "methodName" : "setProductOrService, setText"} **/
						));
Explanationofbenefitobj.addModifier(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmMdfrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.modifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addModifier, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmMdfrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addModifier, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmMdfrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.modifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addModifier, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmMdfrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addModifier, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmMdfrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.modifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addModifier, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmMdfrCcTxt() /** { "tree" :"ExplanationOfBenefit.item.modifier", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addModifier, setText"} **/
						));
Explanationofbenefitobj.addProgramCode(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmPrgrmCdCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.programCode", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addProgramCode, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmPrgrmCdCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.programCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addProgramCode, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmPrgrmCdCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.programCode", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addProgramCode, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmPrgrmCdCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.programCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addProgramCode, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmPrgrmCdCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.programCode", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addProgramCode, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmPrgrmCdCcTxt() /** { "tree" :"ExplanationOfBenefit.item.programCode", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addProgramCode, setText"} **/
						));
Explanationofbenefitobj.setServicedDate(HapiFHIRHelpers.createdate(explanationofbenefit.getExplntnfBnftTmSrvcdDtDte() /** { "tree" :"ExplanationOfBenefit.item.servicedDate", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setServicedDate"} **/
						));
Explanationofbenefitobj.setServicedPeriod(HapiFHIRHelpers.createPeriod(explanationofbenefit.getExplntnfBnftTmSrvcdPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.item.servicedPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setServicedPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftTmSrvcdPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.item.servicedPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setServicedPeriod, setEnd"} **/
						));
Explanationofbenefitobj.setLocationCodeableconcept(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmLctnCdblcncptCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.locationCodeableconcept", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationCodeableconcept, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnCdblcncptCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.locationCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationCodeableconcept, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnCdblcncptCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.locationCodeableconcept", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationCodeableconcept, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnCdblcncptCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.locationCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationCodeableconcept, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnCdblcncptCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.locationCodeableconcept", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationCodeableconcept, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnCdblcncptCcTxt() /** { "tree" :"ExplanationOfBenefit.item.locationCodeableconcept", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationCodeableconcept, setText"} **/
						));
Explanationofbenefitobj.setLocationAddress(HapiFHIRHelpers.createAddress(explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssSe() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, setUse"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssTpe() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, setType"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, setPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, setPeriod, setEnd"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssTxt() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, setText"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssLne() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, addLine"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssCty() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, setCity"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssDstrct() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, setDistrict"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssStte() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, setState"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssPstlCde() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, setPostalCode"} **/
						, explanationofbenefit.getExplntnfBnftTmLctnddrssDdrssCntry() /** { "tree" :"ExplanationOfBenefit.item.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationAddress, setCounty"} **/
						));
Explanationofbenefitobj.setLocationReference(location)(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftTmLctnRfrncRfrnce() /** { "tree" :"ExplanationOfBenefit.item.locationReference", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setLocationReference(location)"} **/
						));
Explanationofbenefitobj.setQuantity(HapiFHIRHelpers.createSimpleQuantity(explanationofbenefit.getExplntnfBnftTmQnttSmplQntty() /** { "tree" :"ExplanationOfBenefit.item.quantity", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setQuantity"} **/
						));
Explanationofbenefitobj.setUnitPrice(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftTmNtPrcMnCrrncy() /** { "tree" :"ExplanationOfBenefit.item.unitPrice", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setUnitPrice, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftTmNtPrcMnVlue() /** { "tree" :"ExplanationOfBenefit.item.unitPrice", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setUnitPrice, setVal"} **/
						));
Explanationofbenefitobj.setFactor(HapiFHIRHelpers.createdecimal(explanationofbenefit.getExplntnfBnftTmFctrDcml() /** { "tree" :"ExplanationOfBenefit.item.factor", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setFactor"} **/
						));
Explanationofbenefitobj.setNet(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftTmNtMnCrrncy() /** { "tree" :"ExplanationOfBenefit.item.net", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setNet, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftTmNtMnVlue() /** { "tree" :"ExplanationOfBenefit.item.net", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setNet, setVal"} **/
						));
Explanationofbenefitobj.addUdi(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftTmDRfrnce() /** { "tree" :"ExplanationOfBenefit.item.udi", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addUdi"} **/
						));
Explanationofbenefitobj.setBodySite(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmBdStCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.bodySite", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setBodySite, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmBdStCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.bodySite", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setBodySite, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmBdStCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.bodySite", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setBodySite, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmBdStCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.bodySite", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setBodySite, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmBdStCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.bodySite", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setBodySite, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmBdStCcTxt() /** { "tree" :"ExplanationOfBenefit.item.bodySite", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem"] , "methodName" : "setBodySite, setText"} **/
						));
Explanationofbenefitobj.addSubSite(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmSbStCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.subSite", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addSubSite, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmSbStCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.subSite", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addSubSite, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmSbStCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.subSite", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addSubSite, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmSbStCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.subSite", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addSubSite, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmSbStCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.subSite", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addSubSite, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmSbStCcTxt() /** { "tree" :"ExplanationOfBenefit.item.subSite", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addSubSite, setText"} **/
						));
Explanationofbenefitobj.addEncounter(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftTmNcntrRfrnce() /** { "tree" :"ExplanationOfBenefit.item.encounter", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addEncounter"} **/
						));
Explanationofbenefitobj.addNoteNumber(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftTmNtNmbrPstvnt() /** { "tree" :"ExplanationOfBenefit.item.noteNumber", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addItem"] , "methodName" : "addNoteNumber"} **/
						));
Explanationofbenefitobj.setCategory(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDjdctnCtgrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.adjudication.category", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setCategory, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnCtgrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.adjudication.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setCategory, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnCtgrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.adjudication.category", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setCategory, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnCtgrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.adjudication.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setCategory, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnCtgrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.adjudication.category", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setCategory, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnCtgrCcTxt() /** { "tree" :"ExplanationOfBenefit.item.adjudication.category", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setCategory, setText"} **/
						));
Explanationofbenefitobj.setReason(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDjdctnRsnCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.adjudication.reason", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setReason, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnRsnCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.adjudication.reason", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setReason, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnRsnCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.adjudication.reason", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setReason, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnRsnCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.adjudication.reason", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setReason, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnRsnCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.adjudication.reason", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setReason, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnRsnCcTxt() /** { "tree" :"ExplanationOfBenefit.item.adjudication.reason", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setReason, setText"} **/
						));
Explanationofbenefitobj.setAmount(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftTmDjdctnMntMnCrrncy() /** { "tree" :"ExplanationOfBenefit.item.adjudication.amount", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setAmount, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftTmDjdctnMntMnVlue() /** { "tree" :"ExplanationOfBenefit.item.adjudication.amount", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setAmount, setVal"} **/
						));
Explanationofbenefitobj.setValue(HapiFHIRHelpers.createdecimal(explanationofbenefit.getExplntnfBnftTmDjdctnVlDcml() /** { "tree" :"ExplanationOfBenefit.item.adjudication.value", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication"] , "methodName" : "setValue"} **/
						));
Explanationofbenefitobj.setSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftTmDtlSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.item.detail.sequence", "datatype" : "positiveInt", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setSequence"} **/
						));
Explanationofbenefitobj.setRevenue(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDtlRvnCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.detail.revenue", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setRevenue, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlRvnCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.detail.revenue", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setRevenue, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlRvnCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.detail.revenue", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setRevenue, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlRvnCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.detail.revenue", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setRevenue, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlRvnCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.detail.revenue", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setRevenue, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlRvnCcTxt() /** { "tree" :"ExplanationOfBenefit.item.detail.revenue", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setRevenue, setText"} **/
						));
Explanationofbenefitobj.setCategory(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDtlCtgrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.detail.category", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setCategory, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlCtgrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.detail.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setCategory, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlCtgrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.detail.category", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setCategory, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlCtgrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.detail.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setCategory, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlCtgrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.detail.category", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setCategory, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlCtgrCcTxt() /** { "tree" :"ExplanationOfBenefit.item.detail.category", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setCategory, setText"} **/
						));
Explanationofbenefitobj.setProductOrService(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDtlPrdctrSrvcCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.detail.productOrService", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setProductOrService, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlPrdctrSrvcCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.detail.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setProductOrService, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlPrdctrSrvcCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.detail.productOrService", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setProductOrService, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlPrdctrSrvcCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.detail.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setProductOrService, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlPrdctrSrvcCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.detail.productOrService", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setProductOrService, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlPrdctrSrvcCcTxt() /** { "tree" :"ExplanationOfBenefit.item.detail.productOrService", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setProductOrService, setText"} **/
						));
Explanationofbenefitobj.addModifier(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDtlMdfrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.detail.modifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addModifier, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlMdfrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.detail.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addModifier, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlMdfrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.detail.modifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addModifier, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlMdfrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.detail.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addModifier, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlMdfrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.detail.modifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addModifier, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlMdfrCcTxt() /** { "tree" :"ExplanationOfBenefit.item.detail.modifier", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addModifier, setText"} **/
						));
Explanationofbenefitobj.addProgramCode(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDtlPrgrmCdCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.detail.programCode", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addProgramCode, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlPrgrmCdCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.detail.programCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addProgramCode, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlPrgrmCdCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.detail.programCode", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addProgramCode, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlPrgrmCdCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.detail.programCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addProgramCode, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlPrgrmCdCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.detail.programCode", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addProgramCode, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlPrgrmCdCcTxt() /** { "tree" :"ExplanationOfBenefit.item.detail.programCode", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addProgramCode, setText"} **/
						));
Explanationofbenefitobj.setQuantity(HapiFHIRHelpers.createSimpleQuantity(explanationofbenefit.getExplntnfBnftTmDtlQnttSmplQntty() /** { "tree" :"ExplanationOfBenefit.item.detail.quantity", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setQuantity"} **/
						));
Explanationofbenefitobj.setUnitPrice(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftTmDtlNtPrcMnCrrncy() /** { "tree" :"ExplanationOfBenefit.item.detail.unitPrice", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setUnitPrice, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlNtPrcMnVlue() /** { "tree" :"ExplanationOfBenefit.item.detail.unitPrice", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setUnitPrice, setVal"} **/
						));
Explanationofbenefitobj.setFactor(HapiFHIRHelpers.createdecimal(explanationofbenefit.getExplntnfBnftTmDtlFctrDcml() /** { "tree" :"ExplanationOfBenefit.item.detail.factor", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setFactor"} **/
						));
Explanationofbenefitobj.setNet(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftTmDtlNtMnCrrncy() /** { "tree" :"ExplanationOfBenefit.item.detail.net", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setNet, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlNtMnVlue() /** { "tree" :"ExplanationOfBenefit.item.detail.net", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "setNet, setVal"} **/
						));
Explanationofbenefitobj.addUdi(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftTmDtlDRfrnce() /** { "tree" :"ExplanationOfBenefit.item.detail.udi", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addUdi"} **/
						));
Explanationofbenefitobj.addNoteNumber(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftTmDtlNtNmbrPstvnt() /** { "tree" :"ExplanationOfBenefit.item.detail.noteNumber", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addNoteNumber"} **/
						));
Explanationofbenefitobj.addAdjudication(HapiFHIRHelpers.createadjudication(explanationofbenefit.getExplntnfBnftTmDtlDjdctnDjdctn() /** { "tree" :"ExplanationOfBenefit.item.detail.adjudication", "datatype" : "adjudication", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail"] , "methodName" : "addAdjudication"} **/
						));
Explanationofbenefitobj.setSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftTmDtlSbDtlSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.sequence", "datatype" : "positiveInt", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setSequence"} **/
						));
Explanationofbenefitobj.setRevenue(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDtlSbDtlRvnCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.revenue", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setRevenue, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlRvnCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.revenue", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setRevenue, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlRvnCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.revenue", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setRevenue, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlRvnCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.revenue", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setRevenue, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlRvnCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.revenue", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setRevenue, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlRvnCcTxt() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.revenue", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setRevenue, setText"} **/
						));
Explanationofbenefitobj.setCategory(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDtlSbDtlCtgrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.category", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setCategory, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlCtgrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setCategory, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlCtgrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.category", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setCategory, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlCtgrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setCategory, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlCtgrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.category", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setCategory, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlCtgrCcTxt() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.category", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setCategory, setText"} **/
						));
Explanationofbenefitobj.setProductOrService(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrdctrSrvcCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.productOrService", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrdctrSrvcCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrdctrSrvcCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.productOrService", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrdctrSrvcCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrdctrSrvcCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.productOrService", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrdctrSrvcCcTxt() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.productOrService", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, setText"} **/
						));
Explanationofbenefitobj.addModifier(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDtlSbDtlMdfrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.modifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addModifier, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlMdfrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addModifier, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlMdfrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.modifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addModifier, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlMdfrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addModifier, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlMdfrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.modifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addModifier, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlMdfrCcTxt() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.modifier", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addModifier, setText"} **/
						));
Explanationofbenefitobj.addProgramCode(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrgrmCdCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.programCode", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addProgramCode, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrgrmCdCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.programCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addProgramCode, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrgrmCdCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.programCode", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addProgramCode, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrgrmCdCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.programCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addProgramCode, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrgrmCdCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.programCode", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addProgramCode, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlPrgrmCdCcTxt() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.programCode", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addProgramCode, setText"} **/
						));
Explanationofbenefitobj.setQuantity(HapiFHIRHelpers.createSimpleQuantity(explanationofbenefit.getExplntnfBnftTmDtlSbDtlQnttSmplQntty() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.quantity", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setQuantity"} **/
						));
Explanationofbenefitobj.setUnitPrice(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftTmDtlSbDtlNtPrcMnCrrncy() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.unitPrice", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setUnitPrice, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlNtPrcMnVlue() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.unitPrice", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setUnitPrice, setVal"} **/
						));
Explanationofbenefitobj.setFactor(HapiFHIRHelpers.createdecimal(explanationofbenefit.getExplntnfBnftTmDtlSbDtlFctrDcml() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.factor", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setFactor"} **/
						));
Explanationofbenefitobj.setNet(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftTmDtlSbDtlNtMnCrrncy() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.net", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setNet, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftTmDtlSbDtlNtMnVlue() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.net", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "setNet, setVal"} **/
						));
Explanationofbenefitobj.addUdi(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftTmDtlSbDtlDRfrnce() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.udi", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addUdi"} **/
						));
Explanationofbenefitobj.addNoteNumber(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftTmDtlSbDtlNtNmbrPstvnt() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.noteNumber", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addNoteNumber"} **/
						));
Explanationofbenefitobj.addAdjudication(HapiFHIRHelpers.createadjudication(explanationofbenefit.getExplntnfBnftTmDtlSbDtlDjdctnDjdctn() /** { "tree" :"ExplanationOfBenefit.item.detail.subDetail.adjudication", "datatype" : "adjudication", "cardinality" : "Many", "elementtree" : ["addItem", "addAdjudication", "addDetail", "addSubDetail"] , "methodName" : "addAdjudication"} **/
						));
Explanationofbenefitobj.addItemSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftDdtmTmSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.addItem.itemSequence", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addItemSequence"} **/
						));
Explanationofbenefitobj.addDetailSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftDdtmDtlSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.addItem.detailSequence", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addDetailSequence"} **/
						));
Explanationofbenefitobj.addSubDetailSequence(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftDdtmSbDtlSqncPstvnt() /** { "tree" :"ExplanationOfBenefit.addItem.subDetailSequence", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addSubDetailSequence"} **/
						));
Explanationofbenefitobj.addProvider(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftDdtmPrvdrRfrnce() /** { "tree" :"ExplanationOfBenefit.addItem.provider", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addProvider"} **/
						));
Explanationofbenefitobj.setProductOrService(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDdtmPrdctrSrvcCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.addItem.productOrService", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addAddItem"] , "methodName" : "setProductOrService, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDdtmPrdctrSrvcCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.addItem.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addAddItem"] , "methodName" : "setProductOrService, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDdtmPrdctrSrvcCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.addItem.productOrService", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addAddItem"] , "methodName" : "setProductOrService, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmPrdctrSrvcCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.addItem.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addAddItem"] , "methodName" : "setProductOrService, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDdtmPrdctrSrvcCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.addItem.productOrService", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addAddItem"] , "methodName" : "setProductOrService, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDdtmPrdctrSrvcCcTxt() /** { "tree" :"ExplanationOfBenefit.addItem.productOrService", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addAddItem"] , "methodName" : "setProductOrService, setText"} **/
						));
Explanationofbenefitobj.addModifier(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDdtmMdfrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.addItem.modifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addModifier, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDdtmMdfrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.addItem.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addModifier, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDdtmMdfrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.addItem.modifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addModifier, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmMdfrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.addItem.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addModifier, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDdtmMdfrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.addItem.modifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addModifier, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDdtmMdfrCcTxt() /** { "tree" :"ExplanationOfBenefit.addItem.modifier", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addModifier, setText"} **/
						));
Explanationofbenefitobj.addProgramCode(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDdtmPrgrmCdCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.addItem.programCode", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addProgramCode, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDdtmPrgrmCdCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.addItem.programCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addProgramCode, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDdtmPrgrmCdCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.addItem.programCode", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addProgramCode, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmPrgrmCdCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.addItem.programCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addProgramCode, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDdtmPrgrmCdCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.addItem.programCode", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addProgramCode, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDdtmPrgrmCdCcTxt() /** { "tree" :"ExplanationOfBenefit.addItem.programCode", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addProgramCode, setText"} **/
						));
Explanationofbenefitobj.setServicedDate(HapiFHIRHelpers.createdate(explanationofbenefit.getExplntnfBnftDdtmSrvcdDtDte() /** { "tree" :"ExplanationOfBenefit.addItem.servicedDate", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setServicedDate"} **/
						));
Explanationofbenefitobj.setServicedPeriod(HapiFHIRHelpers.createPeriod(explanationofbenefit.getExplntnfBnftDdtmSrvcdPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.addItem.servicedPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setServicedPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftDdtmSrvcdPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.addItem.servicedPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setServicedPeriod, setEnd"} **/
						));
Explanationofbenefitobj.setLocationCodeableconcept(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDdtmLctnCdblcncptCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.addItem.locationCodeableconcept", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationCodeableconcept, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnCdblcncptCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.addItem.locationCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationCodeableconcept, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnCdblcncptCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.addItem.locationCodeableconcept", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationCodeableconcept, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnCdblcncptCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.addItem.locationCodeableconcept", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationCodeableconcept, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnCdblcncptCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.addItem.locationCodeableconcept", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationCodeableconcept, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnCdblcncptCcTxt() /** { "tree" :"ExplanationOfBenefit.addItem.locationCodeableconcept", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationCodeableconcept, setText"} **/
						));
Explanationofbenefitobj.setLocationAddress(HapiFHIRHelpers.createAddress(explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssSe() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, code", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, setUse"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssTpe() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, code", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, setType"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, setPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, setPeriod, setEnd"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssTxt() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, setText"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssLne() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, addLine"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssCty() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, setCity"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssDstrct() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, setDistrict"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssStte() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, setState"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssPstlCde() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, setPostalCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmLctnddrssDdrssCntry() /** { "tree" :"ExplanationOfBenefit.addItem.locationAddress", "datatype" : "Address, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationAddress, setCounty"} **/
						));
Explanationofbenefitobj.setLocationReference(location)(HapiFHIRHelpers.createReference(explanationofbenefit.getExplntnfBnftDdtmLctnRfrncRfrnce() /** { "tree" :"ExplanationOfBenefit.addItem.locationReference", "datatype" : "Reference", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setLocationReference(location)"} **/
						));
Explanationofbenefitobj.setQuantity(HapiFHIRHelpers.createSimpleQuantity(explanationofbenefit.getExplntnfBnftDdtmQnttSmplQntty() /** { "tree" :"ExplanationOfBenefit.addItem.quantity", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setQuantity"} **/
						));
Explanationofbenefitobj.setUnitPrice(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftDdtmNtPrcMnCrrncy() /** { "tree" :"ExplanationOfBenefit.addItem.unitPrice", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setUnitPrice, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftDdtmNtPrcMnVlue() /** { "tree" :"ExplanationOfBenefit.addItem.unitPrice", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setUnitPrice, setVal"} **/
						));
Explanationofbenefitobj.setFactor(HapiFHIRHelpers.createdecimal(explanationofbenefit.getExplntnfBnftDdtmFctrDcml() /** { "tree" :"ExplanationOfBenefit.addItem.factor", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setFactor"} **/
						));
Explanationofbenefitobj.setNet(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftDdtmNtMnCrrncy() /** { "tree" :"ExplanationOfBenefit.addItem.net", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setNet, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftDdtmNtMnVlue() /** { "tree" :"ExplanationOfBenefit.addItem.net", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setNet, setVal"} **/
						));
Explanationofbenefitobj.setBodySite(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDdtmBdStCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.addItem.bodySite", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setBodySite, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDdtmBdStCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.addItem.bodySite", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setBodySite, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDdtmBdStCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.addItem.bodySite", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setBodySite, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmBdStCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.addItem.bodySite", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setBodySite, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDdtmBdStCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.addItem.bodySite", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setBodySite, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDdtmBdStCcTxt() /** { "tree" :"ExplanationOfBenefit.addItem.bodySite", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem"] , "methodName" : "setBodySite, setText"} **/
						));
Explanationofbenefitobj.addSubSite(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDdtmSbStCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.addItem.subSite", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addSubSite, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDdtmSbStCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.addItem.subSite", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addSubSite, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDdtmSbStCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.addItem.subSite", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addSubSite, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmSbStCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.addItem.subSite", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addSubSite, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDdtmSbStCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.addItem.subSite", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addSubSite, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDdtmSbStCcTxt() /** { "tree" :"ExplanationOfBenefit.addItem.subSite", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addSubSite, setText"} **/
						));
Explanationofbenefitobj.addNoteNumber(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftDdtmNtNmbrPstvnt() /** { "tree" :"ExplanationOfBenefit.addItem.noteNumber", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addNoteNumber"} **/
						));
Explanationofbenefitobj.addAdjudication(HapiFHIRHelpers.createadjudication(explanationofbenefit.getExplntnfBnftDdtmDjdctnDjdctn() /** { "tree" :"ExplanationOfBenefit.addItem.adjudication", "datatype" : "adjudication", "cardinality" : "Many", "elementtree" : ["addAddItem"] , "methodName" : "addAdjudication"} **/
						));
Explanationofbenefitobj.setProductOrService(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDdtmDtlPrdctrSrvcCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.addItem.detail.productOrService", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setProductOrService, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlPrdctrSrvcCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.addItem.detail.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setProductOrService, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlPrdctrSrvcCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.addItem.detail.productOrService", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setProductOrService, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlPrdctrSrvcCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.addItem.detail.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setProductOrService, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlPrdctrSrvcCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.addItem.detail.productOrService", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setProductOrService, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlPrdctrSrvcCcTxt() /** { "tree" :"ExplanationOfBenefit.addItem.detail.productOrService", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setProductOrService, setText"} **/
						));
Explanationofbenefitobj.addModifier(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDdtmDtlMdfrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.addItem.detail.modifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "addModifier, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlMdfrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.addItem.detail.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "addModifier, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlMdfrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.addItem.detail.modifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "addModifier, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlMdfrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.addItem.detail.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "addModifier, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlMdfrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.addItem.detail.modifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "addModifier, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlMdfrCcTxt() /** { "tree" :"ExplanationOfBenefit.addItem.detail.modifier", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "addModifier, setText"} **/
						));
Explanationofbenefitobj.setQuantity(HapiFHIRHelpers.createSimpleQuantity(explanationofbenefit.getExplntnfBnftDdtmDtlQnttSmplQntty() /** { "tree" :"ExplanationOfBenefit.addItem.detail.quantity", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setQuantity"} **/
						));
Explanationofbenefitobj.setUnitPrice(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftDdtmDtlNtPrcMnCrrncy() /** { "tree" :"ExplanationOfBenefit.addItem.detail.unitPrice", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setUnitPrice, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlNtPrcMnVlue() /** { "tree" :"ExplanationOfBenefit.addItem.detail.unitPrice", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setUnitPrice, setVal"} **/
						));
Explanationofbenefitobj.setFactor(HapiFHIRHelpers.createdecimal(explanationofbenefit.getExplntnfBnftDdtmDtlFctrDcml() /** { "tree" :"ExplanationOfBenefit.addItem.detail.factor", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setFactor"} **/
						));
Explanationofbenefitobj.setNet(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftDdtmDtlNtMnCrrncy() /** { "tree" :"ExplanationOfBenefit.addItem.detail.net", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setNet, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlNtMnVlue() /** { "tree" :"ExplanationOfBenefit.addItem.detail.net", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "setNet, setVal"} **/
						));
Explanationofbenefitobj.addNoteNumber(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftDdtmDtlNtNmbrPstvnt() /** { "tree" :"ExplanationOfBenefit.addItem.detail.noteNumber", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "addNoteNumber"} **/
						));
Explanationofbenefitobj.addAdjudication(HapiFHIRHelpers.createadjudication(explanationofbenefit.getExplntnfBnftDdtmDtlDjdctnDjdctn() /** { "tree" :"ExplanationOfBenefit.addItem.detail.adjudication", "datatype" : "adjudication", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail"] , "methodName" : "addAdjudication"} **/
						));
Explanationofbenefitobj.setProductOrService(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlPrdctrSrvcCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.productOrService", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlPrdctrSrvcCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlPrdctrSrvcCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.productOrService", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlPrdctrSrvcCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.productOrService", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlPrdctrSrvcCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.productOrService", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlPrdctrSrvcCcTxt() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.productOrService", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setProductOrService, setText"} **/
						));
Explanationofbenefitobj.addModifier(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlMdfrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.modifier", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "addModifier, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlMdfrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "addModifier, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlMdfrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.modifier", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "addModifier, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlMdfrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.modifier", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "addModifier, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlMdfrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.modifier", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "addModifier, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlMdfrCcTxt() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.modifier", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "addModifier, setText"} **/
						));
Explanationofbenefitobj.setQuantity(HapiFHIRHelpers.createSimpleQuantity(explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlQnttSmplQntty() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.quantity", "datatype" : "SimpleQuantity", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setQuantity"} **/
						));
Explanationofbenefitobj.setUnitPrice(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlNtPrcMnCrrncy() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.unitPrice", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setUnitPrice, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlNtPrcMnVlue() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.unitPrice", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setUnitPrice, setVal"} **/
						));
Explanationofbenefitobj.setFactor(HapiFHIRHelpers.createdecimal(explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlFctrDcml() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.factor", "datatype" : "decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setFactor"} **/
						));
Explanationofbenefitobj.setNet(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlNtMnCrrncy() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.net", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setNet, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlNtMnVlue() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.net", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "setNet, setVal"} **/
						));
Explanationofbenefitobj.addNoteNumber(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlNtNmbrPstvnt() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.noteNumber", "datatype" : "positiveInt", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "addNoteNumber"} **/
						));
Explanationofbenefitobj.addAdjudication(HapiFHIRHelpers.createadjudication(explanationofbenefit.getExplntnfBnftDdtmDtlSbDtlDjdctnDjdctn() /** { "tree" :"ExplanationOfBenefit.addItem.detail.subDetail.adjudication", "datatype" : "adjudication", "cardinality" : "Many", "elementtree" : ["addAddItem", "addDetail", "addSubDetail"] , "methodName" : "addAdjudication"} **/
						, explanationofbenefit.getExplntnfBnftDjdctnDjdctn() /** { "tree" :"ExplanationOfBenefit.adjudication", "datatype" : "adjudication", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addAdjudication"} **/
						));
Explanationofbenefitobj.setCategory(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftTtlCtgrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.total.category", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addTotal"] , "methodName" : "setCategory, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftTtlCtgrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.total.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addTotal"] , "methodName" : "setCategory, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftTtlCtgrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.total.category", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addTotal"] , "methodName" : "setCategory, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftTtlCtgrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.total.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addTotal"] , "methodName" : "setCategory, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftTtlCtgrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.total.category", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addTotal"] , "methodName" : "setCategory, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftTtlCtgrCcTxt() /** { "tree" :"ExplanationOfBenefit.total.category", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addTotal"] , "methodName" : "setCategory, setText"} **/
						));
Explanationofbenefitobj.setAmount(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftTtlMntMnCrrncy() /** { "tree" :"ExplanationOfBenefit.total.amount", "datatype" : "Money, code", "cardinality" : "Required", "elementtree" : ["addTotal"] , "methodName" : "setAmount, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftTtlMntMnVlue() /** { "tree" :"ExplanationOfBenefit.total.amount", "datatype" : "Money, decimal", "cardinality" : "Required", "elementtree" : ["addTotal"] , "methodName" : "setAmount, setVal"} **/
						));
Explanationofbenefitobj.setType(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftPmntTpCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.payment.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftPmntTpCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.payment.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftPmntTpCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.payment.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftPmntTpCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.payment.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftPmntTpCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.payment.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftPmntTpCcTxt() /** { "tree" :"ExplanationOfBenefit.payment.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setType, setText"} **/
						));
Explanationofbenefitobj.setAdjustment(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftPmntDjstmntMnCrrncy() /** { "tree" :"ExplanationOfBenefit.payment.adjustment", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setAdjustment, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftPmntDjstmntMnVlue() /** { "tree" :"ExplanationOfBenefit.payment.adjustment", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setAdjustment, setVal"} **/
						));
Explanationofbenefitobj.setAdjustmentReason(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftPmntDjstmntRsnCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.payment.adjustmentReason", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setAdjustmentReason, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftPmntDjstmntRsnCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.payment.adjustmentReason", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setAdjustmentReason, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftPmntDjstmntRsnCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.payment.adjustmentReason", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setAdjustmentReason, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftPmntDjstmntRsnCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.payment.adjustmentReason", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setAdjustmentReason, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftPmntDjstmntRsnCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.payment.adjustmentReason", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setAdjustmentReason, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftPmntDjstmntRsnCcTxt() /** { "tree" :"ExplanationOfBenefit.payment.adjustmentReason", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setAdjustmentReason, setText"} **/
						));
Explanationofbenefitobj.setDate(HapiFHIRHelpers.createdate(explanationofbenefit.getExplntnfBnftPmntDtDte() /** { "tree" :"ExplanationOfBenefit.payment.date", "datatype" : "date", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setDate"} **/
						));
Explanationofbenefitobj.setAmount(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftPmntMntMnCrrncy() /** { "tree" :"ExplanationOfBenefit.payment.amount", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setAmount, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftPmntMntMnVlue() /** { "tree" :"ExplanationOfBenefit.payment.amount", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setAmount, setVal"} **/
						));
Explanationofbenefitobj.setIdentifier(HapiFHIRHelpers.createIdentifier(explanationofbenefit.getExplntnfBnftPmntDntfrDntfrSe() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, code", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setUse"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrTpCcCSstm() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrTpCcCVrsn() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrTpCcCCde() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrTpCcCDsplay() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrTpCcCSrSlctd() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrTpCcTxt() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setType, setText"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setPeriod, setEnd"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrSsgnr() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, Reference", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setAssigner"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrVlue() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, string", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setValue"} **/
						, explanationofbenefit.getExplntnfBnftPmntDntfrDntfrSstm() /** { "tree" :"ExplanationOfBenefit.payment.identifier", "datatype" : "Identifier, uri", "cardinality" : "ZeroOne", "elementtree" : ["setPayment"] , "methodName" : "setIdentifier, setSystem"} **/
						));
Explanationofbenefitobj.setFormCode(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftFrmCdCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.formCode", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFormCode, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftFrmCdCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.formCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFormCode, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftFrmCdCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.formCode", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFormCode, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftFrmCdCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.formCode", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFormCode, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftFrmCdCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.formCode", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFormCode, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftFrmCdCcTxt() /** { "tree" :"ExplanationOfBenefit.formCode", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setFormCode, setText"} **/
						));
Explanationofbenefitobj.setForm(HapiFHIRHelpers.createAttachment(explanationofbenefit.getExplntnfBnftFrmTtchmntDta() /** { "tree" :"ExplanationOfBenefit.form", "datatype" : "Attachment, base64Binary", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, setData"} **/
						, explanationofbenefit.getExplntnfBnftFrmTtchmntHsh() /** { "tree" :"ExplanationOfBenefit.form", "datatype" : "Attachment, base64Binary", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, setHash"} **/
						, explanationofbenefit.getExplntnfBnftFrmTtchmntCntntTpe() /** { "tree" :"ExplanationOfBenefit.form", "datatype" : "Attachment, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, setContentType"} **/
						, explanationofbenefit.getExplntnfBnftFrmTtchmntLngge() /** { "tree" :"ExplanationOfBenefit.form", "datatype" : "Attachment, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, setLanguage"} **/
						, explanationofbenefit.getExplntnfBnftFrmTtchmntCrtn() /** { "tree" :"ExplanationOfBenefit.form", "datatype" : "Attachment, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, setCreation"} **/
						, explanationofbenefit.getExplntnfBnftFrmTtchmntTtle() /** { "tree" :"ExplanationOfBenefit.form", "datatype" : "Attachment, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, setTitle"} **/
						, explanationofbenefit.getExplntnfBnftFrmTtchmntSze() /** { "tree" :"ExplanationOfBenefit.form", "datatype" : "Attachment, unsignedInt", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, setSize"} **/
						, explanationofbenefit.getExplntnfBnftFrmTtchmntRl() /** { "tree" :"ExplanationOfBenefit.form", "datatype" : "Attachment, url", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setForm, setUrl"} **/
						));
Explanationofbenefitobj.setNumber(HapiFHIRHelpers.createpositiveInt(explanationofbenefit.getExplntnfBnftPrcssNtNmbrPstvnt() /** { "tree" :"ExplanationOfBenefit.processNote.number", "datatype" : "positiveInt", "cardinality" : "ZeroOne", "elementtree" : ["addProcessNote"] , "methodName" : "setNumber"} **/
						));
Explanationofbenefitobj.setType(HapiFHIRHelpers.createcode(explanationofbenefit.getExplntnfBnftPrcssNtTpCde() /** { "tree" :"ExplanationOfBenefit.processNote.type", "datatype" : "code", "cardinality" : "ZeroOne", "elementtree" : ["addProcessNote"] , "methodName" : "setType"} **/
						));
Explanationofbenefitobj.setText(HapiFHIRHelpers.createstring(explanationofbenefit.getExplntnfBnftPrcssNtTxtStrng() /** { "tree" :"ExplanationOfBenefit.processNote.text", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addProcessNote"] , "methodName" : "setText"} **/
						));
Explanationofbenefitobj.setLanguage(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftPrcssNtLnggCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.processNote.language", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addProcessNote"] , "methodName" : "setLanguage, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftPrcssNtLnggCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.processNote.language", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addProcessNote"] , "methodName" : "setLanguage, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftPrcssNtLnggCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.processNote.language", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addProcessNote"] , "methodName" : "setLanguage, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftPrcssNtLnggCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.processNote.language", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addProcessNote"] , "methodName" : "setLanguage, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftPrcssNtLnggCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.processNote.language", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addProcessNote"] , "methodName" : "setLanguage, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftPrcssNtLnggCcTxt() /** { "tree" :"ExplanationOfBenefit.processNote.language", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addProcessNote"] , "methodName" : "setLanguage, setText"} **/
						));
Explanationofbenefitobj.setBenefitPeriod(HapiFHIRHelpers.createPeriod(explanationofbenefit.getExplntnfBnftBnftPrdPrdStrt() /** { "tree" :"ExplanationOfBenefit.benefitPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setBenefitPeriod, setStart"} **/
						, explanationofbenefit.getExplntnfBnftBnftPrdPrdNd() /** { "tree" :"ExplanationOfBenefit.benefitPeriod", "datatype" : "Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setBenefitPeriod, setEnd"} **/
						));
Explanationofbenefitobj.setCategory(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftBnftBlncCtgrCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.benefitBalance.category", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addBenefitBalance"] , "methodName" : "setCategory, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncCtgrCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.benefitBalance.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addBenefitBalance"] , "methodName" : "setCategory, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncCtgrCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.benefitBalance.category", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addBenefitBalance"] , "methodName" : "setCategory, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncCtgrCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.benefitBalance.category", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addBenefitBalance"] , "methodName" : "setCategory, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncCtgrCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.benefitBalance.category", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addBenefitBalance"] , "methodName" : "setCategory, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncCtgrCcTxt() /** { "tree" :"ExplanationOfBenefit.benefitBalance.category", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addBenefitBalance"] , "methodName" : "setCategory, setText"} **/
						));
Explanationofbenefitobj.setExcluded(HapiFHIRHelpers.createboolean(explanationofbenefit.getExplntnfBnftBnftBlncXclddBln() /** { "tree" :"ExplanationOfBenefit.benefitBalance.excluded", "datatype" : "boolean", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setExcluded"} **/
						));
Explanationofbenefitobj.setName(HapiFHIRHelpers.createstring(explanationofbenefit.getExplntnfBnftBnftBlncNmStrng() /** { "tree" :"ExplanationOfBenefit.benefitBalance.name", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setName"} **/
						));
Explanationofbenefitobj.setDescription(HapiFHIRHelpers.createstring(explanationofbenefit.getExplntnfBnftBnftBlncDscrptnStrng() /** { "tree" :"ExplanationOfBenefit.benefitBalance.description", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setDescription"} **/
						));
Explanationofbenefitobj.setNetwork(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftBnftBlncNtwrkCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.benefitBalance.network", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setNetwork, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncNtwrkCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.benefitBalance.network", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setNetwork, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncNtwrkCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.benefitBalance.network", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setNetwork, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncNtwrkCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.benefitBalance.network", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setNetwork, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncNtwrkCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.benefitBalance.network", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setNetwork, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncNtwrkCcTxt() /** { "tree" :"ExplanationOfBenefit.benefitBalance.network", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setNetwork, setText"} **/
						));
Explanationofbenefitobj.setUnit(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftBnftBlncNtCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.benefitBalance.unit", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setUnit, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncNtCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.benefitBalance.unit", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setUnit, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncNtCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.benefitBalance.unit", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setUnit, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncNtCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.benefitBalance.unit", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setUnit, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncNtCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.benefitBalance.unit", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setUnit, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncNtCcTxt() /** { "tree" :"ExplanationOfBenefit.benefitBalance.unit", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setUnit, setText"} **/
						));
Explanationofbenefitobj.setTerm(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftBnftBlncTrmCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.benefitBalance.term", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setTerm, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncTrmCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.benefitBalance.term", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setTerm, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncTrmCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.benefitBalance.term", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setTerm, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncTrmCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.benefitBalance.term", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setTerm, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncTrmCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.benefitBalance.term", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setTerm, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncTrmCcTxt() /** { "tree" :"ExplanationOfBenefit.benefitBalance.term", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance"] , "methodName" : "setTerm, setText"} **/
						));
Explanationofbenefitobj.setType(HapiFHIRHelpers.createCodeableConcept(explanationofbenefit.getExplntnfBnftBnftBlncFnnclTpCcCdngCSstm() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setType, addCoding, setSystem"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncFnnclTpCcCdngCVrsn() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setType, addCoding, setVersion"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncFnnclTpCcCdngCCde() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setType, addCoding, setCode"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncFnnclTpCcCdngCDsplay() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncFnnclTpCcCdngCSrSlctd() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncFnnclTpCcTxt() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.type", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setType, setText"} **/
						));
Explanationofbenefitobj.setAllowedUnsignedint(HapiFHIRHelpers.createunsignedInt(explanationofbenefit.getExplntnfBnftBnftBlncFnnclLlwdnsgndntNsgndnt() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.allowedUnsignedint", "datatype" : "unsignedInt", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setAllowedUnsignedint"} **/
						));
Explanationofbenefitobj.setAllowedString(HapiFHIRHelpers.createstring(explanationofbenefit.getExplntnfBnftBnftBlncFnnclLlwdStrngStrng() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.allowedString", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setAllowedString"} **/
						));
Explanationofbenefitobj.setAllowedMoney(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftBnftBlncFnnclLlwdMnMnCrrncy() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.allowedMoney", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setAllowedMoney, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncFnnclLlwdMnMnVlue() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.allowedMoney", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setAllowedMoney, setVal"} **/
						));
Explanationofbenefitobj.setUsedUnsignedint(HapiFHIRHelpers.createunsignedInt(explanationofbenefit.getExplntnfBnftBnftBlncFnnclSdnsgndntNsgndnt() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.usedUnsignedint", "datatype" : "unsignedInt", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setUsedUnsignedint"} **/
						));
Explanationofbenefitobj.setUsedMoney(HapiFHIRHelpers.createMoney(explanationofbenefit.getExplntnfBnftBnftBlncFnnclSdMnMnCrrncy() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.usedMoney", "datatype" : "Money, code", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setUsedMoney, setCurrency"} **/
						, explanationofbenefit.getExplntnfBnftBnftBlncFnnclSdMnMnVlue() /** { "tree" :"ExplanationOfBenefit.benefitBalance.financial.usedMoney", "datatype" : "Money, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addBenefitBalance", "addFinancial"] , "methodName" : "setUsedMoney, setVal"} **/
		));
	}
}
