package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Medicinalproductingredient.
 * @see .Medicinalproductingredient
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class MedicinalproductingredientConversion 
{
	public Patient Medicinalproductingredients(main.templateoutput.Model.Medicinalproductingredient medicinalproductingredient) 
	{
			Patient  Medicinalproductingredientobj = new Patient(); 

						Medicinalproductingredientobj.setIdentifier(HapiFHIRHelpers.createIdentifier(medicinalproductingredient.getMpngrdntDntfrDntfrSe() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setUse"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrTpCcCSstm() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setType, addCoding, setSystem"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrTpCcCVrsn() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setType, addCoding, setVersion"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrTpCcCCde() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setType, addCoding, setCode"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrTpCcCDsplay() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setType, addCoding, setDisplay"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrTpCcCSrSlctd() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setType, addCoding, setUserSelected"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrTpCcTxt() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setType, setText"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrPrdPrdStrt() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setPeriod, setStart"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrPrdPrdNd() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, Period, dateTime", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setPeriod, setEnd"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrSsgnr() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, Reference", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setAssigner"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrVlue() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setValue"} **/
						, medicinalproductingredient.getMpngrdntDntfrDntfrSstm() /** { "tree" :"MedicinalProductIngredient.identifier", "datatype" : "Identifier, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setIdentifier, setSystem"} **/
						));
Medicinalproductingredientobj.setRole(HapiFHIRHelpers.createCodeableConcept(medicinalproductingredient.getMpngrdntRlCcCdngCSstm() /** { "tree" :"MedicinalProductIngredient.role", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setRole, addCoding, setSystem"} **/
						, medicinalproductingredient.getMpngrdntRlCcCdngCVrsn() /** { "tree" :"MedicinalProductIngredient.role", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setRole, addCoding, setVersion"} **/
						, medicinalproductingredient.getMpingredientRoleCcCodingCCode() /** { "tree" :"MedicinalProductIngredient.role", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setRole, addCoding, setCode"} **/
						, medicinalproductingredient.getMpngrdntRlCcCdngCDsplay() /** { "tree" :"MedicinalProductIngredient.role", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setRole, addCoding, setDisplay"} **/
						, medicinalproductingredient.getMpngrdntRlCcCdngCSrSlctd() /** { "tree" :"MedicinalProductIngredient.role", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setRole, addCoding, setUserSelected"} **/
						, medicinalproductingredient.getMpingredientRoleCcText() /** { "tree" :"MedicinalProductIngredient.role", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : [] , "methodName" : "setRole, setText"} **/
						));
Medicinalproductingredientobj.setAllergenicIndicator(HapiFHIRHelpers.createboolean(medicinalproductingredient.getMpngrdntLlrgncndctrBln() /** { "tree" :"MedicinalProductIngredient.allergenicIndicator", "datatype" : "boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setAllergenicIndicator"} **/
						));
Medicinalproductingredientobj.addManufacturer(HapiFHIRHelpers.createReference(medicinalproductingredient.getMpngrdntMnfctrrRfrnce() /** { "tree" :"MedicinalProductIngredient.manufacturer", "datatype" : "Reference", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addManufacturer"} **/
						));
Medicinalproductingredientobj.setCode(HapiFHIRHelpers.createCodeableConcept(medicinalproductingredient.getMpngrdntSpcfdSbstncCdCcCdngCSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.code", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setCode, addCoding, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncCdCcCdngCVrsn() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setCode, addCoding, setVersion"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncCdCcCdngCCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.code", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setCode, addCoding, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncCdCcCdngCDsplay() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setCode, addCoding, setDisplay"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncCdCcCdngCSrSlctd() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.code", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setCode, addCoding, setUserSelected"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncCdCcTxt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.code", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setCode, setText"} **/
						));
Medicinalproductingredientobj.setGroup(HapiFHIRHelpers.createCodeableConcept(medicinalproductingredient.getMpngrdntSpcfdSbstncGrpCcCdngCSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.group", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setGroup, addCoding, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncGrpCcCdngCVrsn() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.group", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setGroup, addCoding, setVersion"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncGrpCcCdngCCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.group", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setGroup, addCoding, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncGrpCcCdngCDsplay() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.group", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setGroup, addCoding, setDisplay"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncGrpCcCdngCSrSlctd() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.group", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setGroup, addCoding, setUserSelected"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncGrpCcTxt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.group", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setGroup, setText"} **/
						));
Medicinalproductingredientobj.setConfidentiality(HapiFHIRHelpers.createCodeableConcept(medicinalproductingredient.getMpngrdntSpcfdSbstncCnfdntltCcCdngCSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.confidentiality", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setConfidentiality, addCoding, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncCnfdntltCcCdngCVrsn() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.confidentiality", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setConfidentiality, addCoding, setVersion"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncCnfdntltCcCdngCCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.confidentiality", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setConfidentiality, addCoding, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncCnfdntltCcCdngCDsplay() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.confidentiality", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setConfidentiality, addCoding, setDisplay"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncCnfdntltCcCdngCSrSlctd() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.confidentiality", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setConfidentiality, addCoding, setUserSelected"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncCnfdntltCcTxt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.confidentiality", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance"] , "methodName" : "setConfidentiality, setText"} **/
						));
Medicinalproductingredientobj.setPresentation(HapiFHIRHelpers.createRatio(medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnRtNmrtrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentation", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentation, setNumerator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnRtDnmntrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentation", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentation, setDenominator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnRtNmrtrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentation", "datatype" : "Ratio, Quantity, code", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentation, setNumerator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnRtDnmntrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentation", "datatype" : "Ratio, Quantity, code", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentation, setDenominator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnRtNmrtrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentation", "datatype" : "Ratio, Quantity, string", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentation, setNumerator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnRtDnmntrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentation", "datatype" : "Ratio, Quantity, string", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentation, setDenominator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnRtNmrtrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentation", "datatype" : "Ratio, Quantity, uri", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentation, setNumerator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnRtDnmntrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentation", "datatype" : "Ratio, Quantity, uri", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentation, setDenominator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnRtNmrtrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentation", "datatype" : "Ratio, Quantity, code", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentation, setNumerator, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnRtDnmntrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentation", "datatype" : "Ratio, Quantity, code", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentation, setDenominator, setCode"} **/
						));
Medicinalproductingredientobj.setPresentationLowLimit(HapiFHIRHelpers.createRatio(medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnLwLmtRtNmrtrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentationLowLimit, setNumerator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnLwLmtRtDnmntrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentationLowLimit, setDenominator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnLwLmtRtNmrtrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentationLowLimit, setNumerator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnLwLmtRtDnmntrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentationLowLimit, setDenominator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnLwLmtRtNmrtrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit", "datatype" : "Ratio, Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentationLowLimit, setNumerator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnLwLmtRtDnmntrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit", "datatype" : "Ratio, Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentationLowLimit, setDenominator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnLwLmtRtNmrtrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit", "datatype" : "Ratio, Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentationLowLimit, setNumerator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnLwLmtRtDnmntrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit", "datatype" : "Ratio, Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentationLowLimit, setDenominator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnLwLmtRtNmrtrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentationLowLimit, setNumerator, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrPrsnttnLwLmtRtDnmntrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setPresentationLowLimit, setDenominator, setCode"} **/
						));
Medicinalproductingredientobj.setConcentration(HapiFHIRHelpers.createRatio(medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnRtNmrtrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentration", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentration, setNumerator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnRtDnmntrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentration", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentration, setDenominator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnRtNmrtrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentration", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentration, setNumerator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnRtDnmntrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentration", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentration, setDenominator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnRtNmrtrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentration", "datatype" : "Ratio, Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentration, setNumerator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnRtDnmntrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentration", "datatype" : "Ratio, Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentration, setDenominator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnRtNmrtrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentration", "datatype" : "Ratio, Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentration, setNumerator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnRtDnmntrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentration", "datatype" : "Ratio, Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentration, setDenominator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnRtNmrtrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentration", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentration, setNumerator, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnRtDnmntrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentration", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentration, setDenominator, setCode"} **/
						));
Medicinalproductingredientobj.setConcentrationLowLimit(HapiFHIRHelpers.createRatio(medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnLwLmtRtNmrtrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentrationLowLimit, setNumerator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnLwLmtRtDnmntrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentrationLowLimit, setDenominator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnLwLmtRtNmrtrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentrationLowLimit, setNumerator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnLwLmtRtDnmntrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentrationLowLimit, setDenominator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnLwLmtRtNmrtrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit", "datatype" : "Ratio, Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentrationLowLimit, setNumerator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnLwLmtRtDnmntrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit", "datatype" : "Ratio, Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentrationLowLimit, setDenominator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnLwLmtRtNmrtrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit", "datatype" : "Ratio, Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentrationLowLimit, setNumerator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnLwLmtRtDnmntrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit", "datatype" : "Ratio, Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentrationLowLimit, setDenominator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnLwLmtRtNmrtrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentrationLowLimit, setNumerator, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCncntrtnLwLmtRtDnmntrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setConcentrationLowLimit, setDenominator, setCode"} **/
						));
Medicinalproductingredientobj.setMeasurementPoint(HapiFHIRHelpers.createstring(medicinalproductingredient.getMpngrdntSpcfdSbstncStrMsrmntPntStrng() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.measurementPoint", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "setMeasurementPoint"} **/
						));
Medicinalproductingredientobj.addCountry(HapiFHIRHelpers.createCodeableConcept(medicinalproductingredient.getMpngrdntSpcfdSbstncStrCntrCcCdngCSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.country", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "addCountry, addCoding, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCntrCcCdngCVrsn() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.country", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "addCountry, addCoding, setVersion"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCntrCcCdngCCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.country", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "addCountry, addCoding, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCntrCcCdngCDsplay() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.country", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "addCountry, addCoding, setDisplay"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCntrCcCdngCSrSlctd() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.country", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "addCountry, addCoding, setUserSelected"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrCntrCcTxt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.country", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength"] , "methodName" : "addCountry, setText"} **/
						));
Medicinalproductingredientobj.setSubstance(HapiFHIRHelpers.createCodeableConcept(medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrSbstncCcCdngCSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.substance", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setSubstance, addCoding, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrSbstncCcCdngCVrsn() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.substance", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setSubstance, addCoding, setVersion"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrSbstncCcCdngCCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.substance", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setSubstance, addCoding, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrSbstncCcCdngCDsplay() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.substance", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setSubstance, addCoding, setDisplay"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrSbstncCcCdngCSrSlctd() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.substance", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setSubstance, addCoding, setUserSelected"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrSbstncCcTxt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.substance", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setSubstance, setText"} **/
						));
Medicinalproductingredientobj.setStrength(HapiFHIRHelpers.createRatio(medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrRtNmrtrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrength, setNumerator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrRtDnmntrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrength, setDenominator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrRtNmrtrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength", "datatype" : "Ratio, Quantity, code", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrength, setNumerator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrRtDnmntrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength", "datatype" : "Ratio, Quantity, code", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrength, setDenominator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrRtNmrtrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength", "datatype" : "Ratio, Quantity, string", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrength, setNumerator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrRtDnmntrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength", "datatype" : "Ratio, Quantity, string", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrength, setDenominator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrRtNmrtrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength", "datatype" : "Ratio, Quantity, uri", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrength, setNumerator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrRtDnmntrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength", "datatype" : "Ratio, Quantity, uri", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrength, setDenominator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrRtNmrtrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength", "datatype" : "Ratio, Quantity, code", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrength, setNumerator, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrRtDnmntrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength", "datatype" : "Ratio, Quantity, code", "cardinality" : "Required", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrength, setDenominator, setCode"} **/
						));
Medicinalproductingredientobj.setStrengthLowLimit(HapiFHIRHelpers.createRatio(medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrLwLmtRtNmrtrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrengthLowLimit, setNumerator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrLwLmtRtDnmntrQnttVlue() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit", "datatype" : "Ratio, Quantity, decimal", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrengthLowLimit, setDenominator, setValue"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrLwLmtRtNmrtrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrengthLowLimit, setNumerator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrLwLmtRtDnmntrQnttCmprtr() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrengthLowLimit, setDenominator, setComparator"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrLwLmtRtNmrtrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit", "datatype" : "Ratio, Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrengthLowLimit, setNumerator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrLwLmtRtDnmntrQnttNt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit", "datatype" : "Ratio, Quantity, string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrengthLowLimit, setDenominator, setUnit"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrLwLmtRtNmrtrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit", "datatype" : "Ratio, Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrengthLowLimit, setNumerator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrLwLmtRtDnmntrQnttSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit", "datatype" : "Ratio, Quantity, uri", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrengthLowLimit, setDenominator, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrLwLmtRtNmrtrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrengthLowLimit, setNumerator, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrStrLwLmtRtDnmntrQnttCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit", "datatype" : "Ratio, Quantity, code", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setStrengthLowLimit, setDenominator, setCode"} **/
						));
Medicinalproductingredientobj.setMeasurementPoint(HapiFHIRHelpers.createstring(medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrMsrmntPntStrng() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.measurementPoint", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "setMeasurementPoint"} **/
						));
Medicinalproductingredientobj.addCountry(HapiFHIRHelpers.createCodeableConcept(medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrCntrCcCdngCSstm() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.country", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "addCountry, addCoding, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrCntrCcCdngCVrsn() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.country", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "addCountry, addCoding, setVersion"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrCntrCcCdngCCde() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.country", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "addCountry, addCoding, setCode"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrCntrCcCdngCDsplay() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.country", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "addCountry, addCoding, setDisplay"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrCntrCcCdngCSrSlctd() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.country", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "addCountry, addCoding, setUserSelected"} **/
						, medicinalproductingredient.getMpngrdntSpcfdSbstncStrRfrncStrCntrCcTxt() /** { "tree" :"MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.country", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : ["addSpecifiedSubstance", "addStrength", "addReferenceStrength"] , "methodName" : "addCountry, setText"} **/
						));
Medicinalproductingredientobj.setCode(HapiFHIRHelpers.createCodeableConcept(medicinalproductingredient.getMpngrdntSbstncCdCcCdngCSstm() /** { "tree" :"MedicinalProductIngredient.substance.code", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Required", "elementtree" : ["setSubstance"] , "methodName" : "setCode, addCoding, setSystem"} **/
						, medicinalproductingredient.getMpngrdntSbstncCdCcCdngCVrsn() /** { "tree" :"MedicinalProductIngredient.substance.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["setSubstance"] , "methodName" : "setCode, addCoding, setVersion"} **/
						, medicinalproductingredient.getMpngrdntSbstncCdCcCdngCCde() /** { "tree" :"MedicinalProductIngredient.substance.code", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Required", "elementtree" : ["setSubstance"] , "methodName" : "setCode, addCoding, setCode"} **/
						, medicinalproductingredient.getMpngrdntSbstncCdCcCdngCDsplay() /** { "tree" :"MedicinalProductIngredient.substance.code", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Required", "elementtree" : ["setSubstance"] , "methodName" : "setCode, addCoding, setDisplay"} **/
						, medicinalproductingredient.getMpngrdntSbstncCdCcCdngCSrSlctd() /** { "tree" :"MedicinalProductIngredient.substance.code", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Required", "elementtree" : ["setSubstance"] , "methodName" : "setCode, addCoding, setUserSelected"} **/
						, medicinalproductingredient.getMpngrdntSbstncCdCcTxt() /** { "tree" :"MedicinalProductIngredient.substance.code", "datatype" : "CodeableConcept, string", "cardinality" : "Required", "elementtree" : ["setSubstance"] , "methodName" : "setCode, setText"} **/
						));
Medicinalproductingredientobj.addStrength(HapiFHIRHelpers.createstrength(medicinalproductingredient.getMpngrdntSbstncStrStrngth() /** { "tree" :"MedicinalProductIngredient.substance.strength", "datatype" : "strength", "cardinality" : "Many", "elementtree" : ["setSubstance"] , "methodName" : "addStrength"} **/
		));
	}
}
