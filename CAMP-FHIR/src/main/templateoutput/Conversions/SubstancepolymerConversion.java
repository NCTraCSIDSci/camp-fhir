package main.templateoutput.Conversions;
// Generated on Jan 28, 2022, 8:02:40 AM 


import org.hl7.fhir.r4.model.Patient;

/**
 *  object for conversion model class Substancepolymer.
 * @see .Substancepolymer
 * @author Paul Kovach
 */
import main.java.com.campfhir.service.conversion.HapiFHIRHelpers;

public class SubstancepolymerConversion 
{
	public Patient Substancepolymers(main.templateoutput.Model.Substancepolymer substancepolymer) 
	{
			Patient  Substancepolymerobj = new Patient(); 

						Substancepolymerobj.setClass(HapiFHIRHelpers.createCodeableConcept(substancepolymer.getSbstncPlmrClssCcCdngCSstm() /** { "tree" :"SubstancePolymer.class", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setClass, addCoding, setSystem"} **/
						, substancepolymer.getSbstncPlmrClssCcCdngCVrsn() /** { "tree" :"SubstancePolymer.class", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setClass, addCoding, setVersion"} **/
						, substancepolymer.getSbstncPlmrClssCcCdngCCde() /** { "tree" :"SubstancePolymer.class", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setClass, addCoding, setCode"} **/
						, substancepolymer.getSbstncPlmrClssCcCdngCDsplay() /** { "tree" :"SubstancePolymer.class", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setClass, addCoding, setDisplay"} **/
						, substancepolymer.getSbstncPlmrClssCcCdngCSrSlctd() /** { "tree" :"SubstancePolymer.class", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setClass, addCoding, setUserSelected"} **/
						, substancepolymer.getSubstancePolymerClassCcText() /** { "tree" :"SubstancePolymer.class", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setClass, setText"} **/
						));
Substancepolymerobj.setGeometry(HapiFHIRHelpers.createCodeableConcept(substancepolymer.getSbstncPlmrGmtrCcCdngCSstm() /** { "tree" :"SubstancePolymer.geometry", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setGeometry, addCoding, setSystem"} **/
						, substancepolymer.getSbstncPlmrGmtrCcCdngCVrsn() /** { "tree" :"SubstancePolymer.geometry", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setGeometry, addCoding, setVersion"} **/
						, substancepolymer.getSbstncPlmrGmtrCcCdngCCde() /** { "tree" :"SubstancePolymer.geometry", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setGeometry, addCoding, setCode"} **/
						, substancepolymer.getSbstncPlmrGmtrCcCdngCDsplay() /** { "tree" :"SubstancePolymer.geometry", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setGeometry, addCoding, setDisplay"} **/
						, substancepolymer.getSbstncPlmrGmtrCcCdngCSrSlctd() /** { "tree" :"SubstancePolymer.geometry", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setGeometry, addCoding, setUserSelected"} **/
						, substancepolymer.getSubstancePolymerGeometryCcText() /** { "tree" :"SubstancePolymer.geometry", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : [] , "methodName" : "setGeometry, setText"} **/
						));
Substancepolymerobj.addCopolymerConnectivity(HapiFHIRHelpers.createCodeableConcept(substancepolymer.getSbstncPlmrCplmrCnnctvtCcCdngCSstm() /** { "tree" :"SubstancePolymer.copolymerConnectivity", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCopolymerConnectivity, addCoding, setSystem"} **/
						, substancepolymer.getSbstncPlmrCplmrCnnctvtCcCdngCVrsn() /** { "tree" :"SubstancePolymer.copolymerConnectivity", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCopolymerConnectivity, addCoding, setVersion"} **/
						, substancepolymer.getSbstncPlmrCplmrCnnctvtCcCdngCCde() /** { "tree" :"SubstancePolymer.copolymerConnectivity", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCopolymerConnectivity, addCoding, setCode"} **/
						, substancepolymer.getSbstncPlmrCplmrCnnctvtCcCdngCDsplay() /** { "tree" :"SubstancePolymer.copolymerConnectivity", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCopolymerConnectivity, addCoding, setDisplay"} **/
						, substancepolymer.getSbstncPlmrCplmrCnnctvtCcCdngCSrSlctd() /** { "tree" :"SubstancePolymer.copolymerConnectivity", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCopolymerConnectivity, addCoding, setUserSelected"} **/
						, substancepolymer.getSbstncPlmrCplmrCnnctvtCcTxt() /** { "tree" :"SubstancePolymer.copolymerConnectivity", "datatype" : "CodeableConcept, string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addCopolymerConnectivity, setText"} **/
						));
Substancepolymerobj.addModification(HapiFHIRHelpers.createstring(substancepolymer.getSbstncPlmrMdfctnStrng() /** { "tree" :"SubstancePolymer.modification", "datatype" : "string", "cardinality" : "Many", "elementtree" : [] , "methodName" : "addModification"} **/
						));
Substancepolymerobj.setRatioType(HapiFHIRHelpers.createCodeableConcept(substancepolymer.getSbstncPlmrMnmrStRtTpCcCdngCSstm() /** { "tree" :"SubstancePolymer.monomerSet.ratioType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet"] , "methodName" : "setRatioType, addCoding, setSystem"} **/
						, substancepolymer.getSbstncPlmrMnmrStRtTpCcCdngCVrsn() /** { "tree" :"SubstancePolymer.monomerSet.ratioType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet"] , "methodName" : "setRatioType, addCoding, setVersion"} **/
						, substancepolymer.getSbstncPlmrMnmrStRtTpCcCdngCCde() /** { "tree" :"SubstancePolymer.monomerSet.ratioType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet"] , "methodName" : "setRatioType, addCoding, setCode"} **/
						, substancepolymer.getSbstncPlmrMnmrStRtTpCcCdngCDsplay() /** { "tree" :"SubstancePolymer.monomerSet.ratioType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet"] , "methodName" : "setRatioType, addCoding, setDisplay"} **/
						, substancepolymer.getSbstncPlmrMnmrStRtTpCcCdngCSrSlctd() /** { "tree" :"SubstancePolymer.monomerSet.ratioType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet"] , "methodName" : "setRatioType, addCoding, setUserSelected"} **/
						, substancepolymer.getSbstncPlmrMnmrStRtTpCcTxt() /** { "tree" :"SubstancePolymer.monomerSet.ratioType", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet"] , "methodName" : "setRatioType, setText"} **/
						));
Substancepolymerobj.setMaterial(HapiFHIRHelpers.createCodeableConcept(substancepolymer.getSbstncPlmrMnmrStStrtngMtrlMtrlCcCdngCSstm() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.material", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setMaterial, addCoding, setSystem"} **/
						, substancepolymer.getSbstncPlmrMnmrStStrtngMtrlMtrlCcCdngCVrsn() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.material", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setMaterial, addCoding, setVersion"} **/
						, substancepolymer.getSbstncPlmrMnmrStStrtngMtrlMtrlCcCdngCCde() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.material", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setMaterial, addCoding, setCode"} **/
						, substancepolymer.getSbstncPlmrMnmrStStrtngMtrlMtrlCcCdngCDsplay() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.material", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setMaterial, addCoding, setDisplay"} **/
						, substancepolymer.getSbstncPlmrMnmrStStrtngMtrlMtrlCcCdngCSrSlctd() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.material", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setMaterial, addCoding, setUserSelected"} **/
						, substancepolymer.getSbstncPlmrMnmrStStrtngMtrlMtrlCcTxt() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.material", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setMaterial, setText"} **/
						));
Substancepolymerobj.setType(HapiFHIRHelpers.createCodeableConcept(substancepolymer.getSbstncPlmrMnmrStStrtngMtrlTpCcCdngCSstm() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setType, addCoding, setSystem"} **/
						, substancepolymer.getSbstncPlmrMnmrStStrtngMtrlTpCcCdngCVrsn() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setType, addCoding, setVersion"} **/
						, substancepolymer.getSbstncPlmrMnmrStStrtngMtrlTpCcCdngCCde() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setType, addCoding, setCode"} **/
						, substancepolymer.getSbstncPlmrMnmrStStrtngMtrlTpCcCdngCDsplay() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, substancepolymer.getSbstncPlmrMnmrStStrtngMtrlTpCcCdngCSrSlctd() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, substancepolymer.getSbstncPlmrMnmrStStrtngMtrlTpCcTxt() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setType, setText"} **/
						));
Substancepolymerobj.setIsDefining(HapiFHIRHelpers.createboolean(substancepolymer.getSbstncPlmrMnmrStStrtngMtrlSDfnngBln() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.isDefining", "datatype" : "boolean", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setIsDefining"} **/
						));
Substancepolymerobj.setAmount(HapiFHIRHelpers.createSubstanceAmount(substancepolymer.getSbstncPlmrMnmrStStrtngMtrlMntSbstncmnt() /** { "tree" :"SubstancePolymer.monomerSet.startingMaterial.amount", "datatype" : "SubstanceAmount", "cardinality" : "ZeroOne", "elementtree" : ["addMonomerSet", "addStartingMaterial"] , "methodName" : "setAmount"} **/
						));
Substancepolymerobj.setNumberOfUnits(HapiFHIRHelpers.createinteger(substancepolymer.getSbstncPlmrRptNmbrfntsNtgr() /** { "tree" :"SubstancePolymer.repeat.numberOfUnits", "datatype" : "integer", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat"] , "methodName" : "setNumberOfUnits"} **/
						));
Substancepolymerobj.setAverageMolecularFormula(HapiFHIRHelpers.createstring(substancepolymer.getSbstncPlmrRptVrgMlclrFrmlStrng() /** { "tree" :"SubstancePolymer.repeat.averageMolecularFormula", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat"] , "methodName" : "setAverageMolecularFormula"} **/
						));
Substancepolymerobj.setRepeatUnitAmountType(HapiFHIRHelpers.createCodeableConcept(substancepolymer.getSbstncPlmrRptRptntmntTpCcCdngCSstm() /** { "tree" :"SubstancePolymer.repeat.repeatUnitAmountType", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat"] , "methodName" : "setRepeatUnitAmountType, addCoding, setSystem"} **/
						, substancepolymer.getSbstncPlmrRptRptntmntTpCcCdngCVrsn() /** { "tree" :"SubstancePolymer.repeat.repeatUnitAmountType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat"] , "methodName" : "setRepeatUnitAmountType, addCoding, setVersion"} **/
						, substancepolymer.getSbstncPlmrRptRptntmntTpCcCdngCCde() /** { "tree" :"SubstancePolymer.repeat.repeatUnitAmountType", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat"] , "methodName" : "setRepeatUnitAmountType, addCoding, setCode"} **/
						, substancepolymer.getSbstncPlmrRptRptntmntTpCcCdngCDsplay() /** { "tree" :"SubstancePolymer.repeat.repeatUnitAmountType", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat"] , "methodName" : "setRepeatUnitAmountType, addCoding, setDisplay"} **/
						, substancepolymer.getSbstncPlmrRptRptntmntTpCcCdngCSrSlctd() /** { "tree" :"SubstancePolymer.repeat.repeatUnitAmountType", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat"] , "methodName" : "setRepeatUnitAmountType, addCoding, setUserSelected"} **/
						, substancepolymer.getSbstncPlmrRptRptntmntTpCcTxt() /** { "tree" :"SubstancePolymer.repeat.repeatUnitAmountType", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat"] , "methodName" : "setRepeatUnitAmountType, setText"} **/
						));
Substancepolymerobj.setOrientationOfPolymerisation(HapiFHIRHelpers.createCodeableConcept(substancepolymer.getSbstncPlmrRptRptntRnttnfPlmrstnCcCdngCSstm() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.orientationOfPolymerisation", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit"] , "methodName" : "setOrientationOfPolymerisation, addCoding, setSystem"} **/
						, substancepolymer.getSbstncPlmrRptRptntRnttnfPlmrstnCcCdngCVrsn() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.orientationOfPolymerisation", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit"] , "methodName" : "setOrientationOfPolymerisation, addCoding, setVersion"} **/
						, substancepolymer.getSbstncPlmrRptRptntRnttnfPlmrstnCcCdngCCde() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.orientationOfPolymerisation", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit"] , "methodName" : "setOrientationOfPolymerisation, addCoding, setCode"} **/
						, substancepolymer.getSbstncPlmrRptRptntRnttnfPlmrstnCcCdngCDsplay() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.orientationOfPolymerisation", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit"] , "methodName" : "setOrientationOfPolymerisation, addCoding, setDisplay"} **/
						, substancepolymer.getSbstncPlmrRptRptntRnttnfPlmrstnCcCdngCSrSlctd() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.orientationOfPolymerisation", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit"] , "methodName" : "setOrientationOfPolymerisation, addCoding, setUserSelected"} **/
						, substancepolymer.getSbstncPlmrRptRptntRnttnfPlmrstnCcTxt() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.orientationOfPolymerisation", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit"] , "methodName" : "setOrientationOfPolymerisation, setText"} **/
						));
Substancepolymerobj.setRepeatUnit(HapiFHIRHelpers.createstring(substancepolymer.getSbstncPlmrRptRptntRptntStrng() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.repeatUnit", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit"] , "methodName" : "setRepeatUnit"} **/
						));
Substancepolymerobj.setAmount(HapiFHIRHelpers.createSubstanceAmount(substancepolymer.getSbstncPlmrRptRptntMntSbstncmnt() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.amount", "datatype" : "SubstanceAmount", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit"] , "methodName" : "setAmount"} **/
						));
Substancepolymerobj.setDegree(HapiFHIRHelpers.createCodeableConcept(substancepolymer.getSbstncPlmrRptRptntDgrfPlmrstnDgrCcCdngCSstm() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.degree", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation"] , "methodName" : "setDegree, addCoding, setSystem"} **/
						, substancepolymer.getSbstncPlmrRptRptntDgrfPlmrstnDgrCcCdngCVrsn() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.degree", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation"] , "methodName" : "setDegree, addCoding, setVersion"} **/
						, substancepolymer.getSbstncPlmrRptRptntDgrfPlmrstnDgrCcCdngCCde() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.degree", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation"] , "methodName" : "setDegree, addCoding, setCode"} **/
						, substancepolymer.getSbstncPlmrRptRptntDgrfPlmrstnDgrCcCdngCDsplay() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.degree", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation"] , "methodName" : "setDegree, addCoding, setDisplay"} **/
						, substancepolymer.getSbstncPlmrRptRptntDgrfPlmrstnDgrCcCdngCSrSlctd() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.degree", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation"] , "methodName" : "setDegree, addCoding, setUserSelected"} **/
						, substancepolymer.getSbstncPlmrRptRptntDgrfPlmrstnDgrCcTxt() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.degree", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation"] , "methodName" : "setDegree, setText"} **/
						));
Substancepolymerobj.setAmount(HapiFHIRHelpers.createSubstanceAmount(substancepolymer.getSbstncPlmrRptRptntDgrfPlmrstnMntSbstncmnt() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.amount", "datatype" : "SubstanceAmount", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation"] , "methodName" : "setAmount"} **/
						));
Substancepolymerobj.setType(HapiFHIRHelpers.createCodeableConcept(substancepolymer.getSbstncPlmrRptRptntSrTpCcCdngCSstm() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.type", "datatype" : "CodeableConcept, Coding, uri", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setType, addCoding, setSystem"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTpCcCdngCVrsn() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setType, addCoding, setVersion"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTpCcCdngCCde() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.type", "datatype" : "CodeableConcept, Coding, code", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setType, addCoding, setCode"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTpCcCdngCDsplay() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.type", "datatype" : "CodeableConcept, Coding, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setType, addCoding, setDisplay"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTpCcCdngCSrSlctd() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.type", "datatype" : "CodeableConcept, Coding, boolean", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setType, addCoding, setUserSelected"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTpCcTxt() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.type", "datatype" : "CodeableConcept, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setType, setText"} **/
						));
Substancepolymerobj.setRepresentation(HapiFHIRHelpers.createstring(substancepolymer.getSbstncPlmrRptRptntSrRprsnttnStrng() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.representation", "datatype" : "string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setRepresentation"} **/
						));
Substancepolymerobj.setAttachment(HapiFHIRHelpers.createAttachment(substancepolymer.getSbstncPlmrRptRptntSrTmntTtchmntDta() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.attachment", "datatype" : "Attachment, base64Binary", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setAttachment, setData"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTmntTtchmntHsh() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.attachment", "datatype" : "Attachment, base64Binary", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setAttachment, setHash"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTmntTtchmntCntntTpe() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.attachment", "datatype" : "Attachment, code", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setAttachment, setContentType"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTmntTtchmntLngge() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.attachment", "datatype" : "Attachment, code", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setAttachment, setLanguage"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTmntTtchmntCrtn() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.attachment", "datatype" : "Attachment, dateTime", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setAttachment, setCreation"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTmntTtchmntTtle() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.attachment", "datatype" : "Attachment, string", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setAttachment, setTitle"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTmntTtchmntSze() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.attachment", "datatype" : "Attachment, unsignedInt", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setAttachment, setSize"} **/
						, substancepolymer.getSbstncPlmrRptRptntSrTmntTtchmntRl() /** { "tree" :"SubstancePolymer.repeat.repeatUnit.structuralRepresentation.attachment", "datatype" : "Attachment, url", "cardinality" : "ZeroOne", "elementtree" : ["addRepeat", "addRepeatUnit", "addDegreeOfPolymerisation", "addStructuralRepresentation"] , "methodName" : "setAttachment, setUrl"} **/
		));
	}
}
